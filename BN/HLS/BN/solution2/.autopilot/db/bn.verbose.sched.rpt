

================================================================
== Vivado HLS Report for 'bn'
================================================================
* Date:           Thu Mar  2 11:13:34 2023

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        BN
* Solution:       solution2
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.750|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   61|   61|   61|   61|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |   59|   59|        32|          4|          1|     8|    yes   |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 4, depth = 32


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 34
* Pipeline : 1
  Pipeline-0 : II = 4, D = 32, States = { 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 34 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 2 
34 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%result_pack_0_V_1 = alloca i64"   --->   Operation 35 'alloca' 'result_pack_0_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%result_pack_1_V_1 = alloca i64"   --->   Operation 36 'alloca' 'result_pack_1_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%result_pack_2_V_1 = alloca i64"   --->   Operation 37 'alloca' 'result_pack_2_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%result_pack_3_V_1 = alloca i64"   --->   Operation 38 'alloca' 'result_pack_3_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (1.00ns)   --->   "%out_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %out_V)"   --->   Operation 39 'read' 'out_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 40 [1/1] (1.00ns)   --->   "%moving_variance_V_re = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %moving_variance_V)"   --->   Operation 40 'read' 'moving_variance_V_re' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 41 [1/1] (1.00ns)   --->   "%moving_mean_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %moving_mean_V)"   --->   Operation 41 'read' 'moving_mean_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 42 [1/1] (1.00ns)   --->   "%gamma_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %gamma_V)"   --->   Operation 42 'read' 'gamma_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 43 [1/1] (1.00ns)   --->   "%beta_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %beta_V)"   --->   Operation 43 'read' 'beta_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 44 [1/1] (1.00ns)   --->   "%in_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %in_V)"   --->   Operation 44 'read' 'in_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%tmp_31 = call i29 @_ssdm_op_PartSelect.i29.i32.i32.i32(i32 %out_V_read, i32 3, i32 31)"   --->   Operation 45 'partselect' 'tmp_31' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%p_cast35 = zext i29 %tmp_31 to i30"   --->   Operation 46 'zext' 'p_cast35' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%tmp_32 = call i29 @_ssdm_op_PartSelect.i29.i32.i32.i32(i32 %moving_variance_V_re, i32 3, i32 31)"   --->   Operation 47 'partselect' 'tmp_32' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%p_cast34 = zext i29 %tmp_32 to i30"   --->   Operation 48 'zext' 'p_cast34' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%tmp_33 = call i29 @_ssdm_op_PartSelect.i29.i32.i32.i32(i32 %moving_mean_V_read, i32 3, i32 31)"   --->   Operation 49 'partselect' 'tmp_33' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%p_cast33 = zext i29 %tmp_33 to i30"   --->   Operation 50 'zext' 'p_cast33' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%tmp_34 = call i29 @_ssdm_op_PartSelect.i29.i32.i32.i32(i32 %gamma_V_read, i32 3, i32 31)"   --->   Operation 51 'partselect' 'tmp_34' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%p_cast32 = zext i29 %tmp_34 to i30"   --->   Operation 52 'zext' 'p_cast32' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%tmp_35 = call i29 @_ssdm_op_PartSelect.i29.i32.i32.i32(i32 %beta_V_read, i32 3, i32 31)"   --->   Operation 53 'partselect' 'tmp_35' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%p_cast31 = zext i29 %tmp_35 to i30"   --->   Operation 54 'zext' 'p_cast31' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%tmp_36 = call i29 @_ssdm_op_PartSelect.i29.i32.i32.i32(i32 %in_V_read, i32 3, i32 31)"   --->   Operation 55 'partselect' 'tmp_36' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%p_cast = zext i29 %tmp_36 to i30"   --->   Operation 56 'zext' 'p_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %OUT_r), !map !224"   --->   Operation 57 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %M_V), !map !230"   --->   Operation 58 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %M_M), !map !234"   --->   Operation 59 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %GAMMA), !map !238"   --->   Operation 60 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %BETA), !map !242"   --->   Operation 61 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %IN_r), !map !246"   --->   Operation 62 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([3 x i8]* @bn_str) nounwind"   --->   Operation 63 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [5 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [BN/bn.cpp:71]   --->   Operation 64 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %IN_r, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 99999, [3 x i8]* @p_str4, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [BN/bn.cpp:72]   --->   Operation 65 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %in_V, [10 x i8]* @mode, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 99999, [1 x i8]* @bundle, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [BN/bn.cpp:72]   --->   Operation 66 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %BETA, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 99999, [5 x i8]* @p_str6, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [BN/bn.cpp:73]   --->   Operation 67 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %beta_V, [10 x i8]* @mode1, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 99999, [1 x i8]* @bundle2, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [BN/bn.cpp:73]   --->   Operation 68 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %GAMMA, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 99999, [6 x i8]* @p_str7, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [BN/bn.cpp:74]   --->   Operation 69 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %gamma_V, [10 x i8]* @mode3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 99999, [1 x i8]* @bundle4, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [BN/bn.cpp:74]   --->   Operation 70 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 71 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %M_M, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 99999, [4 x i8]* @p_str8, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [BN/bn.cpp:75]   --->   Operation 71 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %moving_mean_V, [10 x i8]* @mode5, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 99999, [1 x i8]* @bundle6, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [BN/bn.cpp:75]   --->   Operation 72 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %M_V, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 99999, [4 x i8]* @p_str9, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [BN/bn.cpp:76]   --->   Operation 73 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 74 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %moving_variance_V, [10 x i8]* @mode7, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 99999, [1 x i8]* @bundle8, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [BN/bn.cpp:76]   --->   Operation 74 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 75 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %OUT_r, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 99999, [4 x i8]* @p_str10, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [BN/bn.cpp:77]   --->   Operation 75 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 76 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %out_V, [10 x i8]* @mode9, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 99999, [1 x i8]* @bundle10, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [BN/bn.cpp:77]   --->   Operation 76 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 77 [1/1] (1.76ns)   --->   "br label %0" [BN/bn.cpp:87]   --->   Operation 77 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 2.46>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "%i_0 = phi i6 [ 0, %arrayctor.loop1.preheader ], [ %i, %hls_label_0 ]"   --->   Operation 78 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (0.00ns)   --->   "%tmp_37 = call i1 @_ssdm_op_BitSelect.i1.i6.i32(i6 %i_0, i32 5)" [BN/bn.cpp:87]   --->   Operation 79 'bitselect' 'tmp_37' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 80 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 80 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 81 [1/1] (0.00ns)   --->   "br i1 %tmp_37, label %1, label %hls_label_0" [BN/bn.cpp:87]   --->   Operation 81 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 82 [1/1] (0.00ns)   --->   "%zext_ln321 = zext i6 %i_0 to i30" [BN/bn.cpp:91]   --->   Operation 82 'zext' 'zext_ln321' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_2 : Operation 83 [1/1] (2.46ns)   --->   "%add_ln321 = add i30 %p_cast, %zext_ln321" [BN/bn.cpp:91]   --->   Operation 83 'add' 'add_ln321' <Predicate = (!tmp_37)> <Delay = 2.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 84 [1/1] (2.46ns)   --->   "%add_ln321_1 = add i30 %p_cast31, %zext_ln321" [BN/bn.cpp:92]   --->   Operation 84 'add' 'add_ln321_1' <Predicate = (!tmp_37)> <Delay = 2.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 85 [1/1] (2.46ns)   --->   "%add_ln321_2 = add i30 %p_cast32, %zext_ln321" [BN/bn.cpp:93]   --->   Operation 85 'add' 'add_ln321_2' <Predicate = (!tmp_37)> <Delay = 2.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 86 [1/1] (2.46ns)   --->   "%add_ln321_3 = add i30 %p_cast33, %zext_ln321" [BN/bn.cpp:94]   --->   Operation 86 'add' 'add_ln321_3' <Predicate = (!tmp_37)> <Delay = 2.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 87 [1/1] (2.46ns)   --->   "%add_ln321_4 = add i30 %p_cast34, %zext_ln321" [BN/bn.cpp:95]   --->   Operation 87 'add' 'add_ln321_4' <Predicate = (!tmp_37)> <Delay = 2.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 8.75>
ST_3 : Operation 88 [1/1] (0.00ns)   --->   "%trunc_ln321 = trunc i6 %i_0 to i5" [BN/bn.cpp:91]   --->   Operation 88 'trunc' 'trunc_ln321' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "%zext_ln321_1 = zext i30 %add_ln321 to i64" [BN/bn.cpp:91]   --->   Operation 89 'zext' 'zext_ln321_1' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_3 : Operation 90 [1/1] (0.00ns)   --->   "%IN_addr = getelementptr i64* %IN_r, i64 %zext_ln321_1" [BN/bn.cpp:91]   --->   Operation 90 'getelementptr' 'IN_addr' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_3 : Operation 91 [7/7] (8.75ns)   --->   "%IN_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %IN_addr, i32 1)" [BN/bn.cpp:91]   --->   Operation 91 'readreq' 'IN_load_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 92 [1/1] (0.00ns)   --->   "%zext_ln321_2 = zext i30 %add_ln321_1 to i64" [BN/bn.cpp:92]   --->   Operation 92 'zext' 'zext_ln321_2' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_3 : Operation 93 [1/1] (0.00ns)   --->   "%BETA_addr = getelementptr i64* %BETA, i64 %zext_ln321_2" [BN/bn.cpp:92]   --->   Operation 93 'getelementptr' 'BETA_addr' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_3 : Operation 94 [7/7] (8.75ns)   --->   "%BETA_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %BETA_addr, i32 1)" [BN/bn.cpp:92]   --->   Operation 94 'readreq' 'BETA_load_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 95 [1/1] (0.00ns)   --->   "%zext_ln321_3 = zext i30 %add_ln321_2 to i64" [BN/bn.cpp:93]   --->   Operation 95 'zext' 'zext_ln321_3' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_3 : Operation 96 [1/1] (0.00ns)   --->   "%GAMMA_addr = getelementptr i64* %GAMMA, i64 %zext_ln321_3" [BN/bn.cpp:93]   --->   Operation 96 'getelementptr' 'GAMMA_addr' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_3 : Operation 97 [7/7] (8.75ns)   --->   "%GAMMA_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %GAMMA_addr, i32 1)" [BN/bn.cpp:93]   --->   Operation 97 'readreq' 'GAMMA_load_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 98 [1/1] (0.00ns)   --->   "%zext_ln321_4 = zext i30 %add_ln321_3 to i64" [BN/bn.cpp:94]   --->   Operation 98 'zext' 'zext_ln321_4' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_3 : Operation 99 [1/1] (0.00ns)   --->   "%M_M_addr = getelementptr i64* %M_M, i64 %zext_ln321_4" [BN/bn.cpp:94]   --->   Operation 99 'getelementptr' 'M_M_addr' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_3 : Operation 100 [7/7] (8.75ns)   --->   "%M_M_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_M_addr, i32 1)" [BN/bn.cpp:94]   --->   Operation 100 'readreq' 'M_M_load_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 101 [1/1] (0.00ns)   --->   "%zext_ln321_5 = zext i30 %add_ln321_4 to i64" [BN/bn.cpp:95]   --->   Operation 101 'zext' 'zext_ln321_5' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_3 : Operation 102 [1/1] (0.00ns)   --->   "%M_V_addr = getelementptr i64* %M_V, i64 %zext_ln321_5" [BN/bn.cpp:95]   --->   Operation 102 'getelementptr' 'M_V_addr' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_3 : Operation 103 [7/7] (8.75ns)   --->   "%M_V_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_V_addr, i32 1)" [BN/bn.cpp:95]   --->   Operation 103 'readreq' 'M_V_load_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 104 [1/1] (0.00ns)   --->   "%or_ln91 = or i5 %trunc_ln321, 1" [BN/bn.cpp:91]   --->   Operation 104 'or' 'or_ln91' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_3 : Operation 105 [1/1] (0.00ns)   --->   "%zext_ln321_6 = zext i5 %or_ln91 to i30" [BN/bn.cpp:91]   --->   Operation 105 'zext' 'zext_ln321_6' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_3 : Operation 106 [1/1] (2.46ns)   --->   "%add_ln321_5 = add i30 %p_cast, %zext_ln321_6" [BN/bn.cpp:91]   --->   Operation 106 'add' 'add_ln321_5' <Predicate = (!tmp_37)> <Delay = 2.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 107 [1/1] (2.46ns)   --->   "%add_ln321_6 = add i30 %p_cast31, %zext_ln321_6" [BN/bn.cpp:92]   --->   Operation 107 'add' 'add_ln321_6' <Predicate = (!tmp_37)> <Delay = 2.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 108 [1/1] (2.46ns)   --->   "%add_ln321_7 = add i30 %p_cast32, %zext_ln321_6" [BN/bn.cpp:93]   --->   Operation 108 'add' 'add_ln321_7' <Predicate = (!tmp_37)> <Delay = 2.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 109 [1/1] (2.46ns)   --->   "%add_ln321_8 = add i30 %p_cast33, %zext_ln321_6" [BN/bn.cpp:94]   --->   Operation 109 'add' 'add_ln321_8' <Predicate = (!tmp_37)> <Delay = 2.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 110 [1/1] (2.46ns)   --->   "%add_ln321_9 = add i30 %p_cast34, %zext_ln321_6" [BN/bn.cpp:95]   --->   Operation 110 'add' 'add_ln321_9' <Predicate = (!tmp_37)> <Delay = 2.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 8.75>
ST_4 : Operation 111 [6/7] (8.75ns)   --->   "%IN_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %IN_addr, i32 1)" [BN/bn.cpp:91]   --->   Operation 111 'readreq' 'IN_load_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 112 [6/7] (8.75ns)   --->   "%BETA_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %BETA_addr, i32 1)" [BN/bn.cpp:92]   --->   Operation 112 'readreq' 'BETA_load_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 113 [6/7] (8.75ns)   --->   "%GAMMA_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %GAMMA_addr, i32 1)" [BN/bn.cpp:93]   --->   Operation 113 'readreq' 'GAMMA_load_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 114 [6/7] (8.75ns)   --->   "%M_M_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_M_addr, i32 1)" [BN/bn.cpp:94]   --->   Operation 114 'readreq' 'M_M_load_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 115 [6/7] (8.75ns)   --->   "%M_V_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_V_addr, i32 1)" [BN/bn.cpp:95]   --->   Operation 115 'readreq' 'M_V_load_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 116 [1/1] (0.00ns)   --->   "%zext_ln321_7 = zext i30 %add_ln321_5 to i64" [BN/bn.cpp:91]   --->   Operation 116 'zext' 'zext_ln321_7' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_4 : Operation 117 [1/1] (0.00ns)   --->   "%IN_addr_1 = getelementptr i64* %IN_r, i64 %zext_ln321_7" [BN/bn.cpp:91]   --->   Operation 117 'getelementptr' 'IN_addr_1' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_4 : Operation 118 [7/7] (8.75ns)   --->   "%IN_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %IN_addr_1, i32 1)" [BN/bn.cpp:91]   --->   Operation 118 'readreq' 'IN_load_1_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 119 [1/1] (0.00ns)   --->   "%zext_ln321_8 = zext i30 %add_ln321_6 to i64" [BN/bn.cpp:92]   --->   Operation 119 'zext' 'zext_ln321_8' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_4 : Operation 120 [1/1] (0.00ns)   --->   "%BETA_addr_1 = getelementptr i64* %BETA, i64 %zext_ln321_8" [BN/bn.cpp:92]   --->   Operation 120 'getelementptr' 'BETA_addr_1' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_4 : Operation 121 [7/7] (8.75ns)   --->   "%BETA_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %BETA_addr_1, i32 1)" [BN/bn.cpp:92]   --->   Operation 121 'readreq' 'BETA_load_1_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 122 [1/1] (0.00ns)   --->   "%zext_ln321_9 = zext i30 %add_ln321_7 to i64" [BN/bn.cpp:93]   --->   Operation 122 'zext' 'zext_ln321_9' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_4 : Operation 123 [1/1] (0.00ns)   --->   "%GAMMA_addr_1 = getelementptr i64* %GAMMA, i64 %zext_ln321_9" [BN/bn.cpp:93]   --->   Operation 123 'getelementptr' 'GAMMA_addr_1' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_4 : Operation 124 [7/7] (8.75ns)   --->   "%GAMMA_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %GAMMA_addr_1, i32 1)" [BN/bn.cpp:93]   --->   Operation 124 'readreq' 'GAMMA_load_1_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 125 [1/1] (0.00ns)   --->   "%zext_ln321_10 = zext i30 %add_ln321_8 to i64" [BN/bn.cpp:94]   --->   Operation 125 'zext' 'zext_ln321_10' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_4 : Operation 126 [1/1] (0.00ns)   --->   "%M_M_addr_1 = getelementptr i64* %M_M, i64 %zext_ln321_10" [BN/bn.cpp:94]   --->   Operation 126 'getelementptr' 'M_M_addr_1' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_4 : Operation 127 [7/7] (8.75ns)   --->   "%M_M_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_M_addr_1, i32 1)" [BN/bn.cpp:94]   --->   Operation 127 'readreq' 'M_M_load_1_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 128 [1/1] (0.00ns)   --->   "%zext_ln321_11 = zext i30 %add_ln321_9 to i64" [BN/bn.cpp:95]   --->   Operation 128 'zext' 'zext_ln321_11' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_4 : Operation 129 [1/1] (0.00ns)   --->   "%M_V_addr_1 = getelementptr i64* %M_V, i64 %zext_ln321_11" [BN/bn.cpp:95]   --->   Operation 129 'getelementptr' 'M_V_addr_1' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_4 : Operation 130 [7/7] (8.75ns)   --->   "%M_V_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_V_addr_1, i32 1)" [BN/bn.cpp:95]   --->   Operation 130 'readreq' 'M_V_load_1_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 131 [1/1] (0.00ns)   --->   "%or_ln91_1 = or i5 %trunc_ln321, 2" [BN/bn.cpp:91]   --->   Operation 131 'or' 'or_ln91_1' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_4 : Operation 132 [1/1] (0.00ns)   --->   "%zext_ln321_12 = zext i5 %or_ln91_1 to i30" [BN/bn.cpp:91]   --->   Operation 132 'zext' 'zext_ln321_12' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_4 : Operation 133 [1/1] (2.46ns)   --->   "%add_ln321_10 = add i30 %p_cast, %zext_ln321_12" [BN/bn.cpp:91]   --->   Operation 133 'add' 'add_ln321_10' <Predicate = (!tmp_37)> <Delay = 2.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 134 [1/1] (2.46ns)   --->   "%add_ln321_11 = add i30 %p_cast31, %zext_ln321_12" [BN/bn.cpp:92]   --->   Operation 134 'add' 'add_ln321_11' <Predicate = (!tmp_37)> <Delay = 2.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 135 [1/1] (2.46ns)   --->   "%add_ln321_12 = add i30 %p_cast32, %zext_ln321_12" [BN/bn.cpp:93]   --->   Operation 135 'add' 'add_ln321_12' <Predicate = (!tmp_37)> <Delay = 2.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 136 [1/1] (2.46ns)   --->   "%add_ln321_13 = add i30 %p_cast33, %zext_ln321_12" [BN/bn.cpp:94]   --->   Operation 136 'add' 'add_ln321_13' <Predicate = (!tmp_37)> <Delay = 2.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 137 [1/1] (2.46ns)   --->   "%add_ln321_14 = add i30 %p_cast34, %zext_ln321_12" [BN/bn.cpp:95]   --->   Operation 137 'add' 'add_ln321_14' <Predicate = (!tmp_37)> <Delay = 2.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 8.75>
ST_5 : Operation 138 [5/7] (8.75ns)   --->   "%IN_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %IN_addr, i32 1)" [BN/bn.cpp:91]   --->   Operation 138 'readreq' 'IN_load_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 139 [5/7] (8.75ns)   --->   "%BETA_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %BETA_addr, i32 1)" [BN/bn.cpp:92]   --->   Operation 139 'readreq' 'BETA_load_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 140 [5/7] (8.75ns)   --->   "%GAMMA_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %GAMMA_addr, i32 1)" [BN/bn.cpp:93]   --->   Operation 140 'readreq' 'GAMMA_load_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 141 [5/7] (8.75ns)   --->   "%M_M_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_M_addr, i32 1)" [BN/bn.cpp:94]   --->   Operation 141 'readreq' 'M_M_load_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 142 [5/7] (8.75ns)   --->   "%M_V_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_V_addr, i32 1)" [BN/bn.cpp:95]   --->   Operation 142 'readreq' 'M_V_load_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 143 [6/7] (8.75ns)   --->   "%IN_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %IN_addr_1, i32 1)" [BN/bn.cpp:91]   --->   Operation 143 'readreq' 'IN_load_1_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 144 [6/7] (8.75ns)   --->   "%BETA_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %BETA_addr_1, i32 1)" [BN/bn.cpp:92]   --->   Operation 144 'readreq' 'BETA_load_1_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 145 [6/7] (8.75ns)   --->   "%GAMMA_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %GAMMA_addr_1, i32 1)" [BN/bn.cpp:93]   --->   Operation 145 'readreq' 'GAMMA_load_1_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 146 [6/7] (8.75ns)   --->   "%M_M_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_M_addr_1, i32 1)" [BN/bn.cpp:94]   --->   Operation 146 'readreq' 'M_M_load_1_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 147 [6/7] (8.75ns)   --->   "%M_V_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_V_addr_1, i32 1)" [BN/bn.cpp:95]   --->   Operation 147 'readreq' 'M_V_load_1_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 148 [1/1] (0.00ns)   --->   "%zext_ln321_13 = zext i30 %add_ln321_10 to i64" [BN/bn.cpp:91]   --->   Operation 148 'zext' 'zext_ln321_13' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_5 : Operation 149 [1/1] (0.00ns)   --->   "%IN_addr_2 = getelementptr i64* %IN_r, i64 %zext_ln321_13" [BN/bn.cpp:91]   --->   Operation 149 'getelementptr' 'IN_addr_2' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_5 : Operation 150 [7/7] (8.75ns)   --->   "%IN_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %IN_addr_2, i32 1)" [BN/bn.cpp:91]   --->   Operation 150 'readreq' 'IN_load_2_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 151 [1/1] (0.00ns)   --->   "%zext_ln321_14 = zext i30 %add_ln321_11 to i64" [BN/bn.cpp:92]   --->   Operation 151 'zext' 'zext_ln321_14' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_5 : Operation 152 [1/1] (0.00ns)   --->   "%BETA_addr_2 = getelementptr i64* %BETA, i64 %zext_ln321_14" [BN/bn.cpp:92]   --->   Operation 152 'getelementptr' 'BETA_addr_2' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_5 : Operation 153 [7/7] (8.75ns)   --->   "%BETA_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %BETA_addr_2, i32 1)" [BN/bn.cpp:92]   --->   Operation 153 'readreq' 'BETA_load_2_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 154 [1/1] (0.00ns)   --->   "%zext_ln321_15 = zext i30 %add_ln321_12 to i64" [BN/bn.cpp:93]   --->   Operation 154 'zext' 'zext_ln321_15' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_5 : Operation 155 [1/1] (0.00ns)   --->   "%GAMMA_addr_2 = getelementptr i64* %GAMMA, i64 %zext_ln321_15" [BN/bn.cpp:93]   --->   Operation 155 'getelementptr' 'GAMMA_addr_2' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_5 : Operation 156 [7/7] (8.75ns)   --->   "%GAMMA_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %GAMMA_addr_2, i32 1)" [BN/bn.cpp:93]   --->   Operation 156 'readreq' 'GAMMA_load_2_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 157 [1/1] (0.00ns)   --->   "%zext_ln321_16 = zext i30 %add_ln321_13 to i64" [BN/bn.cpp:94]   --->   Operation 157 'zext' 'zext_ln321_16' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_5 : Operation 158 [1/1] (0.00ns)   --->   "%M_M_addr_2 = getelementptr i64* %M_M, i64 %zext_ln321_16" [BN/bn.cpp:94]   --->   Operation 158 'getelementptr' 'M_M_addr_2' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_5 : Operation 159 [7/7] (8.75ns)   --->   "%M_M_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_M_addr_2, i32 1)" [BN/bn.cpp:94]   --->   Operation 159 'readreq' 'M_M_load_2_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 160 [1/1] (0.00ns)   --->   "%zext_ln321_17 = zext i30 %add_ln321_14 to i64" [BN/bn.cpp:95]   --->   Operation 160 'zext' 'zext_ln321_17' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_5 : Operation 161 [1/1] (0.00ns)   --->   "%M_V_addr_2 = getelementptr i64* %M_V, i64 %zext_ln321_17" [BN/bn.cpp:95]   --->   Operation 161 'getelementptr' 'M_V_addr_2' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_5 : Operation 162 [7/7] (8.75ns)   --->   "%M_V_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_V_addr_2, i32 1)" [BN/bn.cpp:95]   --->   Operation 162 'readreq' 'M_V_load_2_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 163 [1/1] (0.00ns)   --->   "%or_ln91_2 = or i5 %trunc_ln321, 3" [BN/bn.cpp:91]   --->   Operation 163 'or' 'or_ln91_2' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_5 : Operation 164 [1/1] (0.00ns)   --->   "%zext_ln321_18 = zext i5 %or_ln91_2 to i30" [BN/bn.cpp:91]   --->   Operation 164 'zext' 'zext_ln321_18' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_5 : Operation 165 [1/1] (2.46ns)   --->   "%add_ln321_15 = add i30 %p_cast, %zext_ln321_18" [BN/bn.cpp:91]   --->   Operation 165 'add' 'add_ln321_15' <Predicate = (!tmp_37)> <Delay = 2.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 166 [1/1] (2.46ns)   --->   "%add_ln321_16 = add i30 %p_cast31, %zext_ln321_18" [BN/bn.cpp:92]   --->   Operation 166 'add' 'add_ln321_16' <Predicate = (!tmp_37)> <Delay = 2.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 167 [1/1] (2.46ns)   --->   "%add_ln321_17 = add i30 %p_cast32, %zext_ln321_18" [BN/bn.cpp:93]   --->   Operation 167 'add' 'add_ln321_17' <Predicate = (!tmp_37)> <Delay = 2.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 168 [1/1] (2.46ns)   --->   "%add_ln321_18 = add i30 %p_cast33, %zext_ln321_18" [BN/bn.cpp:94]   --->   Operation 168 'add' 'add_ln321_18' <Predicate = (!tmp_37)> <Delay = 2.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 169 [1/1] (2.46ns)   --->   "%add_ln321_19 = add i30 %p_cast34, %zext_ln321_18" [BN/bn.cpp:95]   --->   Operation 169 'add' 'add_ln321_19' <Predicate = (!tmp_37)> <Delay = 2.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 170 [1/1] (2.46ns)   --->   "%add_ln321_20 = add i30 %p_cast35, %zext_ln321" [BN/bn.cpp:113]   --->   Operation 170 'add' 'add_ln321_20' <Predicate = (!tmp_37)> <Delay = 2.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 171 [1/1] (2.46ns)   --->   "%add_ln321_21 = add i30 %p_cast35, %zext_ln321_6" [BN/bn.cpp:113]   --->   Operation 171 'add' 'add_ln321_21' <Predicate = (!tmp_37)> <Delay = 2.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 172 [1/1] (2.46ns)   --->   "%add_ln321_22 = add i30 %p_cast35, %zext_ln321_12" [BN/bn.cpp:113]   --->   Operation 172 'add' 'add_ln321_22' <Predicate = (!tmp_37)> <Delay = 2.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 173 [1/1] (2.46ns)   --->   "%add_ln321_23 = add i30 %p_cast35, %zext_ln321_18" [BN/bn.cpp:113]   --->   Operation 173 'add' 'add_ln321_23' <Predicate = (!tmp_37)> <Delay = 2.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 174 [1/1] (1.82ns)   --->   "%i = add i6 4, %i_0" [BN/bn.cpp:87]   --->   Operation 174 'add' 'i' <Predicate = (!tmp_37)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 8.75>
ST_6 : Operation 175 [4/7] (8.75ns)   --->   "%IN_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %IN_addr, i32 1)" [BN/bn.cpp:91]   --->   Operation 175 'readreq' 'IN_load_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 176 [4/7] (8.75ns)   --->   "%BETA_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %BETA_addr, i32 1)" [BN/bn.cpp:92]   --->   Operation 176 'readreq' 'BETA_load_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 177 [4/7] (8.75ns)   --->   "%GAMMA_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %GAMMA_addr, i32 1)" [BN/bn.cpp:93]   --->   Operation 177 'readreq' 'GAMMA_load_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 178 [4/7] (8.75ns)   --->   "%M_M_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_M_addr, i32 1)" [BN/bn.cpp:94]   --->   Operation 178 'readreq' 'M_M_load_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 179 [4/7] (8.75ns)   --->   "%M_V_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_V_addr, i32 1)" [BN/bn.cpp:95]   --->   Operation 179 'readreq' 'M_V_load_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 180 [5/7] (8.75ns)   --->   "%IN_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %IN_addr_1, i32 1)" [BN/bn.cpp:91]   --->   Operation 180 'readreq' 'IN_load_1_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 181 [5/7] (8.75ns)   --->   "%BETA_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %BETA_addr_1, i32 1)" [BN/bn.cpp:92]   --->   Operation 181 'readreq' 'BETA_load_1_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 182 [5/7] (8.75ns)   --->   "%GAMMA_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %GAMMA_addr_1, i32 1)" [BN/bn.cpp:93]   --->   Operation 182 'readreq' 'GAMMA_load_1_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 183 [5/7] (8.75ns)   --->   "%M_M_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_M_addr_1, i32 1)" [BN/bn.cpp:94]   --->   Operation 183 'readreq' 'M_M_load_1_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 184 [5/7] (8.75ns)   --->   "%M_V_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_V_addr_1, i32 1)" [BN/bn.cpp:95]   --->   Operation 184 'readreq' 'M_V_load_1_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 185 [6/7] (8.75ns)   --->   "%IN_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %IN_addr_2, i32 1)" [BN/bn.cpp:91]   --->   Operation 185 'readreq' 'IN_load_2_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 186 [6/7] (8.75ns)   --->   "%BETA_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %BETA_addr_2, i32 1)" [BN/bn.cpp:92]   --->   Operation 186 'readreq' 'BETA_load_2_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 187 [6/7] (8.75ns)   --->   "%GAMMA_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %GAMMA_addr_2, i32 1)" [BN/bn.cpp:93]   --->   Operation 187 'readreq' 'GAMMA_load_2_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 188 [6/7] (8.75ns)   --->   "%M_M_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_M_addr_2, i32 1)" [BN/bn.cpp:94]   --->   Operation 188 'readreq' 'M_M_load_2_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 189 [6/7] (8.75ns)   --->   "%M_V_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_V_addr_2, i32 1)" [BN/bn.cpp:95]   --->   Operation 189 'readreq' 'M_V_load_2_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 190 [1/1] (0.00ns)   --->   "%zext_ln321_19 = zext i30 %add_ln321_15 to i64" [BN/bn.cpp:91]   --->   Operation 190 'zext' 'zext_ln321_19' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_6 : Operation 191 [1/1] (0.00ns)   --->   "%IN_addr_3 = getelementptr i64* %IN_r, i64 %zext_ln321_19" [BN/bn.cpp:91]   --->   Operation 191 'getelementptr' 'IN_addr_3' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_6 : Operation 192 [7/7] (8.75ns)   --->   "%IN_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %IN_addr_3, i32 1)" [BN/bn.cpp:91]   --->   Operation 192 'readreq' 'IN_load_3_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 193 [1/1] (0.00ns)   --->   "%zext_ln321_20 = zext i30 %add_ln321_16 to i64" [BN/bn.cpp:92]   --->   Operation 193 'zext' 'zext_ln321_20' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_6 : Operation 194 [1/1] (0.00ns)   --->   "%BETA_addr_3 = getelementptr i64* %BETA, i64 %zext_ln321_20" [BN/bn.cpp:92]   --->   Operation 194 'getelementptr' 'BETA_addr_3' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_6 : Operation 195 [7/7] (8.75ns)   --->   "%BETA_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %BETA_addr_3, i32 1)" [BN/bn.cpp:92]   --->   Operation 195 'readreq' 'BETA_load_3_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 196 [1/1] (0.00ns)   --->   "%zext_ln321_21 = zext i30 %add_ln321_17 to i64" [BN/bn.cpp:93]   --->   Operation 196 'zext' 'zext_ln321_21' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_6 : Operation 197 [1/1] (0.00ns)   --->   "%GAMMA_addr_3 = getelementptr i64* %GAMMA, i64 %zext_ln321_21" [BN/bn.cpp:93]   --->   Operation 197 'getelementptr' 'GAMMA_addr_3' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_6 : Operation 198 [7/7] (8.75ns)   --->   "%GAMMA_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %GAMMA_addr_3, i32 1)" [BN/bn.cpp:93]   --->   Operation 198 'readreq' 'GAMMA_load_3_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 199 [1/1] (0.00ns)   --->   "%zext_ln321_22 = zext i30 %add_ln321_18 to i64" [BN/bn.cpp:94]   --->   Operation 199 'zext' 'zext_ln321_22' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_6 : Operation 200 [1/1] (0.00ns)   --->   "%M_M_addr_3 = getelementptr i64* %M_M, i64 %zext_ln321_22" [BN/bn.cpp:94]   --->   Operation 200 'getelementptr' 'M_M_addr_3' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_6 : Operation 201 [7/7] (8.75ns)   --->   "%M_M_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_M_addr_3, i32 1)" [BN/bn.cpp:94]   --->   Operation 201 'readreq' 'M_M_load_3_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 202 [1/1] (0.00ns)   --->   "%zext_ln321_23 = zext i30 %add_ln321_19 to i64" [BN/bn.cpp:95]   --->   Operation 202 'zext' 'zext_ln321_23' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_6 : Operation 203 [1/1] (0.00ns)   --->   "%M_V_addr_3 = getelementptr i64* %M_V, i64 %zext_ln321_23" [BN/bn.cpp:95]   --->   Operation 203 'getelementptr' 'M_V_addr_3' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_6 : Operation 204 [7/7] (8.75ns)   --->   "%M_V_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_V_addr_3, i32 1)" [BN/bn.cpp:95]   --->   Operation 204 'readreq' 'M_V_load_3_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 8.75>
ST_7 : Operation 205 [3/7] (8.75ns)   --->   "%IN_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %IN_addr, i32 1)" [BN/bn.cpp:91]   --->   Operation 205 'readreq' 'IN_load_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 206 [3/7] (8.75ns)   --->   "%BETA_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %BETA_addr, i32 1)" [BN/bn.cpp:92]   --->   Operation 206 'readreq' 'BETA_load_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 207 [3/7] (8.75ns)   --->   "%GAMMA_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %GAMMA_addr, i32 1)" [BN/bn.cpp:93]   --->   Operation 207 'readreq' 'GAMMA_load_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 208 [3/7] (8.75ns)   --->   "%M_M_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_M_addr, i32 1)" [BN/bn.cpp:94]   --->   Operation 208 'readreq' 'M_M_load_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 209 [3/7] (8.75ns)   --->   "%M_V_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_V_addr, i32 1)" [BN/bn.cpp:95]   --->   Operation 209 'readreq' 'M_V_load_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 210 [4/7] (8.75ns)   --->   "%IN_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %IN_addr_1, i32 1)" [BN/bn.cpp:91]   --->   Operation 210 'readreq' 'IN_load_1_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 211 [4/7] (8.75ns)   --->   "%BETA_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %BETA_addr_1, i32 1)" [BN/bn.cpp:92]   --->   Operation 211 'readreq' 'BETA_load_1_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 212 [4/7] (8.75ns)   --->   "%GAMMA_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %GAMMA_addr_1, i32 1)" [BN/bn.cpp:93]   --->   Operation 212 'readreq' 'GAMMA_load_1_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 213 [4/7] (8.75ns)   --->   "%M_M_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_M_addr_1, i32 1)" [BN/bn.cpp:94]   --->   Operation 213 'readreq' 'M_M_load_1_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 214 [4/7] (8.75ns)   --->   "%M_V_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_V_addr_1, i32 1)" [BN/bn.cpp:95]   --->   Operation 214 'readreq' 'M_V_load_1_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 215 [5/7] (8.75ns)   --->   "%IN_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %IN_addr_2, i32 1)" [BN/bn.cpp:91]   --->   Operation 215 'readreq' 'IN_load_2_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 216 [5/7] (8.75ns)   --->   "%BETA_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %BETA_addr_2, i32 1)" [BN/bn.cpp:92]   --->   Operation 216 'readreq' 'BETA_load_2_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 217 [5/7] (8.75ns)   --->   "%GAMMA_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %GAMMA_addr_2, i32 1)" [BN/bn.cpp:93]   --->   Operation 217 'readreq' 'GAMMA_load_2_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 218 [5/7] (8.75ns)   --->   "%M_M_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_M_addr_2, i32 1)" [BN/bn.cpp:94]   --->   Operation 218 'readreq' 'M_M_load_2_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 219 [5/7] (8.75ns)   --->   "%M_V_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_V_addr_2, i32 1)" [BN/bn.cpp:95]   --->   Operation 219 'readreq' 'M_V_load_2_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 220 [6/7] (8.75ns)   --->   "%IN_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %IN_addr_3, i32 1)" [BN/bn.cpp:91]   --->   Operation 220 'readreq' 'IN_load_3_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 221 [6/7] (8.75ns)   --->   "%BETA_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %BETA_addr_3, i32 1)" [BN/bn.cpp:92]   --->   Operation 221 'readreq' 'BETA_load_3_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 222 [6/7] (8.75ns)   --->   "%GAMMA_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %GAMMA_addr_3, i32 1)" [BN/bn.cpp:93]   --->   Operation 222 'readreq' 'GAMMA_load_3_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 223 [6/7] (8.75ns)   --->   "%M_M_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_M_addr_3, i32 1)" [BN/bn.cpp:94]   --->   Operation 223 'readreq' 'M_M_load_3_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 224 [6/7] (8.75ns)   --->   "%M_V_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_V_addr_3, i32 1)" [BN/bn.cpp:95]   --->   Operation 224 'readreq' 'M_V_load_3_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 8.75>
ST_8 : Operation 225 [2/7] (8.75ns)   --->   "%IN_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %IN_addr, i32 1)" [BN/bn.cpp:91]   --->   Operation 225 'readreq' 'IN_load_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 226 [2/7] (8.75ns)   --->   "%BETA_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %BETA_addr, i32 1)" [BN/bn.cpp:92]   --->   Operation 226 'readreq' 'BETA_load_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 227 [2/7] (8.75ns)   --->   "%GAMMA_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %GAMMA_addr, i32 1)" [BN/bn.cpp:93]   --->   Operation 227 'readreq' 'GAMMA_load_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 228 [2/7] (8.75ns)   --->   "%M_M_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_M_addr, i32 1)" [BN/bn.cpp:94]   --->   Operation 228 'readreq' 'M_M_load_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 229 [2/7] (8.75ns)   --->   "%M_V_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_V_addr, i32 1)" [BN/bn.cpp:95]   --->   Operation 229 'readreq' 'M_V_load_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 230 [3/7] (8.75ns)   --->   "%IN_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %IN_addr_1, i32 1)" [BN/bn.cpp:91]   --->   Operation 230 'readreq' 'IN_load_1_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 231 [3/7] (8.75ns)   --->   "%BETA_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %BETA_addr_1, i32 1)" [BN/bn.cpp:92]   --->   Operation 231 'readreq' 'BETA_load_1_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 232 [3/7] (8.75ns)   --->   "%GAMMA_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %GAMMA_addr_1, i32 1)" [BN/bn.cpp:93]   --->   Operation 232 'readreq' 'GAMMA_load_1_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 233 [3/7] (8.75ns)   --->   "%M_M_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_M_addr_1, i32 1)" [BN/bn.cpp:94]   --->   Operation 233 'readreq' 'M_M_load_1_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 234 [3/7] (8.75ns)   --->   "%M_V_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_V_addr_1, i32 1)" [BN/bn.cpp:95]   --->   Operation 234 'readreq' 'M_V_load_1_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 235 [4/7] (8.75ns)   --->   "%IN_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %IN_addr_2, i32 1)" [BN/bn.cpp:91]   --->   Operation 235 'readreq' 'IN_load_2_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 236 [4/7] (8.75ns)   --->   "%BETA_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %BETA_addr_2, i32 1)" [BN/bn.cpp:92]   --->   Operation 236 'readreq' 'BETA_load_2_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 237 [4/7] (8.75ns)   --->   "%GAMMA_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %GAMMA_addr_2, i32 1)" [BN/bn.cpp:93]   --->   Operation 237 'readreq' 'GAMMA_load_2_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 238 [4/7] (8.75ns)   --->   "%M_M_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_M_addr_2, i32 1)" [BN/bn.cpp:94]   --->   Operation 238 'readreq' 'M_M_load_2_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 239 [4/7] (8.75ns)   --->   "%M_V_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_V_addr_2, i32 1)" [BN/bn.cpp:95]   --->   Operation 239 'readreq' 'M_V_load_2_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 240 [5/7] (8.75ns)   --->   "%IN_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %IN_addr_3, i32 1)" [BN/bn.cpp:91]   --->   Operation 240 'readreq' 'IN_load_3_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 241 [5/7] (8.75ns)   --->   "%BETA_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %BETA_addr_3, i32 1)" [BN/bn.cpp:92]   --->   Operation 241 'readreq' 'BETA_load_3_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 242 [5/7] (8.75ns)   --->   "%GAMMA_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %GAMMA_addr_3, i32 1)" [BN/bn.cpp:93]   --->   Operation 242 'readreq' 'GAMMA_load_3_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 243 [5/7] (8.75ns)   --->   "%M_M_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_M_addr_3, i32 1)" [BN/bn.cpp:94]   --->   Operation 243 'readreq' 'M_M_load_3_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 244 [5/7] (8.75ns)   --->   "%M_V_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_V_addr_3, i32 1)" [BN/bn.cpp:95]   --->   Operation 244 'readreq' 'M_V_load_3_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 8.75>
ST_9 : Operation 245 [1/7] (8.75ns)   --->   "%IN_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %IN_addr, i32 1)" [BN/bn.cpp:91]   --->   Operation 245 'readreq' 'IN_load_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 246 [1/7] (8.75ns)   --->   "%BETA_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %BETA_addr, i32 1)" [BN/bn.cpp:92]   --->   Operation 246 'readreq' 'BETA_load_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 247 [1/7] (8.75ns)   --->   "%GAMMA_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %GAMMA_addr, i32 1)" [BN/bn.cpp:93]   --->   Operation 247 'readreq' 'GAMMA_load_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 248 [1/7] (8.75ns)   --->   "%M_M_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_M_addr, i32 1)" [BN/bn.cpp:94]   --->   Operation 248 'readreq' 'M_M_load_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 249 [1/7] (8.75ns)   --->   "%M_V_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_V_addr, i32 1)" [BN/bn.cpp:95]   --->   Operation 249 'readreq' 'M_V_load_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 250 [2/7] (8.75ns)   --->   "%IN_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %IN_addr_1, i32 1)" [BN/bn.cpp:91]   --->   Operation 250 'readreq' 'IN_load_1_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 251 [2/7] (8.75ns)   --->   "%BETA_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %BETA_addr_1, i32 1)" [BN/bn.cpp:92]   --->   Operation 251 'readreq' 'BETA_load_1_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 252 [2/7] (8.75ns)   --->   "%GAMMA_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %GAMMA_addr_1, i32 1)" [BN/bn.cpp:93]   --->   Operation 252 'readreq' 'GAMMA_load_1_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 253 [2/7] (8.75ns)   --->   "%M_M_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_M_addr_1, i32 1)" [BN/bn.cpp:94]   --->   Operation 253 'readreq' 'M_M_load_1_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 254 [2/7] (8.75ns)   --->   "%M_V_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_V_addr_1, i32 1)" [BN/bn.cpp:95]   --->   Operation 254 'readreq' 'M_V_load_1_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 255 [3/7] (8.75ns)   --->   "%IN_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %IN_addr_2, i32 1)" [BN/bn.cpp:91]   --->   Operation 255 'readreq' 'IN_load_2_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 256 [3/7] (8.75ns)   --->   "%BETA_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %BETA_addr_2, i32 1)" [BN/bn.cpp:92]   --->   Operation 256 'readreq' 'BETA_load_2_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 257 [3/7] (8.75ns)   --->   "%GAMMA_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %GAMMA_addr_2, i32 1)" [BN/bn.cpp:93]   --->   Operation 257 'readreq' 'GAMMA_load_2_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 258 [3/7] (8.75ns)   --->   "%M_M_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_M_addr_2, i32 1)" [BN/bn.cpp:94]   --->   Operation 258 'readreq' 'M_M_load_2_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 259 [3/7] (8.75ns)   --->   "%M_V_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_V_addr_2, i32 1)" [BN/bn.cpp:95]   --->   Operation 259 'readreq' 'M_V_load_2_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 260 [4/7] (8.75ns)   --->   "%IN_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %IN_addr_3, i32 1)" [BN/bn.cpp:91]   --->   Operation 260 'readreq' 'IN_load_3_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 261 [4/7] (8.75ns)   --->   "%BETA_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %BETA_addr_3, i32 1)" [BN/bn.cpp:92]   --->   Operation 261 'readreq' 'BETA_load_3_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 262 [4/7] (8.75ns)   --->   "%GAMMA_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %GAMMA_addr_3, i32 1)" [BN/bn.cpp:93]   --->   Operation 262 'readreq' 'GAMMA_load_3_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 263 [4/7] (8.75ns)   --->   "%M_M_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_M_addr_3, i32 1)" [BN/bn.cpp:94]   --->   Operation 263 'readreq' 'M_M_load_3_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 264 [4/7] (8.75ns)   --->   "%M_V_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_V_addr_3, i32 1)" [BN/bn.cpp:95]   --->   Operation 264 'readreq' 'M_V_load_3_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 8.75>
ST_10 : Operation 265 [1/1] (8.75ns)   --->   "%IN_addr_read = call i64 @_ssdm_op_Read.m_axi.i64P(i64* %IN_addr)" [BN/bn.cpp:91]   --->   Operation 265 'read' 'IN_addr_read' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 266 [1/1] (8.75ns)   --->   "%BETA_addr_read = call i64 @_ssdm_op_Read.m_axi.i64P(i64* %BETA_addr)" [BN/bn.cpp:92]   --->   Operation 266 'read' 'BETA_addr_read' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 267 [1/1] (8.75ns)   --->   "%GAMMA_addr_read = call i64 @_ssdm_op_Read.m_axi.i64P(i64* %GAMMA_addr)" [BN/bn.cpp:93]   --->   Operation 267 'read' 'GAMMA_addr_read' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 268 [1/1] (8.75ns)   --->   "%M_M_addr_read = call i64 @_ssdm_op_Read.m_axi.i64P(i64* %M_M_addr)" [BN/bn.cpp:94]   --->   Operation 268 'read' 'M_M_addr_read' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 269 [1/1] (8.75ns)   --->   "%M_V_addr_read = call i64 @_ssdm_op_Read.m_axi.i64P(i64* %M_V_addr)" [BN/bn.cpp:95]   --->   Operation 269 'read' 'M_V_addr_read' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 270 [1/1] (0.00ns)   --->   "%trunc_ln339 = trunc i64 %IN_addr_read to i16" [BN/bn.cpp:96]   --->   Operation 270 'trunc' 'trunc_ln339' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_10 : Operation 271 [1/1] (0.00ns)   --->   "%trunc_ln339_1 = trunc i64 %M_M_addr_read to i16" [BN/bn.cpp:99]   --->   Operation 271 'trunc' 'trunc_ln339_1' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_10 : Operation 272 [1/1] (0.00ns)   --->   "%trunc_ln339_2 = trunc i64 %M_V_addr_read to i16" [BN/bn.cpp:100]   --->   Operation 272 'trunc' 'trunc_ln339_2' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_10 : Operation 273 [1/7] (8.75ns)   --->   "%IN_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %IN_addr_1, i32 1)" [BN/bn.cpp:91]   --->   Operation 273 'readreq' 'IN_load_1_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 274 [1/7] (8.75ns)   --->   "%BETA_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %BETA_addr_1, i32 1)" [BN/bn.cpp:92]   --->   Operation 274 'readreq' 'BETA_load_1_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 275 [1/7] (8.75ns)   --->   "%GAMMA_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %GAMMA_addr_1, i32 1)" [BN/bn.cpp:93]   --->   Operation 275 'readreq' 'GAMMA_load_1_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 276 [1/7] (8.75ns)   --->   "%M_M_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_M_addr_1, i32 1)" [BN/bn.cpp:94]   --->   Operation 276 'readreq' 'M_M_load_1_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 277 [1/7] (8.75ns)   --->   "%M_V_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_V_addr_1, i32 1)" [BN/bn.cpp:95]   --->   Operation 277 'readreq' 'M_V_load_1_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 278 [2/7] (8.75ns)   --->   "%IN_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %IN_addr_2, i32 1)" [BN/bn.cpp:91]   --->   Operation 278 'readreq' 'IN_load_2_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 279 [2/7] (8.75ns)   --->   "%BETA_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %BETA_addr_2, i32 1)" [BN/bn.cpp:92]   --->   Operation 279 'readreq' 'BETA_load_2_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 280 [2/7] (8.75ns)   --->   "%GAMMA_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %GAMMA_addr_2, i32 1)" [BN/bn.cpp:93]   --->   Operation 280 'readreq' 'GAMMA_load_2_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 281 [2/7] (8.75ns)   --->   "%M_M_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_M_addr_2, i32 1)" [BN/bn.cpp:94]   --->   Operation 281 'readreq' 'M_M_load_2_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 282 [2/7] (8.75ns)   --->   "%M_V_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_V_addr_2, i32 1)" [BN/bn.cpp:95]   --->   Operation 282 'readreq' 'M_V_load_2_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 283 [3/7] (8.75ns)   --->   "%IN_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %IN_addr_3, i32 1)" [BN/bn.cpp:91]   --->   Operation 283 'readreq' 'IN_load_3_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 284 [3/7] (8.75ns)   --->   "%BETA_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %BETA_addr_3, i32 1)" [BN/bn.cpp:92]   --->   Operation 284 'readreq' 'BETA_load_3_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 285 [3/7] (8.75ns)   --->   "%GAMMA_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %GAMMA_addr_3, i32 1)" [BN/bn.cpp:93]   --->   Operation 285 'readreq' 'GAMMA_load_3_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 286 [3/7] (8.75ns)   --->   "%M_M_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_M_addr_3, i32 1)" [BN/bn.cpp:94]   --->   Operation 286 'readreq' 'M_M_load_3_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 287 [3/7] (8.75ns)   --->   "%M_V_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_V_addr_3, i32 1)" [BN/bn.cpp:95]   --->   Operation 287 'readreq' 'M_V_load_3_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 288 [1/1] (0.00ns)   --->   "%trunc_ln1118 = trunc i64 %GAMMA_addr_read to i16" [BN/bn.cpp:107]   --->   Operation 288 'trunc' 'trunc_ln1118' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_10 : Operation 289 [1/1] (0.00ns)   --->   "%trunc_ln728 = trunc i64 %BETA_addr_read to i16" [BN/bn.cpp:107]   --->   Operation 289 'trunc' 'trunc_ln728' <Predicate = (!tmp_37)> <Delay = 0.00>

State 11 <SV = 10> <Delay = 8.75>
ST_11 : Operation 290 [1/1] (8.75ns)   --->   "%IN_addr_1_read = call i64 @_ssdm_op_Read.m_axi.i64P(i64* %IN_addr_1)" [BN/bn.cpp:91]   --->   Operation 290 'read' 'IN_addr_1_read' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 291 [1/1] (8.75ns)   --->   "%BETA_addr_1_read = call i64 @_ssdm_op_Read.m_axi.i64P(i64* %BETA_addr_1)" [BN/bn.cpp:92]   --->   Operation 291 'read' 'BETA_addr_1_read' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 292 [1/1] (8.75ns)   --->   "%GAMMA_addr_1_read = call i64 @_ssdm_op_Read.m_axi.i64P(i64* %GAMMA_addr_1)" [BN/bn.cpp:93]   --->   Operation 292 'read' 'GAMMA_addr_1_read' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 293 [1/1] (8.75ns)   --->   "%M_M_addr_1_read = call i64 @_ssdm_op_Read.m_axi.i64P(i64* %M_M_addr_1)" [BN/bn.cpp:94]   --->   Operation 293 'read' 'M_M_addr_1_read' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 294 [1/1] (8.75ns)   --->   "%M_V_addr_1_read = call i64 @_ssdm_op_Read.m_axi.i64P(i64* %M_V_addr_1)" [BN/bn.cpp:95]   --->   Operation 294 'read' 'M_V_addr_1_read' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 295 [1/1] (0.00ns)   --->   "%in_m_1_V = trunc i64 %IN_addr_1_read to i16" [BN/bn.cpp:96]   --->   Operation 295 'trunc' 'in_m_1_V' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_11 : Operation 296 [1/1] (0.00ns)   --->   "%moving_mean_m_1_V = trunc i64 %M_M_addr_1_read to i16" [BN/bn.cpp:99]   --->   Operation 296 'trunc' 'moving_mean_m_1_V' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_11 : Operation 297 [1/1] (0.00ns)   --->   "%moving_variance_m_1 = trunc i64 %M_V_addr_1_read to i16" [BN/bn.cpp:100]   --->   Operation 297 'trunc' 'moving_variance_m_1' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_11 : Operation 298 [1/7] (8.75ns)   --->   "%IN_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %IN_addr_2, i32 1)" [BN/bn.cpp:91]   --->   Operation 298 'readreq' 'IN_load_2_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 299 [1/7] (8.75ns)   --->   "%BETA_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %BETA_addr_2, i32 1)" [BN/bn.cpp:92]   --->   Operation 299 'readreq' 'BETA_load_2_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 300 [1/7] (8.75ns)   --->   "%GAMMA_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %GAMMA_addr_2, i32 1)" [BN/bn.cpp:93]   --->   Operation 300 'readreq' 'GAMMA_load_2_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 301 [1/7] (8.75ns)   --->   "%M_M_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_M_addr_2, i32 1)" [BN/bn.cpp:94]   --->   Operation 301 'readreq' 'M_M_load_2_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 302 [1/7] (8.75ns)   --->   "%M_V_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_V_addr_2, i32 1)" [BN/bn.cpp:95]   --->   Operation 302 'readreq' 'M_V_load_2_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 303 [2/7] (8.75ns)   --->   "%IN_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %IN_addr_3, i32 1)" [BN/bn.cpp:91]   --->   Operation 303 'readreq' 'IN_load_3_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 304 [2/7] (8.75ns)   --->   "%BETA_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %BETA_addr_3, i32 1)" [BN/bn.cpp:92]   --->   Operation 304 'readreq' 'BETA_load_3_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 305 [2/7] (8.75ns)   --->   "%GAMMA_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %GAMMA_addr_3, i32 1)" [BN/bn.cpp:93]   --->   Operation 305 'readreq' 'GAMMA_load_3_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 306 [2/7] (8.75ns)   --->   "%M_M_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_M_addr_3, i32 1)" [BN/bn.cpp:94]   --->   Operation 306 'readreq' 'M_M_load_3_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 307 [2/7] (8.75ns)   --->   "%M_V_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_V_addr_3, i32 1)" [BN/bn.cpp:95]   --->   Operation 307 'readreq' 'M_V_load_3_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 308 [1/1] (0.00ns)   --->   "%sext_ln703 = sext i16 %trunc_ln339_2 to i17" [BN/bn.cpp:104]   --->   Operation 308 'sext' 'sext_ln703' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_11 : Operation 309 [1/1] (2.07ns)   --->   "%add_ln1192 = add nsw i17 1, %sext_ln703" [BN/bn.cpp:104]   --->   Operation 309 'add' 'add_ln1192' <Predicate = (!tmp_37)> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 310 [1/1] (0.00ns)   --->   "%tmp_38 = call i1 @_ssdm_op_BitSelect.i1.i17.i32(i17 %add_ln1192, i32 16)" [BN/bn.cpp:104]   --->   Operation 310 'bitselect' 'tmp_38' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_11 : Operation 311 [1/1] (2.07ns)   --->   "%add_ln703 = add i16 1, %trunc_ln339_2" [BN/bn.cpp:104]   --->   Operation 311 'add' 'add_ln703' <Predicate = (!tmp_37)> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 312 [1/1] (0.00ns)   --->   "%tmp_39 = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 %add_ln703, i32 15)" [BN/bn.cpp:104]   --->   Operation 312 'bitselect' 'tmp_39' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_11 : Operation 313 [1/1] (0.00ns) (grouped into LUT with out node select_ln388)   --->   "%xor_ln786 = xor i1 %tmp_39, true" [BN/bn.cpp:104]   --->   Operation 313 'xor' 'xor_ln786' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 314 [1/1] (0.00ns) (grouped into LUT with out node select_ln388)   --->   "%and_ln786 = and i1 %tmp_38, %xor_ln786" [BN/bn.cpp:104]   --->   Operation 314 'and' 'and_ln786' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 315 [1/1] (0.00ns) (grouped into LUT with out node x_V)   --->   "%xor_ln340_4 = xor i1 %tmp_38, %tmp_39" [BN/bn.cpp:104]   --->   Operation 315 'xor' 'xor_ln340_4' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 316 [1/1] (0.00ns) (grouped into LUT with out node x_V)   --->   "%xor_ln340 = xor i1 %tmp_38, true" [BN/bn.cpp:104]   --->   Operation 316 'xor' 'xor_ln340' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 317 [1/1] (0.00ns) (grouped into LUT with out node x_V)   --->   "%or_ln340 = or i1 %tmp_39, %xor_ln340" [BN/bn.cpp:104]   --->   Operation 317 'or' 'or_ln340' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 318 [1/1] (0.00ns) (grouped into LUT with out node x_V)   --->   "%select_ln340 = select i1 %xor_ln340_4, i16 32767, i16 %add_ln703" [BN/bn.cpp:104]   --->   Operation 318 'select' 'select_ln340' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 319 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln388 = select i1 %and_ln786, i16 -32768, i16 %add_ln703" [BN/bn.cpp:104]   --->   Operation 319 'select' 'select_ln388' <Predicate = (!tmp_37)> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 320 [1/1] (0.97ns) (out node of the LUT)   --->   "%x_V = select i1 %or_ln340, i16 %select_ln340, i16 %select_ln388" [BN/bn.cpp:104]   --->   Operation 320 'select' 'x_V' <Predicate = (!tmp_37)> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 321 [1/1] (0.00ns)   --->   "%sext_ln703_1 = sext i16 %trunc_ln339 to i17" [BN/bn.cpp:105]   --->   Operation 321 'sext' 'sext_ln703_1' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_11 : Operation 322 [1/1] (0.00ns)   --->   "%sext_ln703_2 = sext i16 %trunc_ln339_1 to i17" [BN/bn.cpp:105]   --->   Operation 322 'sext' 'sext_ln703_2' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_11 : Operation 323 [1/1] (2.07ns)   --->   "%sub_ln1193 = sub i17 %sext_ln703_1, %sext_ln703_2" [BN/bn.cpp:105]   --->   Operation 323 'sub' 'sub_ln1193' <Predicate = (!tmp_37)> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 324 [1/1] (0.00ns)   --->   "%tmp_40 = call i1 @_ssdm_op_BitSelect.i1.i17.i32(i17 %sub_ln1193, i32 16)" [BN/bn.cpp:105]   --->   Operation 324 'bitselect' 'tmp_40' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_11 : Operation 325 [1/1] (0.00ns)   --->   "%trunc_ln703 = trunc i17 %sub_ln1193 to i16" [BN/bn.cpp:105]   --->   Operation 325 'trunc' 'trunc_ln703' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_11 : Operation 326 [1/1] (0.00ns)   --->   "%tmp_41 = call i1 @_ssdm_op_BitSelect.i1.i17.i32(i17 %sub_ln1193, i32 15)" [BN/bn.cpp:105]   --->   Operation 326 'bitselect' 'tmp_41' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_11 : Operation 327 [1/1] (0.00ns) (grouped into LUT with out node select_ln388_1)   --->   "%xor_ln786_1 = xor i1 %tmp_41, true" [BN/bn.cpp:105]   --->   Operation 327 'xor' 'xor_ln786_1' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 328 [1/1] (0.00ns) (grouped into LUT with out node select_ln388_1)   --->   "%and_ln786_4 = and i1 %tmp_40, %xor_ln786_1" [BN/bn.cpp:105]   --->   Operation 328 'and' 'and_ln786_4' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 329 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_3)   --->   "%xor_ln340_7 = xor i1 %tmp_40, %tmp_41" [BN/bn.cpp:105]   --->   Operation 329 'xor' 'xor_ln340_7' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 330 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_3)   --->   "%xor_ln340_1 = xor i1 %tmp_40, true" [BN/bn.cpp:105]   --->   Operation 330 'xor' 'xor_ln340_1' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 331 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_3)   --->   "%or_ln340_1 = or i1 %tmp_41, %xor_ln340_1" [BN/bn.cpp:105]   --->   Operation 331 'or' 'or_ln340_1' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 332 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_3)   --->   "%select_ln340_2 = select i1 %xor_ln340_7, i16 32767, i16 %trunc_ln703" [BN/bn.cpp:105]   --->   Operation 332 'select' 'select_ln340_2' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 333 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln388_1 = select i1 %and_ln786_4, i16 -32768, i16 %trunc_ln703" [BN/bn.cpp:105]   --->   Operation 333 'select' 'select_ln388_1' <Predicate = (!tmp_37)> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 334 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln340_3 = select i1 %or_ln340_1, i16 %select_ln340_2, i16 %select_ln388_1" [BN/bn.cpp:105]   --->   Operation 334 'select' 'select_ln340_3' <Predicate = (!tmp_37)> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 335 [1/1] (0.00ns)   --->   "%trunc_ln1118_1 = trunc i64 %GAMMA_addr_1_read to i16" [BN/bn.cpp:107]   --->   Operation 335 'trunc' 'trunc_ln1118_1' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_11 : Operation 336 [1/1] (0.00ns)   --->   "%trunc_ln728_1 = trunc i64 %BETA_addr_1_read to i16" [BN/bn.cpp:107]   --->   Operation 336 'trunc' 'trunc_ln728_1' <Predicate = (!tmp_37)> <Delay = 0.00>

State 12 <SV = 11> <Delay = 8.75>
ST_12 : Operation 337 [1/1] (8.75ns)   --->   "%IN_addr_2_read = call i64 @_ssdm_op_Read.m_axi.i64P(i64* %IN_addr_2)" [BN/bn.cpp:91]   --->   Operation 337 'read' 'IN_addr_2_read' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 338 [1/1] (8.75ns)   --->   "%BETA_addr_2_read = call i64 @_ssdm_op_Read.m_axi.i64P(i64* %BETA_addr_2)" [BN/bn.cpp:92]   --->   Operation 338 'read' 'BETA_addr_2_read' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 339 [1/1] (8.75ns)   --->   "%GAMMA_addr_2_read = call i64 @_ssdm_op_Read.m_axi.i64P(i64* %GAMMA_addr_2)" [BN/bn.cpp:93]   --->   Operation 339 'read' 'GAMMA_addr_2_read' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 340 [1/1] (8.75ns)   --->   "%M_M_addr_2_read = call i64 @_ssdm_op_Read.m_axi.i64P(i64* %M_M_addr_2)" [BN/bn.cpp:94]   --->   Operation 340 'read' 'M_M_addr_2_read' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 341 [1/1] (8.75ns)   --->   "%M_V_addr_2_read = call i64 @_ssdm_op_Read.m_axi.i64P(i64* %M_V_addr_2)" [BN/bn.cpp:95]   --->   Operation 341 'read' 'M_V_addr_2_read' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 342 [1/1] (0.00ns)   --->   "%in_m_2_V = trunc i64 %IN_addr_2_read to i16" [BN/bn.cpp:96]   --->   Operation 342 'trunc' 'in_m_2_V' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_12 : Operation 343 [1/1] (0.00ns)   --->   "%moving_mean_m_2_V = trunc i64 %M_M_addr_2_read to i16" [BN/bn.cpp:99]   --->   Operation 343 'trunc' 'moving_mean_m_2_V' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_12 : Operation 344 [1/1] (0.00ns)   --->   "%moving_variance_m_2 = trunc i64 %M_V_addr_2_read to i16" [BN/bn.cpp:100]   --->   Operation 344 'trunc' 'moving_variance_m_2' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_12 : Operation 345 [1/7] (8.75ns)   --->   "%IN_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %IN_addr_3, i32 1)" [BN/bn.cpp:91]   --->   Operation 345 'readreq' 'IN_load_3_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 346 [1/7] (8.75ns)   --->   "%BETA_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %BETA_addr_3, i32 1)" [BN/bn.cpp:92]   --->   Operation 346 'readreq' 'BETA_load_3_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 347 [1/7] (8.75ns)   --->   "%GAMMA_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %GAMMA_addr_3, i32 1)" [BN/bn.cpp:93]   --->   Operation 347 'readreq' 'GAMMA_load_3_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 348 [1/7] (8.75ns)   --->   "%M_M_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_M_addr_3, i32 1)" [BN/bn.cpp:94]   --->   Operation 348 'readreq' 'M_M_load_3_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 349 [1/7] (8.75ns)   --->   "%M_V_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_V_addr_3, i32 1)" [BN/bn.cpp:95]   --->   Operation 349 'readreq' 'M_V_load_3_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 350 [9/9] (7.98ns)   --->   "%x_sqrt_V = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106]   --->   Operation 350 'call' 'x_sqrt_V' <Predicate = (!tmp_37)> <Delay = 7.98> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_12 : Operation 351 [1/1] (0.00ns)   --->   "%sext_ln703_3 = sext i16 %moving_variance_m_1 to i17" [BN/bn.cpp:104]   --->   Operation 351 'sext' 'sext_ln703_3' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_12 : Operation 352 [1/1] (2.07ns)   --->   "%add_ln1192_2 = add nsw i17 1, %sext_ln703_3" [BN/bn.cpp:104]   --->   Operation 352 'add' 'add_ln1192_2' <Predicate = (!tmp_37)> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 353 [1/1] (0.00ns)   --->   "%tmp_48 = call i1 @_ssdm_op_BitSelect.i1.i17.i32(i17 %add_ln1192_2, i32 16)" [BN/bn.cpp:104]   --->   Operation 353 'bitselect' 'tmp_48' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_12 : Operation 354 [1/1] (2.07ns)   --->   "%add_ln703_18 = add i16 1, %moving_variance_m_1" [BN/bn.cpp:104]   --->   Operation 354 'add' 'add_ln703_18' <Predicate = (!tmp_37)> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 355 [1/1] (0.00ns)   --->   "%tmp_49 = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 %add_ln703_18, i32 15)" [BN/bn.cpp:104]   --->   Operation 355 'bitselect' 'tmp_49' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_12 : Operation 356 [1/1] (0.00ns) (grouped into LUT with out node select_ln388_3)   --->   "%xor_ln786_4 = xor i1 %tmp_49, true" [BN/bn.cpp:104]   --->   Operation 356 'xor' 'xor_ln786_4' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 357 [1/1] (0.00ns) (grouped into LUT with out node select_ln388_3)   --->   "%and_ln786_7 = and i1 %tmp_48, %xor_ln786_4" [BN/bn.cpp:104]   --->   Operation 357 'and' 'and_ln786_7' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 358 [1/1] (0.00ns) (grouped into LUT with out node x_V_1)   --->   "%xor_ln340_9 = xor i1 %tmp_48, %tmp_49" [BN/bn.cpp:104]   --->   Operation 358 'xor' 'xor_ln340_9' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 359 [1/1] (0.00ns) (grouped into LUT with out node x_V_1)   --->   "%xor_ln340_5 = xor i1 %tmp_48, true" [BN/bn.cpp:104]   --->   Operation 359 'xor' 'xor_ln340_5' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 360 [1/1] (0.00ns) (grouped into LUT with out node x_V_1)   --->   "%or_ln340_5 = or i1 %tmp_49, %xor_ln340_5" [BN/bn.cpp:104]   --->   Operation 360 'or' 'or_ln340_5' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 361 [1/1] (0.00ns) (grouped into LUT with out node x_V_1)   --->   "%select_ln340_5 = select i1 %xor_ln340_9, i16 32767, i16 %add_ln703_18" [BN/bn.cpp:104]   --->   Operation 361 'select' 'select_ln340_5' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 362 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln388_3 = select i1 %and_ln786_7, i16 -32768, i16 %add_ln703_18" [BN/bn.cpp:104]   --->   Operation 362 'select' 'select_ln388_3' <Predicate = (!tmp_37)> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 363 [1/1] (0.97ns) (out node of the LUT)   --->   "%x_V_1 = select i1 %or_ln340_5, i16 %select_ln340_5, i16 %select_ln388_3" [BN/bn.cpp:104]   --->   Operation 363 'select' 'x_V_1' <Predicate = (!tmp_37)> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 364 [1/1] (0.00ns)   --->   "%sext_ln703_4 = sext i16 %in_m_1_V to i17" [BN/bn.cpp:105]   --->   Operation 364 'sext' 'sext_ln703_4' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_12 : Operation 365 [1/1] (0.00ns)   --->   "%sext_ln703_5 = sext i16 %moving_mean_m_1_V to i17" [BN/bn.cpp:105]   --->   Operation 365 'sext' 'sext_ln703_5' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_12 : Operation 366 [1/1] (2.07ns)   --->   "%sub_ln1193_1 = sub i17 %sext_ln703_4, %sext_ln703_5" [BN/bn.cpp:105]   --->   Operation 366 'sub' 'sub_ln1193_1' <Predicate = (!tmp_37)> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 367 [1/1] (0.00ns)   --->   "%tmp_50 = call i1 @_ssdm_op_BitSelect.i1.i17.i32(i17 %sub_ln1193_1, i32 16)" [BN/bn.cpp:105]   --->   Operation 367 'bitselect' 'tmp_50' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_12 : Operation 368 [1/1] (0.00ns)   --->   "%trunc_ln703_1 = trunc i17 %sub_ln1193_1 to i16" [BN/bn.cpp:105]   --->   Operation 368 'trunc' 'trunc_ln703_1' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_12 : Operation 369 [1/1] (0.00ns)   --->   "%tmp_51 = call i1 @_ssdm_op_BitSelect.i1.i17.i32(i17 %sub_ln1193_1, i32 15)" [BN/bn.cpp:105]   --->   Operation 369 'bitselect' 'tmp_51' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_12 : Operation 370 [1/1] (0.00ns) (grouped into LUT with out node select_ln388_4)   --->   "%xor_ln786_5 = xor i1 %tmp_51, true" [BN/bn.cpp:105]   --->   Operation 370 'xor' 'xor_ln786_5' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 371 [1/1] (0.00ns) (grouped into LUT with out node select_ln388_4)   --->   "%and_ln786_8 = and i1 %tmp_50, %xor_ln786_5" [BN/bn.cpp:105]   --->   Operation 371 'and' 'and_ln786_8' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 372 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_14)   --->   "%xor_ln340_11 = xor i1 %tmp_50, %tmp_51" [BN/bn.cpp:105]   --->   Operation 372 'xor' 'xor_ln340_11' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 373 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_14)   --->   "%xor_ln340_6 = xor i1 %tmp_50, true" [BN/bn.cpp:105]   --->   Operation 373 'xor' 'xor_ln340_6' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 374 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_14)   --->   "%or_ln340_6 = or i1 %tmp_51, %xor_ln340_6" [BN/bn.cpp:105]   --->   Operation 374 'or' 'or_ln340_6' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 375 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_14)   --->   "%select_ln340_13 = select i1 %xor_ln340_11, i16 32767, i16 %trunc_ln703_1" [BN/bn.cpp:105]   --->   Operation 375 'select' 'select_ln340_13' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 376 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln388_4 = select i1 %and_ln786_8, i16 -32768, i16 %trunc_ln703_1" [BN/bn.cpp:105]   --->   Operation 376 'select' 'select_ln388_4' <Predicate = (!tmp_37)> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 377 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln340_14 = select i1 %or_ln340_6, i16 %select_ln340_13, i16 %select_ln388_4" [BN/bn.cpp:105]   --->   Operation 377 'select' 'select_ln340_14' <Predicate = (!tmp_37)> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 378 [1/1] (0.00ns)   --->   "%trunc_ln1118_2 = trunc i64 %GAMMA_addr_2_read to i16" [BN/bn.cpp:107]   --->   Operation 378 'trunc' 'trunc_ln1118_2' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_12 : Operation 379 [1/1] (0.00ns)   --->   "%trunc_ln728_2 = trunc i64 %BETA_addr_2_read to i16" [BN/bn.cpp:107]   --->   Operation 379 'trunc' 'trunc_ln728_2' <Predicate = (!tmp_37)> <Delay = 0.00>

State 13 <SV = 12> <Delay = 8.75>
ST_13 : Operation 380 [1/1] (8.75ns)   --->   "%IN_addr_3_read = call i64 @_ssdm_op_Read.m_axi.i64P(i64* %IN_addr_3)" [BN/bn.cpp:91]   --->   Operation 380 'read' 'IN_addr_3_read' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 381 [1/1] (8.75ns)   --->   "%BETA_addr_3_read = call i64 @_ssdm_op_Read.m_axi.i64P(i64* %BETA_addr_3)" [BN/bn.cpp:92]   --->   Operation 381 'read' 'BETA_addr_3_read' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 382 [1/1] (8.75ns)   --->   "%GAMMA_addr_3_read = call i64 @_ssdm_op_Read.m_axi.i64P(i64* %GAMMA_addr_3)" [BN/bn.cpp:93]   --->   Operation 382 'read' 'GAMMA_addr_3_read' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 383 [1/1] (8.75ns)   --->   "%M_M_addr_3_read = call i64 @_ssdm_op_Read.m_axi.i64P(i64* %M_M_addr_3)" [BN/bn.cpp:94]   --->   Operation 383 'read' 'M_M_addr_3_read' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 384 [1/1] (8.75ns)   --->   "%M_V_addr_3_read = call i64 @_ssdm_op_Read.m_axi.i64P(i64* %M_V_addr_3)" [BN/bn.cpp:95]   --->   Operation 384 'read' 'M_V_addr_3_read' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 385 [1/1] (0.00ns)   --->   "%in_m_3_V = trunc i64 %IN_addr_3_read to i16" [BN/bn.cpp:96]   --->   Operation 385 'trunc' 'in_m_3_V' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_13 : Operation 386 [1/1] (0.00ns)   --->   "%moving_mean_m_3_V = trunc i64 %M_M_addr_3_read to i16" [BN/bn.cpp:99]   --->   Operation 386 'trunc' 'moving_mean_m_3_V' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_13 : Operation 387 [1/1] (0.00ns)   --->   "%moving_variance_m_3 = trunc i64 %M_V_addr_3_read to i16" [BN/bn.cpp:100]   --->   Operation 387 'trunc' 'moving_variance_m_3' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_13 : Operation 388 [8/9] (8.27ns)   --->   "%x_sqrt_V = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106]   --->   Operation 388 'call' 'x_sqrt_V' <Predicate = (!tmp_37)> <Delay = 8.27> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_13 : Operation 389 [9/9] (7.98ns)   --->   "%x_sqrt_V_1 = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V_1)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106]   --->   Operation 389 'call' 'x_sqrt_V_1' <Predicate = (!tmp_37)> <Delay = 7.98> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_13 : Operation 390 [1/1] (0.00ns)   --->   "%sext_ln703_6 = sext i16 %moving_variance_m_2 to i17" [BN/bn.cpp:104]   --->   Operation 390 'sext' 'sext_ln703_6' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_13 : Operation 391 [1/1] (2.07ns)   --->   "%add_ln1192_4 = add nsw i17 1, %sext_ln703_6" [BN/bn.cpp:104]   --->   Operation 391 'add' 'add_ln1192_4' <Predicate = (!tmp_37)> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 392 [1/1] (0.00ns)   --->   "%tmp_58 = call i1 @_ssdm_op_BitSelect.i1.i17.i32(i17 %add_ln1192_4, i32 16)" [BN/bn.cpp:104]   --->   Operation 392 'bitselect' 'tmp_58' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_13 : Operation 393 [1/1] (2.07ns)   --->   "%add_ln703_19 = add i16 1, %moving_variance_m_2" [BN/bn.cpp:104]   --->   Operation 393 'add' 'add_ln703_19' <Predicate = (!tmp_37)> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 394 [1/1] (0.00ns)   --->   "%tmp_59 = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 %add_ln703_19, i32 15)" [BN/bn.cpp:104]   --->   Operation 394 'bitselect' 'tmp_59' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_13 : Operation 395 [1/1] (0.00ns) (grouped into LUT with out node select_ln388_6)   --->   "%xor_ln786_7 = xor i1 %tmp_59, true" [BN/bn.cpp:104]   --->   Operation 395 'xor' 'xor_ln786_7' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 396 [1/1] (0.00ns) (grouped into LUT with out node select_ln388_6)   --->   "%and_ln786_10 = and i1 %tmp_58, %xor_ln786_7" [BN/bn.cpp:104]   --->   Operation 396 'and' 'and_ln786_10' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 397 [1/1] (0.00ns) (grouped into LUT with out node x_V_2)   --->   "%xor_ln340_12 = xor i1 %tmp_58, %tmp_59" [BN/bn.cpp:104]   --->   Operation 397 'xor' 'xor_ln340_12' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 398 [1/1] (0.00ns) (grouped into LUT with out node x_V_2)   --->   "%xor_ln340_8 = xor i1 %tmp_58, true" [BN/bn.cpp:104]   --->   Operation 398 'xor' 'xor_ln340_8' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 399 [1/1] (0.00ns) (grouped into LUT with out node x_V_2)   --->   "%or_ln340_10 = or i1 %tmp_59, %xor_ln340_8" [BN/bn.cpp:104]   --->   Operation 399 'or' 'or_ln340_10' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 400 [1/1] (0.00ns) (grouped into LUT with out node x_V_2)   --->   "%select_ln340_8 = select i1 %xor_ln340_12, i16 32767, i16 %add_ln703_19" [BN/bn.cpp:104]   --->   Operation 400 'select' 'select_ln340_8' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 401 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln388_6 = select i1 %and_ln786_10, i16 -32768, i16 %add_ln703_19" [BN/bn.cpp:104]   --->   Operation 401 'select' 'select_ln388_6' <Predicate = (!tmp_37)> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 402 [1/1] (0.97ns) (out node of the LUT)   --->   "%x_V_2 = select i1 %or_ln340_10, i16 %select_ln340_8, i16 %select_ln388_6" [BN/bn.cpp:104]   --->   Operation 402 'select' 'x_V_2' <Predicate = (!tmp_37)> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 403 [1/1] (0.00ns)   --->   "%sext_ln703_7 = sext i16 %in_m_2_V to i17" [BN/bn.cpp:105]   --->   Operation 403 'sext' 'sext_ln703_7' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_13 : Operation 404 [1/1] (0.00ns)   --->   "%sext_ln703_8 = sext i16 %moving_mean_m_2_V to i17" [BN/bn.cpp:105]   --->   Operation 404 'sext' 'sext_ln703_8' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_13 : Operation 405 [1/1] (2.07ns)   --->   "%sub_ln1193_2 = sub i17 %sext_ln703_7, %sext_ln703_8" [BN/bn.cpp:105]   --->   Operation 405 'sub' 'sub_ln1193_2' <Predicate = (!tmp_37)> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 406 [1/1] (0.00ns)   --->   "%tmp_60 = call i1 @_ssdm_op_BitSelect.i1.i17.i32(i17 %sub_ln1193_2, i32 16)" [BN/bn.cpp:105]   --->   Operation 406 'bitselect' 'tmp_60' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_13 : Operation 407 [1/1] (0.00ns)   --->   "%trunc_ln703_2 = trunc i17 %sub_ln1193_2 to i16" [BN/bn.cpp:105]   --->   Operation 407 'trunc' 'trunc_ln703_2' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_13 : Operation 408 [1/1] (0.00ns)   --->   "%tmp_61 = call i1 @_ssdm_op_BitSelect.i1.i17.i32(i17 %sub_ln1193_2, i32 15)" [BN/bn.cpp:105]   --->   Operation 408 'bitselect' 'tmp_61' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_13 : Operation 409 [1/1] (0.00ns) (grouped into LUT with out node select_ln388_7)   --->   "%xor_ln786_8 = xor i1 %tmp_61, true" [BN/bn.cpp:105]   --->   Operation 409 'xor' 'xor_ln786_8' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 410 [1/1] (0.00ns) (grouped into LUT with out node select_ln388_7)   --->   "%and_ln786_11 = and i1 %tmp_60, %xor_ln786_8" [BN/bn.cpp:105]   --->   Operation 410 'and' 'and_ln786_11' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 411 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_18)   --->   "%xor_ln340_13 = xor i1 %tmp_60, %tmp_61" [BN/bn.cpp:105]   --->   Operation 411 'xor' 'xor_ln340_13' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 412 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_18)   --->   "%xor_ln340_2 = xor i1 %tmp_60, true" [BN/bn.cpp:105]   --->   Operation 412 'xor' 'xor_ln340_2' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 413 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_18)   --->   "%or_ln340_11 = or i1 %tmp_61, %xor_ln340_2" [BN/bn.cpp:105]   --->   Operation 413 'or' 'or_ln340_11' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 414 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_18)   --->   "%select_ln340_17 = select i1 %xor_ln340_13, i16 32767, i16 %trunc_ln703_2" [BN/bn.cpp:105]   --->   Operation 414 'select' 'select_ln340_17' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 415 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln388_7 = select i1 %and_ln786_11, i16 -32768, i16 %trunc_ln703_2" [BN/bn.cpp:105]   --->   Operation 415 'select' 'select_ln388_7' <Predicate = (!tmp_37)> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 416 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln340_18 = select i1 %or_ln340_11, i16 %select_ln340_17, i16 %select_ln388_7" [BN/bn.cpp:105]   --->   Operation 416 'select' 'select_ln340_18' <Predicate = (!tmp_37)> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 417 [1/1] (0.00ns)   --->   "%trunc_ln1118_3 = trunc i64 %GAMMA_addr_3_read to i16" [BN/bn.cpp:107]   --->   Operation 417 'trunc' 'trunc_ln1118_3' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_13 : Operation 418 [1/1] (0.00ns)   --->   "%trunc_ln728_3 = trunc i64 %BETA_addr_3_read to i16" [BN/bn.cpp:107]   --->   Operation 418 'trunc' 'trunc_ln728_3' <Predicate = (!tmp_37)> <Delay = 0.00>

State 14 <SV = 13> <Delay = 8.27>
ST_14 : Operation 419 [7/9] (8.27ns)   --->   "%x_sqrt_V = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106]   --->   Operation 419 'call' 'x_sqrt_V' <Predicate = (!tmp_37)> <Delay = 8.27> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_14 : Operation 420 [8/9] (8.27ns)   --->   "%x_sqrt_V_1 = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V_1)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106]   --->   Operation 420 'call' 'x_sqrt_V_1' <Predicate = (!tmp_37)> <Delay = 8.27> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_14 : Operation 421 [9/9] (7.98ns)   --->   "%x_sqrt_V_2 = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V_2)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106]   --->   Operation 421 'call' 'x_sqrt_V_2' <Predicate = (!tmp_37)> <Delay = 7.98> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_14 : Operation 422 [1/1] (0.00ns)   --->   "%sext_ln703_9 = sext i16 %moving_variance_m_3 to i17" [BN/bn.cpp:104]   --->   Operation 422 'sext' 'sext_ln703_9' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_14 : Operation 423 [1/1] (2.07ns)   --->   "%add_ln1192_6 = add nsw i17 1, %sext_ln703_9" [BN/bn.cpp:104]   --->   Operation 423 'add' 'add_ln1192_6' <Predicate = (!tmp_37)> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 424 [1/1] (0.00ns)   --->   "%tmp_68 = call i1 @_ssdm_op_BitSelect.i1.i17.i32(i17 %add_ln1192_6, i32 16)" [BN/bn.cpp:104]   --->   Operation 424 'bitselect' 'tmp_68' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_14 : Operation 425 [1/1] (2.07ns)   --->   "%add_ln703_20 = add i16 1, %moving_variance_m_3" [BN/bn.cpp:104]   --->   Operation 425 'add' 'add_ln703_20' <Predicate = (!tmp_37)> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 426 [1/1] (0.00ns)   --->   "%tmp_69 = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 %add_ln703_20, i32 15)" [BN/bn.cpp:104]   --->   Operation 426 'bitselect' 'tmp_69' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_14 : Operation 427 [1/1] (0.00ns) (grouped into LUT with out node select_ln388_9)   --->   "%xor_ln786_3 = xor i1 %tmp_69, true" [BN/bn.cpp:104]   --->   Operation 427 'xor' 'xor_ln786_3' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 428 [1/1] (0.00ns) (grouped into LUT with out node select_ln388_9)   --->   "%and_ln786_13 = and i1 %tmp_68, %xor_ln786_3" [BN/bn.cpp:104]   --->   Operation 428 'and' 'and_ln786_13' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 429 [1/1] (0.00ns) (grouped into LUT with out node x_V_3)   --->   "%xor_ln340_14 = xor i1 %tmp_68, %tmp_69" [BN/bn.cpp:104]   --->   Operation 429 'xor' 'xor_ln340_14' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 430 [1/1] (0.00ns) (grouped into LUT with out node x_V_3)   --->   "%xor_ln340_10 = xor i1 %tmp_68, true" [BN/bn.cpp:104]   --->   Operation 430 'xor' 'xor_ln340_10' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 431 [1/1] (0.00ns) (grouped into LUT with out node x_V_3)   --->   "%or_ln340_15 = or i1 %tmp_69, %xor_ln340_10" [BN/bn.cpp:104]   --->   Operation 431 'or' 'or_ln340_15' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 432 [1/1] (0.00ns) (grouped into LUT with out node x_V_3)   --->   "%select_ln340_10 = select i1 %xor_ln340_14, i16 32767, i16 %add_ln703_20" [BN/bn.cpp:104]   --->   Operation 432 'select' 'select_ln340_10' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 433 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln388_9 = select i1 %and_ln786_13, i16 -32768, i16 %add_ln703_20" [BN/bn.cpp:104]   --->   Operation 433 'select' 'select_ln388_9' <Predicate = (!tmp_37)> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 434 [1/1] (0.97ns) (out node of the LUT)   --->   "%x_V_3 = select i1 %or_ln340_15, i16 %select_ln340_10, i16 %select_ln388_9" [BN/bn.cpp:104]   --->   Operation 434 'select' 'x_V_3' <Predicate = (!tmp_37)> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 435 [1/1] (0.00ns)   --->   "%sext_ln703_10 = sext i16 %in_m_3_V to i17" [BN/bn.cpp:105]   --->   Operation 435 'sext' 'sext_ln703_10' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_14 : Operation 436 [1/1] (0.00ns)   --->   "%sext_ln703_11 = sext i16 %moving_mean_m_3_V to i17" [BN/bn.cpp:105]   --->   Operation 436 'sext' 'sext_ln703_11' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_14 : Operation 437 [1/1] (2.07ns)   --->   "%sub_ln1193_3 = sub i17 %sext_ln703_10, %sext_ln703_11" [BN/bn.cpp:105]   --->   Operation 437 'sub' 'sub_ln1193_3' <Predicate = (!tmp_37)> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 438 [1/1] (0.00ns)   --->   "%tmp_70 = call i1 @_ssdm_op_BitSelect.i1.i17.i32(i17 %sub_ln1193_3, i32 16)" [BN/bn.cpp:105]   --->   Operation 438 'bitselect' 'tmp_70' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_14 : Operation 439 [1/1] (0.00ns)   --->   "%trunc_ln703_3 = trunc i17 %sub_ln1193_3 to i16" [BN/bn.cpp:105]   --->   Operation 439 'trunc' 'trunc_ln703_3' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_14 : Operation 440 [1/1] (0.00ns)   --->   "%tmp_71 = call i1 @_ssdm_op_BitSelect.i1.i17.i32(i17 %sub_ln1193_3, i32 15)" [BN/bn.cpp:105]   --->   Operation 440 'bitselect' 'tmp_71' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_14 : Operation 441 [1/1] (0.00ns) (grouped into LUT with out node select_ln388_10)   --->   "%xor_ln786_10 = xor i1 %tmp_71, true" [BN/bn.cpp:105]   --->   Operation 441 'xor' 'xor_ln786_10' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 442 [1/1] (0.00ns) (grouped into LUT with out node select_ln388_10)   --->   "%and_ln786_14 = and i1 %tmp_70, %xor_ln786_10" [BN/bn.cpp:105]   --->   Operation 442 'and' 'and_ln786_14' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 443 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_22)   --->   "%xor_ln340_15 = xor i1 %tmp_70, %tmp_71" [BN/bn.cpp:105]   --->   Operation 443 'xor' 'xor_ln340_15' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 444 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_22)   --->   "%xor_ln340_3 = xor i1 %tmp_70, true" [BN/bn.cpp:105]   --->   Operation 444 'xor' 'xor_ln340_3' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 445 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_22)   --->   "%or_ln340_16 = or i1 %tmp_71, %xor_ln340_3" [BN/bn.cpp:105]   --->   Operation 445 'or' 'or_ln340_16' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 446 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_22)   --->   "%select_ln340_21 = select i1 %xor_ln340_15, i16 32767, i16 %trunc_ln703_3" [BN/bn.cpp:105]   --->   Operation 446 'select' 'select_ln340_21' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 447 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln388_10 = select i1 %and_ln786_14, i16 -32768, i16 %trunc_ln703_3" [BN/bn.cpp:105]   --->   Operation 447 'select' 'select_ln388_10' <Predicate = (!tmp_37)> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 448 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln340_22 = select i1 %or_ln340_16, i16 %select_ln340_21, i16 %select_ln388_10" [BN/bn.cpp:105]   --->   Operation 448 'select' 'select_ln340_22' <Predicate = (!tmp_37)> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 15 <SV = 14> <Delay = 8.27>
ST_15 : Operation 449 [6/9] (8.27ns)   --->   "%x_sqrt_V = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106]   --->   Operation 449 'call' 'x_sqrt_V' <Predicate = (!tmp_37)> <Delay = 8.27> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_15 : Operation 450 [7/9] (8.27ns)   --->   "%x_sqrt_V_1 = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V_1)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106]   --->   Operation 450 'call' 'x_sqrt_V_1' <Predicate = (!tmp_37)> <Delay = 8.27> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_15 : Operation 451 [8/9] (8.27ns)   --->   "%x_sqrt_V_2 = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V_2)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106]   --->   Operation 451 'call' 'x_sqrt_V_2' <Predicate = (!tmp_37)> <Delay = 8.27> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_15 : Operation 452 [9/9] (7.98ns)   --->   "%x_sqrt_V_3 = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V_3)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106]   --->   Operation 452 'call' 'x_sqrt_V_3' <Predicate = (!tmp_37)> <Delay = 7.98> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 16 <SV = 15> <Delay = 8.27>
ST_16 : Operation 453 [5/9] (8.27ns)   --->   "%x_sqrt_V = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106]   --->   Operation 453 'call' 'x_sqrt_V' <Predicate = (!tmp_37)> <Delay = 8.27> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_16 : Operation 454 [6/9] (8.27ns)   --->   "%x_sqrt_V_1 = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V_1)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106]   --->   Operation 454 'call' 'x_sqrt_V_1' <Predicate = (!tmp_37)> <Delay = 8.27> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_16 : Operation 455 [7/9] (8.27ns)   --->   "%x_sqrt_V_2 = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V_2)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106]   --->   Operation 455 'call' 'x_sqrt_V_2' <Predicate = (!tmp_37)> <Delay = 8.27> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_16 : Operation 456 [8/9] (8.27ns)   --->   "%x_sqrt_V_3 = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V_3)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106]   --->   Operation 456 'call' 'x_sqrt_V_3' <Predicate = (!tmp_37)> <Delay = 8.27> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 17 <SV = 16> <Delay = 8.27>
ST_17 : Operation 457 [4/9] (8.27ns)   --->   "%x_sqrt_V = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106]   --->   Operation 457 'call' 'x_sqrt_V' <Predicate = (!tmp_37)> <Delay = 8.27> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_17 : Operation 458 [5/9] (8.27ns)   --->   "%x_sqrt_V_1 = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V_1)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106]   --->   Operation 458 'call' 'x_sqrt_V_1' <Predicate = (!tmp_37)> <Delay = 8.27> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_17 : Operation 459 [6/9] (8.27ns)   --->   "%x_sqrt_V_2 = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V_2)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106]   --->   Operation 459 'call' 'x_sqrt_V_2' <Predicate = (!tmp_37)> <Delay = 8.27> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_17 : Operation 460 [7/9] (8.27ns)   --->   "%x_sqrt_V_3 = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V_3)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106]   --->   Operation 460 'call' 'x_sqrt_V_3' <Predicate = (!tmp_37)> <Delay = 8.27> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 18 <SV = 17> <Delay = 8.27>
ST_18 : Operation 461 [3/9] (8.27ns)   --->   "%x_sqrt_V = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106]   --->   Operation 461 'call' 'x_sqrt_V' <Predicate = (!tmp_37)> <Delay = 8.27> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_18 : Operation 462 [4/9] (8.27ns)   --->   "%x_sqrt_V_1 = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V_1)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106]   --->   Operation 462 'call' 'x_sqrt_V_1' <Predicate = (!tmp_37)> <Delay = 8.27> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_18 : Operation 463 [5/9] (8.27ns)   --->   "%x_sqrt_V_2 = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V_2)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106]   --->   Operation 463 'call' 'x_sqrt_V_2' <Predicate = (!tmp_37)> <Delay = 8.27> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_18 : Operation 464 [6/9] (8.27ns)   --->   "%x_sqrt_V_3 = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V_3)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106]   --->   Operation 464 'call' 'x_sqrt_V_3' <Predicate = (!tmp_37)> <Delay = 8.27> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 19 <SV = 18> <Delay = 8.27>
ST_19 : Operation 465 [2/9] (8.27ns)   --->   "%x_sqrt_V = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106]   --->   Operation 465 'call' 'x_sqrt_V' <Predicate = (!tmp_37)> <Delay = 8.27> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_19 : Operation 466 [3/9] (8.27ns)   --->   "%x_sqrt_V_1 = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V_1)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106]   --->   Operation 466 'call' 'x_sqrt_V_1' <Predicate = (!tmp_37)> <Delay = 8.27> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_19 : Operation 467 [4/9] (8.27ns)   --->   "%x_sqrt_V_2 = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V_2)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106]   --->   Operation 467 'call' 'x_sqrt_V_2' <Predicate = (!tmp_37)> <Delay = 8.27> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_19 : Operation 468 [5/9] (8.27ns)   --->   "%x_sqrt_V_3 = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V_3)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106]   --->   Operation 468 'call' 'x_sqrt_V_3' <Predicate = (!tmp_37)> <Delay = 8.27> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 20 <SV = 19> <Delay = 8.27>
ST_20 : Operation 469 [1/9] (7.80ns)   --->   "%x_sqrt_V = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106]   --->   Operation 469 'call' 'x_sqrt_V' <Predicate = (!tmp_37)> <Delay = 7.80> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_20 : Operation 470 [2/9] (8.27ns)   --->   "%x_sqrt_V_1 = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V_1)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106]   --->   Operation 470 'call' 'x_sqrt_V_1' <Predicate = (!tmp_37)> <Delay = 8.27> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_20 : Operation 471 [3/9] (8.27ns)   --->   "%x_sqrt_V_2 = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V_2)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106]   --->   Operation 471 'call' 'x_sqrt_V_2' <Predicate = (!tmp_37)> <Delay = 8.27> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_20 : Operation 472 [4/9] (8.27ns)   --->   "%x_sqrt_V_3 = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V_3)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106]   --->   Operation 472 'call' 'x_sqrt_V_3' <Predicate = (!tmp_37)> <Delay = 8.27> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 21 <SV = 20> <Delay = 8.27>
ST_21 : Operation 473 [1/1] (0.00ns)   --->   "%sext_ln1118 = sext i16 %trunc_ln1118 to i29" [BN/bn.cpp:107]   --->   Operation 473 'sext' 'sext_ln1118' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_21 : Operation 474 [1/1] (0.00ns)   --->   "%zext_ln1118 = zext i13 %x_sqrt_V to i29" [BN/bn.cpp:107]   --->   Operation 474 'zext' 'zext_ln1118' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_21 : Operation 475 [1/1] (6.38ns) (root node of the DSP)   --->   "%mul_ln1118 = mul i29 %zext_ln1118, %sext_ln1118" [BN/bn.cpp:107]   --->   Operation 475 'mul' 'mul_ln1118' <Predicate = (!tmp_37)> <Delay = 6.38> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_21 : Operation 476 [1/9] (7.80ns)   --->   "%x_sqrt_V_1 = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V_1)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106]   --->   Operation 476 'call' 'x_sqrt_V_1' <Predicate = (!tmp_37)> <Delay = 7.80> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_21 : Operation 477 [2/9] (8.27ns)   --->   "%x_sqrt_V_2 = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V_2)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106]   --->   Operation 477 'call' 'x_sqrt_V_2' <Predicate = (!tmp_37)> <Delay = 8.27> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_21 : Operation 478 [3/9] (8.27ns)   --->   "%x_sqrt_V_3 = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V_3)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106]   --->   Operation 478 'call' 'x_sqrt_V_3' <Predicate = (!tmp_37)> <Delay = 8.27> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 22 <SV = 21> <Delay = 8.27>
ST_22 : Operation 479 [1/1] (0.00ns)   --->   "%sext_ln1118_1 = sext i29 %mul_ln1118 to i45" [BN/bn.cpp:107]   --->   Operation 479 'sext' 'sext_ln1118_1' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_22 : Operation 480 [1/1] (0.00ns)   --->   "%sext_ln1118_2 = sext i16 %select_ln340_3 to i45" [BN/bn.cpp:107]   --->   Operation 480 'sext' 'sext_ln1118_2' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_22 : Operation 481 [1/1] (7.71ns)   --->   "%mul_ln1118_1 = mul i45 %sext_ln1118_2, %sext_ln1118_1" [BN/bn.cpp:107]   --->   Operation 481 'mul' 'mul_ln1118_1' <Predicate = (!tmp_37)> <Delay = 7.71> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 7.71> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 482 [1/1] (0.00ns)   --->   "%trunc_ln1192 = trunc i45 %mul_ln1118_1 to i37" [BN/bn.cpp:107]   --->   Operation 482 'trunc' 'trunc_ln1192' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_22 : Operation 483 [1/1] (0.00ns)   --->   "%tmp_44 = call i1 @_ssdm_op_BitSelect.i1.i45.i32(i45 %mul_ln1118_1, i32 19)" [BN/bn.cpp:107]   --->   Operation 483 'bitselect' 'tmp_44' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_22 : Operation 484 [1/1] (0.00ns)   --->   "%sext_ln1118_3 = sext i16 %trunc_ln1118_1 to i29" [BN/bn.cpp:107]   --->   Operation 484 'sext' 'sext_ln1118_3' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_22 : Operation 485 [1/1] (0.00ns)   --->   "%zext_ln1118_1 = zext i13 %x_sqrt_V_1 to i29" [BN/bn.cpp:107]   --->   Operation 485 'zext' 'zext_ln1118_1' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_22 : Operation 486 [1/1] (6.38ns) (root node of the DSP)   --->   "%mul_ln1118_2 = mul i29 %zext_ln1118_1, %sext_ln1118_3" [BN/bn.cpp:107]   --->   Operation 486 'mul' 'mul_ln1118_2' <Predicate = (!tmp_37)> <Delay = 6.38> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 487 [1/9] (7.80ns)   --->   "%x_sqrt_V_2 = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V_2)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106]   --->   Operation 487 'call' 'x_sqrt_V_2' <Predicate = (!tmp_37)> <Delay = 7.80> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_22 : Operation 488 [2/9] (8.27ns)   --->   "%x_sqrt_V_3 = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V_3)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106]   --->   Operation 488 'call' 'x_sqrt_V_3' <Predicate = (!tmp_37)> <Delay = 8.27> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 23 <SV = 22> <Delay = 7.80>
ST_23 : Operation 489 [1/1] (0.00ns)   --->   "%sext_ln727 = sext i45 %mul_ln1118_1 to i47" [BN/bn.cpp:107]   --->   Operation 489 'sext' 'sext_ln727' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_23 : Operation 490 [1/1] (0.00ns)   --->   "%shl_ln = call i36 @_ssdm_op_BitConcatenate.i36.i16.i20(i16 %trunc_ln728, i20 0)" [BN/bn.cpp:107]   --->   Operation 490 'bitconcatenate' 'shl_ln' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_23 : Operation 491 [1/1] (0.00ns)   --->   "%sext_ln728 = sext i36 %shl_ln to i47" [BN/bn.cpp:107]   --->   Operation 491 'sext' 'sext_ln728' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_23 : Operation 492 [1/1] (0.00ns)   --->   "%sext_ln1192 = sext i36 %shl_ln to i37" [BN/bn.cpp:107]   --->   Operation 492 'sext' 'sext_ln1192' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_23 : Operation 493 [1/1] (3.01ns)   --->   "%add_ln1192_1 = add i47 %sext_ln727, %sext_ln728" [BN/bn.cpp:107]   --->   Operation 493 'add' 'add_ln1192_1' <Predicate = (!tmp_37)> <Delay = 3.01> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 494 [1/1] (2.75ns)   --->   "%add_ln1192_8 = add i37 %sext_ln1192, %trunc_ln1192" [BN/bn.cpp:107]   --->   Operation 494 'add' 'add_ln1192_8' <Predicate = (!tmp_37)> <Delay = 2.75> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 495 [1/1] (0.00ns)   --->   "%tmp_42 = call i1 @_ssdm_op_BitSelect.i1.i47.i32(i47 %add_ln1192_1, i32 46)" [BN/bn.cpp:107]   --->   Operation 495 'bitselect' 'tmp_42' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_23 : Operation 496 [1/1] (0.00ns)   --->   "%trunc_ln4 = call i16 @_ssdm_op_PartSelect.i16.i47.i32.i32(i47 %add_ln1192_1, i32 20, i32 35)" [BN/bn.cpp:107]   --->   Operation 496 'partselect' 'trunc_ln4' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_23 : Operation 497 [1/1] (0.00ns) (grouped into LUT with out node and_ln416)   --->   "%tmp_43 = call i1 @_ssdm_op_BitSelect.i1.i47.i32(i47 %add_ln1192_1, i32 35)" [BN/bn.cpp:107]   --->   Operation 497 'bitselect' 'tmp_43' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_23 : Operation 498 [1/1] (0.00ns)   --->   "%zext_ln415 = zext i1 %tmp_44 to i16" [BN/bn.cpp:107]   --->   Operation 498 'zext' 'zext_ln415' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_23 : Operation 499 [1/1] (2.07ns)   --->   "%add_ln415 = add i16 %zext_ln415, %trunc_ln4" [BN/bn.cpp:107]   --->   Operation 499 'add' 'add_ln415' <Predicate = (!tmp_37)> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 500 [1/1] (0.00ns) (grouped into LUT with out node and_ln416)   --->   "%tmp_45 = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 %add_ln415, i32 15)" [BN/bn.cpp:107]   --->   Operation 500 'bitselect' 'tmp_45' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_23 : Operation 501 [1/1] (0.00ns) (grouped into LUT with out node and_ln416)   --->   "%xor_ln416 = xor i1 %tmp_45, true" [BN/bn.cpp:107]   --->   Operation 501 'xor' 'xor_ln416' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 502 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln416 = and i1 %tmp_43, %xor_ln416" [BN/bn.cpp:107]   --->   Operation 502 'and' 'and_ln416' <Predicate = (!tmp_37)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 503 [1/1] (0.00ns)   --->   "%tmp_46 = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 %add_ln415, i32 15)" [BN/bn.cpp:107]   --->   Operation 503 'bitselect' 'tmp_46' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_23 : Operation 504 [1/1] (0.00ns)   --->   "%tmp_1 = call i10 @_ssdm_op_PartSelect.i10.i47.i32.i32(i47 %add_ln1192_1, i32 37, i32 46)" [BN/bn.cpp:107]   --->   Operation 504 'partselect' 'tmp_1' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_23 : Operation 505 [1/1] (1.77ns)   --->   "%icmp_ln879 = icmp eq i10 %tmp_1, -1" [BN/bn.cpp:107]   --->   Operation 505 'icmp' 'icmp_ln879' <Predicate = (!tmp_37)> <Delay = 1.77> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 506 [1/1] (0.00ns)   --->   "%tmp_2 = call i11 @_ssdm_op_PartSelect.i11.i47.i32.i32(i47 %add_ln1192_1, i32 36, i32 46)" [BN/bn.cpp:107]   --->   Operation 506 'partselect' 'tmp_2' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_23 : Operation 507 [1/1] (1.88ns)   --->   "%icmp_ln879_1 = icmp eq i11 %tmp_2, -1" [BN/bn.cpp:107]   --->   Operation 507 'icmp' 'icmp_ln879_1' <Predicate = (!tmp_37)> <Delay = 1.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 508 [1/1] (1.88ns)   --->   "%icmp_ln768 = icmp eq i11 %tmp_2, 0" [BN/bn.cpp:107]   --->   Operation 508 'icmp' 'icmp_ln768' <Predicate = (!tmp_37)> <Delay = 1.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 509 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_5)   --->   "%tmp_47 = call i1 @_ssdm_op_BitSelect.i1.i37.i32(i37 %add_ln1192_8, i32 36)" [BN/bn.cpp:107]   --->   Operation 509 'bitselect' 'tmp_47' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_23 : Operation 510 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_5)   --->   "%xor_ln779 = xor i1 %tmp_47, true" [BN/bn.cpp:107]   --->   Operation 510 'xor' 'xor_ln779' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 511 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_5)   --->   "%and_ln779 = and i1 %icmp_ln879, %xor_ln779" [BN/bn.cpp:107]   --->   Operation 511 'and' 'and_ln779' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 512 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_5)   --->   "%select_ln416 = select i1 %and_ln416, i1 %and_ln779, i1 %icmp_ln879_1" [BN/bn.cpp:107]   --->   Operation 512 'select' 'select_ln416' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_23 : Operation 513 [1/1] (0.99ns) (out node of the LUT)   --->   "%and_ln786_5 = and i1 %tmp_46, %select_ln416" [BN/bn.cpp:107]   --->   Operation 513 'and' 'and_ln786_5' <Predicate = (!tmp_37)> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 514 [1/1] (0.00ns)   --->   "%sext_ln1118_4 = sext i29 %mul_ln1118_2 to i45" [BN/bn.cpp:107]   --->   Operation 514 'sext' 'sext_ln1118_4' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_23 : Operation 515 [1/1] (0.00ns)   --->   "%sext_ln1118_5 = sext i16 %select_ln340_14 to i45" [BN/bn.cpp:107]   --->   Operation 515 'sext' 'sext_ln1118_5' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_23 : Operation 516 [1/1] (7.71ns)   --->   "%mul_ln1118_3 = mul i45 %sext_ln1118_5, %sext_ln1118_4" [BN/bn.cpp:107]   --->   Operation 516 'mul' 'mul_ln1118_3' <Predicate = (!tmp_37)> <Delay = 7.71> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 7.71> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 517 [1/1] (0.00ns)   --->   "%trunc_ln1192_1 = trunc i45 %mul_ln1118_3 to i37" [BN/bn.cpp:107]   --->   Operation 517 'trunc' 'trunc_ln1192_1' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_23 : Operation 518 [1/1] (0.00ns)   --->   "%tmp_54 = call i1 @_ssdm_op_BitSelect.i1.i45.i32(i45 %mul_ln1118_3, i32 19)" [BN/bn.cpp:107]   --->   Operation 518 'bitselect' 'tmp_54' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_23 : Operation 519 [1/1] (0.00ns)   --->   "%sext_ln1118_6 = sext i16 %trunc_ln1118_2 to i29" [BN/bn.cpp:107]   --->   Operation 519 'sext' 'sext_ln1118_6' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_23 : Operation 520 [1/1] (0.00ns)   --->   "%zext_ln1118_2 = zext i13 %x_sqrt_V_2 to i29" [BN/bn.cpp:107]   --->   Operation 520 'zext' 'zext_ln1118_2' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_23 : Operation 521 [1/1] (6.38ns) (root node of the DSP)   --->   "%mul_ln1118_4 = mul i29 %zext_ln1118_2, %sext_ln1118_6" [BN/bn.cpp:107]   --->   Operation 521 'mul' 'mul_ln1118_4' <Predicate = (!tmp_37)> <Delay = 6.38> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 522 [1/9] (7.80ns)   --->   "%x_sqrt_V_3 = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V_3)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106]   --->   Operation 522 'call' 'x_sqrt_V_3' <Predicate = (!tmp_37)> <Delay = 7.80> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 24 <SV = 23> <Delay = 8.75>
ST_24 : Operation 523 [1/1] (0.00ns) (grouped into LUT with out node or_ln340_2)   --->   "%select_ln777 = select i1 %and_ln416, i1 %icmp_ln879_1, i1 %icmp_ln768" [BN/bn.cpp:107]   --->   Operation 523 'select' 'select_ln777' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 524 [1/1] (0.97ns)   --->   "%and_ln781 = and i1 %and_ln416, %icmp_ln879_1" [BN/bn.cpp:107]   --->   Operation 524 'and' 'and_ln781' <Predicate = (!tmp_37)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 525 [1/1] (0.00ns) (grouped into LUT with out node or_ln340_2)   --->   "%xor_ln785 = xor i1 %select_ln777, true" [BN/bn.cpp:107]   --->   Operation 525 'xor' 'xor_ln785' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 526 [1/1] (0.00ns) (grouped into LUT with out node or_ln340_2)   --->   "%or_ln785 = or i1 %tmp_46, %xor_ln785" [BN/bn.cpp:107]   --->   Operation 526 'or' 'or_ln785' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 527 [1/1] (0.97ns)   --->   "%xor_ln785_1 = xor i1 %tmp_42, true" [BN/bn.cpp:107]   --->   Operation 527 'xor' 'xor_ln785_1' <Predicate = (!tmp_37)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 528 [1/1] (0.00ns) (grouped into LUT with out node or_ln340_2)   --->   "%and_ln785 = and i1 %or_ln785, %xor_ln785_1" [BN/bn.cpp:107]   --->   Operation 528 'and' 'and_ln785' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 529 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_6)   --->   "%or_ln786 = or i1 %and_ln781, %and_ln786_5" [BN/bn.cpp:107]   --->   Operation 529 'or' 'or_ln786' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 530 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_6)   --->   "%xor_ln786_2 = xor i1 %or_ln786, true" [BN/bn.cpp:107]   --->   Operation 530 'xor' 'xor_ln786_2' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 531 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln786_6 = and i1 %tmp_42, %xor_ln786_2" [BN/bn.cpp:107]   --->   Operation 531 'and' 'and_ln786_6' <Predicate = (!tmp_37)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 532 [1/1] (0.99ns) (out node of the LUT)   --->   "%or_ln340_2 = or i1 %and_ln786_6, %and_ln785" [BN/bn.cpp:107]   --->   Operation 532 'or' 'or_ln340_2' <Predicate = (!tmp_37)> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 533 [1/1] (0.00ns) (grouped into LUT with out node result_0_V)   --->   "%or_ln340_3 = or i1 %and_ln786_5, %xor_ln785_1" [BN/bn.cpp:107]   --->   Operation 533 'or' 'or_ln340_3' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 534 [1/1] (0.00ns) (grouped into LUT with out node result_0_V)   --->   "%or_ln340_4 = or i1 %or_ln340_3, %and_ln781" [BN/bn.cpp:107]   --->   Operation 534 'or' 'or_ln340_4' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 535 [1/1] (0.80ns) (out node of the LUT)   --->   "%select_ln340_4 = select i1 %or_ln340_2, i16 32767, i16 %add_ln415" [BN/bn.cpp:107]   --->   Operation 535 'select' 'select_ln340_4' <Predicate = (!tmp_37)> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 536 [1/1] (0.00ns) (grouped into LUT with out node result_0_V)   --->   "%select_ln388_2 = select i1 %and_ln786_6, i16 -32768, i16 %add_ln415" [BN/bn.cpp:107]   --->   Operation 536 'select' 'select_ln388_2' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 537 [1/1] (0.97ns) (out node of the LUT)   --->   "%result_0_V = select i1 %or_ln340_4, i16 %select_ln340_4, i16 %select_ln388_2" [BN/bn.cpp:107]   --->   Operation 537 'select' 'result_0_V' <Predicate = (!tmp_37)> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 538 [1/1] (0.00ns)   --->   "%sext_ln727_1 = sext i45 %mul_ln1118_3 to i47" [BN/bn.cpp:107]   --->   Operation 538 'sext' 'sext_ln727_1' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_24 : Operation 539 [1/1] (0.00ns)   --->   "%shl_ln728_1 = call i36 @_ssdm_op_BitConcatenate.i36.i16.i20(i16 %trunc_ln728_1, i20 0)" [BN/bn.cpp:107]   --->   Operation 539 'bitconcatenate' 'shl_ln728_1' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_24 : Operation 540 [1/1] (0.00ns)   --->   "%sext_ln728_1 = sext i36 %shl_ln728_1 to i47" [BN/bn.cpp:107]   --->   Operation 540 'sext' 'sext_ln728_1' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_24 : Operation 541 [1/1] (0.00ns)   --->   "%sext_ln1192_1 = sext i36 %shl_ln728_1 to i37" [BN/bn.cpp:107]   --->   Operation 541 'sext' 'sext_ln1192_1' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_24 : Operation 542 [1/1] (3.01ns)   --->   "%add_ln1192_3 = add i47 %sext_ln727_1, %sext_ln728_1" [BN/bn.cpp:107]   --->   Operation 542 'add' 'add_ln1192_3' <Predicate = (!tmp_37)> <Delay = 3.01> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 543 [1/1] (2.75ns)   --->   "%add_ln1192_9 = add i37 %sext_ln1192_1, %trunc_ln1192_1" [BN/bn.cpp:107]   --->   Operation 543 'add' 'add_ln1192_9' <Predicate = (!tmp_37)> <Delay = 2.75> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 544 [1/1] (0.00ns)   --->   "%tmp_52 = call i1 @_ssdm_op_BitSelect.i1.i47.i32(i47 %add_ln1192_3, i32 46)" [BN/bn.cpp:107]   --->   Operation 544 'bitselect' 'tmp_52' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_24 : Operation 545 [1/1] (0.00ns)   --->   "%trunc_ln708_s = call i16 @_ssdm_op_PartSelect.i16.i47.i32.i32(i47 %add_ln1192_3, i32 20, i32 35)" [BN/bn.cpp:107]   --->   Operation 545 'partselect' 'trunc_ln708_s' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_24 : Operation 546 [1/1] (0.00ns) (grouped into LUT with out node and_ln416_1)   --->   "%tmp_53 = call i1 @_ssdm_op_BitSelect.i1.i47.i32(i47 %add_ln1192_3, i32 35)" [BN/bn.cpp:107]   --->   Operation 546 'bitselect' 'tmp_53' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_24 : Operation 547 [1/1] (0.00ns)   --->   "%zext_ln415_1 = zext i1 %tmp_54 to i16" [BN/bn.cpp:107]   --->   Operation 547 'zext' 'zext_ln415_1' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_24 : Operation 548 [1/1] (2.07ns)   --->   "%add_ln415_1 = add i16 %zext_ln415_1, %trunc_ln708_s" [BN/bn.cpp:107]   --->   Operation 548 'add' 'add_ln415_1' <Predicate = (!tmp_37)> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 549 [1/1] (0.00ns) (grouped into LUT with out node and_ln416_1)   --->   "%tmp_55 = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 %add_ln415_1, i32 15)" [BN/bn.cpp:107]   --->   Operation 549 'bitselect' 'tmp_55' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_24 : Operation 550 [1/1] (0.00ns) (grouped into LUT with out node and_ln416_1)   --->   "%xor_ln416_1 = xor i1 %tmp_55, true" [BN/bn.cpp:107]   --->   Operation 550 'xor' 'xor_ln416_1' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 551 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln416_1 = and i1 %tmp_53, %xor_ln416_1" [BN/bn.cpp:107]   --->   Operation 551 'and' 'and_ln416_1' <Predicate = (!tmp_37)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 552 [1/1] (0.00ns)   --->   "%tmp_56 = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 %add_ln415_1, i32 15)" [BN/bn.cpp:107]   --->   Operation 552 'bitselect' 'tmp_56' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_24 : Operation 553 [1/1] (0.00ns)   --->   "%tmp_3 = call i10 @_ssdm_op_PartSelect.i10.i47.i32.i32(i47 %add_ln1192_3, i32 37, i32 46)" [BN/bn.cpp:107]   --->   Operation 553 'partselect' 'tmp_3' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_24 : Operation 554 [1/1] (1.77ns)   --->   "%icmp_ln879_2 = icmp eq i10 %tmp_3, -1" [BN/bn.cpp:107]   --->   Operation 554 'icmp' 'icmp_ln879_2' <Predicate = (!tmp_37)> <Delay = 1.77> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 555 [1/1] (0.00ns)   --->   "%tmp_4 = call i11 @_ssdm_op_PartSelect.i11.i47.i32.i32(i47 %add_ln1192_3, i32 36, i32 46)" [BN/bn.cpp:107]   --->   Operation 555 'partselect' 'tmp_4' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_24 : Operation 556 [1/1] (1.88ns)   --->   "%icmp_ln879_3 = icmp eq i11 %tmp_4, -1" [BN/bn.cpp:107]   --->   Operation 556 'icmp' 'icmp_ln879_3' <Predicate = (!tmp_37)> <Delay = 1.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 557 [1/1] (1.88ns)   --->   "%icmp_ln768_1 = icmp eq i11 %tmp_4, 0" [BN/bn.cpp:107]   --->   Operation 557 'icmp' 'icmp_ln768_1' <Predicate = (!tmp_37)> <Delay = 1.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 558 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_1)   --->   "%tmp_57 = call i1 @_ssdm_op_BitSelect.i1.i37.i32(i37 %add_ln1192_9, i32 36)" [BN/bn.cpp:107]   --->   Operation 558 'bitselect' 'tmp_57' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_24 : Operation 559 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_1)   --->   "%xor_ln779_1 = xor i1 %tmp_57, true" [BN/bn.cpp:107]   --->   Operation 559 'xor' 'xor_ln779_1' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 560 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_1)   --->   "%and_ln779_1 = and i1 %icmp_ln879_2, %xor_ln779_1" [BN/bn.cpp:107]   --->   Operation 560 'and' 'and_ln779_1' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 561 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_1)   --->   "%select_ln416_1 = select i1 %and_ln416_1, i1 %and_ln779_1, i1 %icmp_ln879_3" [BN/bn.cpp:107]   --->   Operation 561 'select' 'select_ln416_1' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 562 [1/1] (0.99ns) (out node of the LUT)   --->   "%and_ln786_1 = and i1 %tmp_56, %select_ln416_1" [BN/bn.cpp:107]   --->   Operation 562 'and' 'and_ln786_1' <Predicate = (!tmp_37)> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 563 [1/1] (0.00ns)   --->   "%sext_ln1118_7 = sext i29 %mul_ln1118_4 to i45" [BN/bn.cpp:107]   --->   Operation 563 'sext' 'sext_ln1118_7' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_24 : Operation 564 [1/1] (0.00ns)   --->   "%sext_ln1118_8 = sext i16 %select_ln340_18 to i45" [BN/bn.cpp:107]   --->   Operation 564 'sext' 'sext_ln1118_8' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_24 : Operation 565 [1/1] (7.71ns)   --->   "%mul_ln1118_5 = mul i45 %sext_ln1118_8, %sext_ln1118_7" [BN/bn.cpp:107]   --->   Operation 565 'mul' 'mul_ln1118_5' <Predicate = (!tmp_37)> <Delay = 7.71> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 7.71> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 566 [1/1] (0.00ns)   --->   "%trunc_ln1192_2 = trunc i45 %mul_ln1118_5 to i37" [BN/bn.cpp:107]   --->   Operation 566 'trunc' 'trunc_ln1192_2' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_24 : Operation 567 [1/1] (0.00ns)   --->   "%tmp_64 = call i1 @_ssdm_op_BitSelect.i1.i45.i32(i45 %mul_ln1118_5, i32 19)" [BN/bn.cpp:107]   --->   Operation 567 'bitselect' 'tmp_64' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_24 : Operation 568 [1/1] (0.00ns)   --->   "%sext_ln1118_9 = sext i16 %trunc_ln1118_3 to i29" [BN/bn.cpp:107]   --->   Operation 568 'sext' 'sext_ln1118_9' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_24 : Operation 569 [1/1] (0.00ns)   --->   "%zext_ln1118_3 = zext i13 %x_sqrt_V_3 to i29" [BN/bn.cpp:107]   --->   Operation 569 'zext' 'zext_ln1118_3' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_24 : Operation 570 [1/1] (6.38ns) (root node of the DSP)   --->   "%mul_ln1118_6 = mul i29 %zext_ln1118_3, %sext_ln1118_9" [BN/bn.cpp:107]   --->   Operation 570 'mul' 'mul_ln1118_6' <Predicate = (!tmp_37)> <Delay = 6.38> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 571 [1/1] (0.00ns)   --->   "%zext_ln321_24 = zext i30 %add_ln321_20 to i64" [BN/bn.cpp:113]   --->   Operation 571 'zext' 'zext_ln321_24' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_24 : Operation 572 [1/1] (0.00ns)   --->   "%OUT_addr = getelementptr i64* %OUT_r, i64 %zext_ln321_24" [BN/bn.cpp:113]   --->   Operation 572 'getelementptr' 'OUT_addr' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_24 : Operation 573 [1/1] (8.75ns)   --->   "%OUT_addr_req = call i1 @_ssdm_op_WriteReq.m_axi.i64P(i64* %OUT_addr, i32 1)" [BN/bn.cpp:113]   --->   Operation 573 'writereq' 'OUT_addr_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 25 <SV = 24> <Delay = 8.75>
ST_25 : Operation 574 [1/1] (0.00ns)   --->   "%result_pack_0_V_1_l = load i64* %result_pack_0_V_1" [BN/bn.cpp:112]   --->   Operation 574 'load' 'result_pack_0_V_1_l' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_25 : Operation 575 [1/1] (0.00ns) (grouped into LUT with out node or_ln340_7)   --->   "%select_ln777_1 = select i1 %and_ln416_1, i1 %icmp_ln879_3, i1 %icmp_ln768_1" [BN/bn.cpp:107]   --->   Operation 575 'select' 'select_ln777_1' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_25 : Operation 576 [1/1] (0.97ns)   --->   "%and_ln781_1 = and i1 %and_ln416_1, %icmp_ln879_3" [BN/bn.cpp:107]   --->   Operation 576 'and' 'and_ln781_1' <Predicate = (!tmp_37)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 577 [1/1] (0.00ns) (grouped into LUT with out node or_ln340_7)   --->   "%xor_ln785_2 = xor i1 %select_ln777_1, true" [BN/bn.cpp:107]   --->   Operation 577 'xor' 'xor_ln785_2' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 578 [1/1] (0.00ns) (grouped into LUT with out node or_ln340_7)   --->   "%or_ln785_1 = or i1 %tmp_56, %xor_ln785_2" [BN/bn.cpp:107]   --->   Operation 578 'or' 'or_ln785_1' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 579 [1/1] (0.97ns)   --->   "%xor_ln785_3 = xor i1 %tmp_52, true" [BN/bn.cpp:107]   --->   Operation 579 'xor' 'xor_ln785_3' <Predicate = (!tmp_37)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 580 [1/1] (0.00ns) (grouped into LUT with out node or_ln340_7)   --->   "%and_ln785_1 = and i1 %or_ln785_1, %xor_ln785_3" [BN/bn.cpp:107]   --->   Operation 580 'and' 'and_ln785_1' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 581 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_9)   --->   "%or_ln786_1 = or i1 %and_ln781_1, %and_ln786_1" [BN/bn.cpp:107]   --->   Operation 581 'or' 'or_ln786_1' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 582 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_9)   --->   "%xor_ln786_6 = xor i1 %or_ln786_1, true" [BN/bn.cpp:107]   --->   Operation 582 'xor' 'xor_ln786_6' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 583 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln786_9 = and i1 %tmp_52, %xor_ln786_6" [BN/bn.cpp:107]   --->   Operation 583 'and' 'and_ln786_9' <Predicate = (!tmp_37)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 584 [1/1] (0.99ns) (out node of the LUT)   --->   "%or_ln340_7 = or i1 %and_ln786_9, %and_ln785_1" [BN/bn.cpp:107]   --->   Operation 584 'or' 'or_ln340_7' <Predicate = (!tmp_37)> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 585 [1/1] (0.00ns) (grouped into LUT with out node result_1_V)   --->   "%or_ln340_8 = or i1 %and_ln786_1, %xor_ln785_3" [BN/bn.cpp:107]   --->   Operation 585 'or' 'or_ln340_8' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 586 [1/1] (0.00ns) (grouped into LUT with out node result_1_V)   --->   "%or_ln340_9 = or i1 %or_ln340_8, %and_ln781_1" [BN/bn.cpp:107]   --->   Operation 586 'or' 'or_ln340_9' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 587 [1/1] (0.80ns) (out node of the LUT)   --->   "%select_ln340_7 = select i1 %or_ln340_7, i16 32767, i16 %add_ln415_1" [BN/bn.cpp:107]   --->   Operation 587 'select' 'select_ln340_7' <Predicate = (!tmp_37)> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_25 : Operation 588 [1/1] (0.00ns) (grouped into LUT with out node result_1_V)   --->   "%select_ln388_5 = select i1 %and_ln786_9, i16 -32768, i16 %add_ln415_1" [BN/bn.cpp:107]   --->   Operation 588 'select' 'select_ln388_5' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_25 : Operation 589 [1/1] (0.97ns) (out node of the LUT)   --->   "%result_1_V = select i1 %or_ln340_9, i16 %select_ln340_7, i16 %select_ln388_5" [BN/bn.cpp:107]   --->   Operation 589 'select' 'result_1_V' <Predicate = (!tmp_37)> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_25 : Operation 590 [1/1] (0.00ns)   --->   "%sext_ln727_2 = sext i45 %mul_ln1118_5 to i47" [BN/bn.cpp:107]   --->   Operation 590 'sext' 'sext_ln727_2' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_25 : Operation 591 [1/1] (0.00ns)   --->   "%shl_ln728_2 = call i36 @_ssdm_op_BitConcatenate.i36.i16.i20(i16 %trunc_ln728_2, i20 0)" [BN/bn.cpp:107]   --->   Operation 591 'bitconcatenate' 'shl_ln728_2' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_25 : Operation 592 [1/1] (0.00ns)   --->   "%sext_ln728_2 = sext i36 %shl_ln728_2 to i47" [BN/bn.cpp:107]   --->   Operation 592 'sext' 'sext_ln728_2' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_25 : Operation 593 [1/1] (0.00ns)   --->   "%sext_ln1192_2 = sext i36 %shl_ln728_2 to i37" [BN/bn.cpp:107]   --->   Operation 593 'sext' 'sext_ln1192_2' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_25 : Operation 594 [1/1] (3.01ns)   --->   "%add_ln1192_5 = add i47 %sext_ln727_2, %sext_ln728_2" [BN/bn.cpp:107]   --->   Operation 594 'add' 'add_ln1192_5' <Predicate = (!tmp_37)> <Delay = 3.01> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 595 [1/1] (2.75ns)   --->   "%add_ln1192_10 = add i37 %sext_ln1192_2, %trunc_ln1192_2" [BN/bn.cpp:107]   --->   Operation 595 'add' 'add_ln1192_10' <Predicate = (!tmp_37)> <Delay = 2.75> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 596 [1/1] (0.00ns)   --->   "%tmp_62 = call i1 @_ssdm_op_BitSelect.i1.i47.i32(i47 %add_ln1192_5, i32 46)" [BN/bn.cpp:107]   --->   Operation 596 'bitselect' 'tmp_62' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_25 : Operation 597 [1/1] (0.00ns)   --->   "%trunc_ln708_13 = call i16 @_ssdm_op_PartSelect.i16.i47.i32.i32(i47 %add_ln1192_5, i32 20, i32 35)" [BN/bn.cpp:107]   --->   Operation 597 'partselect' 'trunc_ln708_13' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_25 : Operation 598 [1/1] (0.00ns) (grouped into LUT with out node and_ln416_2)   --->   "%tmp_63 = call i1 @_ssdm_op_BitSelect.i1.i47.i32(i47 %add_ln1192_5, i32 35)" [BN/bn.cpp:107]   --->   Operation 598 'bitselect' 'tmp_63' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_25 : Operation 599 [1/1] (0.00ns)   --->   "%zext_ln415_2 = zext i1 %tmp_64 to i16" [BN/bn.cpp:107]   --->   Operation 599 'zext' 'zext_ln415_2' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_25 : Operation 600 [1/1] (2.07ns)   --->   "%add_ln415_2 = add i16 %zext_ln415_2, %trunc_ln708_13" [BN/bn.cpp:107]   --->   Operation 600 'add' 'add_ln415_2' <Predicate = (!tmp_37)> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 601 [1/1] (0.00ns) (grouped into LUT with out node and_ln416_2)   --->   "%tmp_65 = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 %add_ln415_2, i32 15)" [BN/bn.cpp:107]   --->   Operation 601 'bitselect' 'tmp_65' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_25 : Operation 602 [1/1] (0.00ns) (grouped into LUT with out node and_ln416_2)   --->   "%xor_ln416_2 = xor i1 %tmp_65, true" [BN/bn.cpp:107]   --->   Operation 602 'xor' 'xor_ln416_2' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 603 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln416_2 = and i1 %tmp_63, %xor_ln416_2" [BN/bn.cpp:107]   --->   Operation 603 'and' 'and_ln416_2' <Predicate = (!tmp_37)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 604 [1/1] (0.00ns)   --->   "%tmp_66 = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 %add_ln415_2, i32 15)" [BN/bn.cpp:107]   --->   Operation 604 'bitselect' 'tmp_66' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_25 : Operation 605 [1/1] (0.00ns)   --->   "%tmp_5 = call i10 @_ssdm_op_PartSelect.i10.i47.i32.i32(i47 %add_ln1192_5, i32 37, i32 46)" [BN/bn.cpp:107]   --->   Operation 605 'partselect' 'tmp_5' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_25 : Operation 606 [1/1] (1.77ns)   --->   "%icmp_ln879_4 = icmp eq i10 %tmp_5, -1" [BN/bn.cpp:107]   --->   Operation 606 'icmp' 'icmp_ln879_4' <Predicate = (!tmp_37)> <Delay = 1.77> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 607 [1/1] (0.00ns)   --->   "%tmp_6 = call i11 @_ssdm_op_PartSelect.i11.i47.i32.i32(i47 %add_ln1192_5, i32 36, i32 46)" [BN/bn.cpp:107]   --->   Operation 607 'partselect' 'tmp_6' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_25 : Operation 608 [1/1] (1.88ns)   --->   "%icmp_ln879_5 = icmp eq i11 %tmp_6, -1" [BN/bn.cpp:107]   --->   Operation 608 'icmp' 'icmp_ln879_5' <Predicate = (!tmp_37)> <Delay = 1.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 609 [1/1] (1.88ns)   --->   "%icmp_ln768_2 = icmp eq i11 %tmp_6, 0" [BN/bn.cpp:107]   --->   Operation 609 'icmp' 'icmp_ln768_2' <Predicate = (!tmp_37)> <Delay = 1.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 610 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_2)   --->   "%tmp_67 = call i1 @_ssdm_op_BitSelect.i1.i37.i32(i37 %add_ln1192_10, i32 36)" [BN/bn.cpp:107]   --->   Operation 610 'bitselect' 'tmp_67' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_25 : Operation 611 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_2)   --->   "%xor_ln779_2 = xor i1 %tmp_67, true" [BN/bn.cpp:107]   --->   Operation 611 'xor' 'xor_ln779_2' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 612 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_2)   --->   "%and_ln779_2 = and i1 %icmp_ln879_4, %xor_ln779_2" [BN/bn.cpp:107]   --->   Operation 612 'and' 'and_ln779_2' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 613 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_2)   --->   "%select_ln416_2 = select i1 %and_ln416_2, i1 %and_ln779_2, i1 %icmp_ln879_5" [BN/bn.cpp:107]   --->   Operation 613 'select' 'select_ln416_2' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_25 : Operation 614 [1/1] (0.99ns) (out node of the LUT)   --->   "%and_ln786_2 = and i1 %tmp_66, %select_ln416_2" [BN/bn.cpp:107]   --->   Operation 614 'and' 'and_ln786_2' <Predicate = (!tmp_37)> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 615 [1/1] (0.00ns)   --->   "%sext_ln1118_10 = sext i29 %mul_ln1118_6 to i45" [BN/bn.cpp:107]   --->   Operation 615 'sext' 'sext_ln1118_10' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_25 : Operation 616 [1/1] (0.00ns)   --->   "%sext_ln1118_11 = sext i16 %select_ln340_22 to i45" [BN/bn.cpp:107]   --->   Operation 616 'sext' 'sext_ln1118_11' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_25 : Operation 617 [1/1] (7.71ns)   --->   "%mul_ln1118_7 = mul i45 %sext_ln1118_11, %sext_ln1118_10" [BN/bn.cpp:107]   --->   Operation 617 'mul' 'mul_ln1118_7' <Predicate = (!tmp_37)> <Delay = 7.71> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 7.71> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 618 [1/1] (0.00ns)   --->   "%trunc_ln1192_3 = trunc i45 %mul_ln1118_7 to i37" [BN/bn.cpp:107]   --->   Operation 618 'trunc' 'trunc_ln1192_3' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_25 : Operation 619 [1/1] (0.00ns)   --->   "%tmp_74 = call i1 @_ssdm_op_BitSelect.i1.i45.i32(i45 %mul_ln1118_7, i32 19)" [BN/bn.cpp:107]   --->   Operation 619 'bitselect' 'tmp_74' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_25 : Operation 620 [1/1] (0.00ns)   --->   "%result_pack_0_V = call i64 @llvm.part.set.i64.i16(i64 %result_pack_0_V_1_l, i16 %result_0_V, i32 0, i32 15)" [BN/bn.cpp:112]   --->   Operation 620 'partset' 'result_pack_0_V' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_25 : Operation 621 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i64P(i64* %OUT_addr, i64 %result_pack_0_V, i8 -1)" [BN/bn.cpp:113]   --->   Operation 621 'write' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_25 : Operation 622 [1/1] (0.00ns)   --->   "%zext_ln321_25 = zext i30 %add_ln321_21 to i64" [BN/bn.cpp:113]   --->   Operation 622 'zext' 'zext_ln321_25' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_25 : Operation 623 [1/1] (0.00ns)   --->   "%OUT_addr_1 = getelementptr i64* %OUT_r, i64 %zext_ln321_25" [BN/bn.cpp:113]   --->   Operation 623 'getelementptr' 'OUT_addr_1' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_25 : Operation 624 [1/1] (8.75ns)   --->   "%OUT_addr_1_req = call i1 @_ssdm_op_WriteReq.m_axi.i64P(i64* %OUT_addr_1, i32 1)" [BN/bn.cpp:113]   --->   Operation 624 'writereq' 'OUT_addr_1_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_25 : Operation 625 [1/1] (0.00ns)   --->   "store i64 %result_pack_0_V, i64* %result_pack_0_V_1" [BN/bn.cpp:87]   --->   Operation 625 'store' <Predicate = (!tmp_37)> <Delay = 0.00>

State 26 <SV = 25> <Delay = 8.75>
ST_26 : Operation 626 [1/1] (0.00ns)   --->   "%result_pack_1_V_1_l = load i64* %result_pack_1_V_1" [BN/bn.cpp:112]   --->   Operation 626 'load' 'result_pack_1_V_1_l' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_26 : Operation 627 [1/1] (0.00ns) (grouped into LUT with out node or_ln340_12)   --->   "%select_ln777_2 = select i1 %and_ln416_2, i1 %icmp_ln879_5, i1 %icmp_ln768_2" [BN/bn.cpp:107]   --->   Operation 627 'select' 'select_ln777_2' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_26 : Operation 628 [1/1] (0.97ns)   --->   "%and_ln781_2 = and i1 %and_ln416_2, %icmp_ln879_5" [BN/bn.cpp:107]   --->   Operation 628 'and' 'and_ln781_2' <Predicate = (!tmp_37)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 629 [1/1] (0.00ns) (grouped into LUT with out node or_ln340_12)   --->   "%xor_ln785_4 = xor i1 %select_ln777_2, true" [BN/bn.cpp:107]   --->   Operation 629 'xor' 'xor_ln785_4' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 630 [1/1] (0.00ns) (grouped into LUT with out node or_ln340_12)   --->   "%or_ln785_2 = or i1 %tmp_66, %xor_ln785_4" [BN/bn.cpp:107]   --->   Operation 630 'or' 'or_ln785_2' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 631 [1/1] (0.97ns)   --->   "%xor_ln785_5 = xor i1 %tmp_62, true" [BN/bn.cpp:107]   --->   Operation 631 'xor' 'xor_ln785_5' <Predicate = (!tmp_37)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 632 [1/1] (0.00ns) (grouped into LUT with out node or_ln340_12)   --->   "%and_ln785_2 = and i1 %or_ln785_2, %xor_ln785_5" [BN/bn.cpp:107]   --->   Operation 632 'and' 'and_ln785_2' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 633 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_12)   --->   "%or_ln786_2 = or i1 %and_ln781_2, %and_ln786_2" [BN/bn.cpp:107]   --->   Operation 633 'or' 'or_ln786_2' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 634 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_12)   --->   "%xor_ln786_9 = xor i1 %or_ln786_2, true" [BN/bn.cpp:107]   --->   Operation 634 'xor' 'xor_ln786_9' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 635 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln786_12 = and i1 %tmp_62, %xor_ln786_9" [BN/bn.cpp:107]   --->   Operation 635 'and' 'and_ln786_12' <Predicate = (!tmp_37)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 636 [1/1] (0.99ns) (out node of the LUT)   --->   "%or_ln340_12 = or i1 %and_ln786_12, %and_ln785_2" [BN/bn.cpp:107]   --->   Operation 636 'or' 'or_ln340_12' <Predicate = (!tmp_37)> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 637 [1/1] (0.00ns) (grouped into LUT with out node result_2_V)   --->   "%or_ln340_13 = or i1 %and_ln786_2, %xor_ln785_5" [BN/bn.cpp:107]   --->   Operation 637 'or' 'or_ln340_13' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 638 [1/1] (0.00ns) (grouped into LUT with out node result_2_V)   --->   "%or_ln340_14 = or i1 %or_ln340_13, %and_ln781_2" [BN/bn.cpp:107]   --->   Operation 638 'or' 'or_ln340_14' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 639 [1/1] (0.80ns) (out node of the LUT)   --->   "%select_ln340_9 = select i1 %or_ln340_12, i16 32767, i16 %add_ln415_2" [BN/bn.cpp:107]   --->   Operation 639 'select' 'select_ln340_9' <Predicate = (!tmp_37)> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_26 : Operation 640 [1/1] (0.00ns) (grouped into LUT with out node result_2_V)   --->   "%select_ln388_8 = select i1 %and_ln786_12, i16 -32768, i16 %add_ln415_2" [BN/bn.cpp:107]   --->   Operation 640 'select' 'select_ln388_8' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_26 : Operation 641 [1/1] (0.97ns) (out node of the LUT)   --->   "%result_2_V = select i1 %or_ln340_14, i16 %select_ln340_9, i16 %select_ln388_8" [BN/bn.cpp:107]   --->   Operation 641 'select' 'result_2_V' <Predicate = (!tmp_37)> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_26 : Operation 642 [1/1] (0.00ns)   --->   "%sext_ln727_3 = sext i45 %mul_ln1118_7 to i47" [BN/bn.cpp:107]   --->   Operation 642 'sext' 'sext_ln727_3' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_26 : Operation 643 [1/1] (0.00ns)   --->   "%shl_ln728_3 = call i36 @_ssdm_op_BitConcatenate.i36.i16.i20(i16 %trunc_ln728_3, i20 0)" [BN/bn.cpp:107]   --->   Operation 643 'bitconcatenate' 'shl_ln728_3' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_26 : Operation 644 [1/1] (0.00ns)   --->   "%sext_ln728_3 = sext i36 %shl_ln728_3 to i47" [BN/bn.cpp:107]   --->   Operation 644 'sext' 'sext_ln728_3' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_26 : Operation 645 [1/1] (0.00ns)   --->   "%sext_ln1192_3 = sext i36 %shl_ln728_3 to i37" [BN/bn.cpp:107]   --->   Operation 645 'sext' 'sext_ln1192_3' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_26 : Operation 646 [1/1] (3.01ns)   --->   "%add_ln1192_7 = add i47 %sext_ln727_3, %sext_ln728_3" [BN/bn.cpp:107]   --->   Operation 646 'add' 'add_ln1192_7' <Predicate = (!tmp_37)> <Delay = 3.01> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 647 [1/1] (2.75ns)   --->   "%add_ln1192_11 = add i37 %sext_ln1192_3, %trunc_ln1192_3" [BN/bn.cpp:107]   --->   Operation 647 'add' 'add_ln1192_11' <Predicate = (!tmp_37)> <Delay = 2.75> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 648 [1/1] (0.00ns)   --->   "%tmp_72 = call i1 @_ssdm_op_BitSelect.i1.i47.i32(i47 %add_ln1192_7, i32 46)" [BN/bn.cpp:107]   --->   Operation 648 'bitselect' 'tmp_72' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_26 : Operation 649 [1/1] (0.00ns)   --->   "%trunc_ln708_14 = call i16 @_ssdm_op_PartSelect.i16.i47.i32.i32(i47 %add_ln1192_7, i32 20, i32 35)" [BN/bn.cpp:107]   --->   Operation 649 'partselect' 'trunc_ln708_14' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_26 : Operation 650 [1/1] (0.00ns) (grouped into LUT with out node and_ln416_3)   --->   "%tmp_73 = call i1 @_ssdm_op_BitSelect.i1.i47.i32(i47 %add_ln1192_7, i32 35)" [BN/bn.cpp:107]   --->   Operation 650 'bitselect' 'tmp_73' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_26 : Operation 651 [1/1] (0.00ns)   --->   "%zext_ln415_3 = zext i1 %tmp_74 to i16" [BN/bn.cpp:107]   --->   Operation 651 'zext' 'zext_ln415_3' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_26 : Operation 652 [1/1] (2.07ns)   --->   "%add_ln415_3 = add i16 %zext_ln415_3, %trunc_ln708_14" [BN/bn.cpp:107]   --->   Operation 652 'add' 'add_ln415_3' <Predicate = (!tmp_37)> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 653 [1/1] (0.00ns) (grouped into LUT with out node and_ln416_3)   --->   "%tmp_75 = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 %add_ln415_3, i32 15)" [BN/bn.cpp:107]   --->   Operation 653 'bitselect' 'tmp_75' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_26 : Operation 654 [1/1] (0.00ns) (grouped into LUT with out node and_ln416_3)   --->   "%xor_ln416_3 = xor i1 %tmp_75, true" [BN/bn.cpp:107]   --->   Operation 654 'xor' 'xor_ln416_3' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 655 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln416_3 = and i1 %tmp_73, %xor_ln416_3" [BN/bn.cpp:107]   --->   Operation 655 'and' 'and_ln416_3' <Predicate = (!tmp_37)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 656 [1/1] (0.00ns)   --->   "%tmp_76 = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 %add_ln415_3, i32 15)" [BN/bn.cpp:107]   --->   Operation 656 'bitselect' 'tmp_76' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_26 : Operation 657 [1/1] (0.00ns)   --->   "%tmp_7 = call i10 @_ssdm_op_PartSelect.i10.i47.i32.i32(i47 %add_ln1192_7, i32 37, i32 46)" [BN/bn.cpp:107]   --->   Operation 657 'partselect' 'tmp_7' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_26 : Operation 658 [1/1] (1.77ns)   --->   "%icmp_ln879_6 = icmp eq i10 %tmp_7, -1" [BN/bn.cpp:107]   --->   Operation 658 'icmp' 'icmp_ln879_6' <Predicate = (!tmp_37)> <Delay = 1.77> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 659 [1/1] (0.00ns)   --->   "%tmp_8 = call i11 @_ssdm_op_PartSelect.i11.i47.i32.i32(i47 %add_ln1192_7, i32 36, i32 46)" [BN/bn.cpp:107]   --->   Operation 659 'partselect' 'tmp_8' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_26 : Operation 660 [1/1] (1.88ns)   --->   "%icmp_ln879_7 = icmp eq i11 %tmp_8, -1" [BN/bn.cpp:107]   --->   Operation 660 'icmp' 'icmp_ln879_7' <Predicate = (!tmp_37)> <Delay = 1.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 661 [1/1] (1.88ns)   --->   "%icmp_ln768_3 = icmp eq i11 %tmp_8, 0" [BN/bn.cpp:107]   --->   Operation 661 'icmp' 'icmp_ln768_3' <Predicate = (!tmp_37)> <Delay = 1.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 662 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_3)   --->   "%tmp_77 = call i1 @_ssdm_op_BitSelect.i1.i37.i32(i37 %add_ln1192_11, i32 36)" [BN/bn.cpp:107]   --->   Operation 662 'bitselect' 'tmp_77' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_26 : Operation 663 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_3)   --->   "%xor_ln779_3 = xor i1 %tmp_77, true" [BN/bn.cpp:107]   --->   Operation 663 'xor' 'xor_ln779_3' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 664 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_3)   --->   "%and_ln779_3 = and i1 %icmp_ln879_6, %xor_ln779_3" [BN/bn.cpp:107]   --->   Operation 664 'and' 'and_ln779_3' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 665 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_3)   --->   "%select_ln416_3 = select i1 %and_ln416_3, i1 %and_ln779_3, i1 %icmp_ln879_7" [BN/bn.cpp:107]   --->   Operation 665 'select' 'select_ln416_3' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_26 : Operation 666 [1/1] (0.97ns)   --->   "%and_ln781_3 = and i1 %and_ln416_3, %icmp_ln879_7" [BN/bn.cpp:107]   --->   Operation 666 'and' 'and_ln781_3' <Predicate = (!tmp_37)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 667 [1/1] (0.99ns) (out node of the LUT)   --->   "%and_ln786_3 = and i1 %tmp_76, %select_ln416_3" [BN/bn.cpp:107]   --->   Operation 667 'and' 'and_ln786_3' <Predicate = (!tmp_37)> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 668 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_15)   --->   "%or_ln786_3 = or i1 %and_ln781_3, %and_ln786_3" [BN/bn.cpp:107]   --->   Operation 668 'or' 'or_ln786_3' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 669 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_15)   --->   "%xor_ln786_11 = xor i1 %or_ln786_3, true" [BN/bn.cpp:107]   --->   Operation 669 'xor' 'xor_ln786_11' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 670 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln786_15 = and i1 %tmp_72, %xor_ln786_11" [BN/bn.cpp:107]   --->   Operation 670 'and' 'and_ln786_15' <Predicate = (!tmp_37)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 671 [5/5] (8.75ns)   --->   "%OUT_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %OUT_addr)" [BN/bn.cpp:113]   --->   Operation 671 'writeresp' 'OUT_addr_resp' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_26 : Operation 672 [1/1] (0.00ns)   --->   "%result_pack_1_V = call i64 @llvm.part.set.i64.i16(i64 %result_pack_1_V_1_l, i16 %result_1_V, i32 0, i32 15)" [BN/bn.cpp:112]   --->   Operation 672 'partset' 'result_pack_1_V' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_26 : Operation 673 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i64P(i64* %OUT_addr_1, i64 %result_pack_1_V, i8 -1)" [BN/bn.cpp:113]   --->   Operation 673 'write' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_26 : Operation 674 [1/1] (0.00ns)   --->   "%zext_ln321_26 = zext i30 %add_ln321_22 to i64" [BN/bn.cpp:113]   --->   Operation 674 'zext' 'zext_ln321_26' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_26 : Operation 675 [1/1] (0.00ns)   --->   "%OUT_addr_2 = getelementptr i64* %OUT_r, i64 %zext_ln321_26" [BN/bn.cpp:113]   --->   Operation 675 'getelementptr' 'OUT_addr_2' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_26 : Operation 676 [1/1] (8.75ns)   --->   "%OUT_addr_2_req = call i1 @_ssdm_op_WriteReq.m_axi.i64P(i64* %OUT_addr_2, i32 1)" [BN/bn.cpp:113]   --->   Operation 676 'writereq' 'OUT_addr_2_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_26 : Operation 677 [1/1] (0.00ns)   --->   "store i64 %result_pack_1_V, i64* %result_pack_1_V_1" [BN/bn.cpp:87]   --->   Operation 677 'store' <Predicate = (!tmp_37)> <Delay = 0.00>

State 27 <SV = 26> <Delay = 8.75>
ST_27 : Operation 678 [1/1] (0.00ns)   --->   "%result_pack_2_V_1_l = load i64* %result_pack_2_V_1" [BN/bn.cpp:112]   --->   Operation 678 'load' 'result_pack_2_V_1_l' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_27 : Operation 679 [1/1] (0.00ns) (grouped into LUT with out node or_ln340_17)   --->   "%select_ln777_3 = select i1 %and_ln416_3, i1 %icmp_ln879_7, i1 %icmp_ln768_3" [BN/bn.cpp:107]   --->   Operation 679 'select' 'select_ln777_3' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_27 : Operation 680 [1/1] (0.00ns) (grouped into LUT with out node or_ln340_17)   --->   "%xor_ln785_6 = xor i1 %select_ln777_3, true" [BN/bn.cpp:107]   --->   Operation 680 'xor' 'xor_ln785_6' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 681 [1/1] (0.00ns) (grouped into LUT with out node or_ln340_17)   --->   "%or_ln785_3 = or i1 %tmp_76, %xor_ln785_6" [BN/bn.cpp:107]   --->   Operation 681 'or' 'or_ln785_3' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 682 [1/1] (0.97ns)   --->   "%xor_ln785_7 = xor i1 %tmp_72, true" [BN/bn.cpp:107]   --->   Operation 682 'xor' 'xor_ln785_7' <Predicate = (!tmp_37)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 683 [1/1] (0.00ns) (grouped into LUT with out node or_ln340_17)   --->   "%and_ln785_3 = and i1 %or_ln785_3, %xor_ln785_7" [BN/bn.cpp:107]   --->   Operation 683 'and' 'and_ln785_3' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 684 [1/1] (0.99ns) (out node of the LUT)   --->   "%or_ln340_17 = or i1 %and_ln786_15, %and_ln785_3" [BN/bn.cpp:107]   --->   Operation 684 'or' 'or_ln340_17' <Predicate = (!tmp_37)> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 685 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_23)   --->   "%or_ln340_18 = or i1 %and_ln786_3, %xor_ln785_7" [BN/bn.cpp:107]   --->   Operation 685 'or' 'or_ln340_18' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 686 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_23)   --->   "%or_ln340_19 = or i1 %or_ln340_18, %and_ln781_3" [BN/bn.cpp:107]   --->   Operation 686 'or' 'or_ln340_19' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 687 [1/1] (0.80ns) (out node of the LUT)   --->   "%select_ln340_11 = select i1 %or_ln340_17, i16 32767, i16 %add_ln415_3" [BN/bn.cpp:107]   --->   Operation 687 'select' 'select_ln340_11' <Predicate = (!tmp_37)> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_27 : Operation 688 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_23)   --->   "%select_ln388_11 = select i1 %and_ln786_15, i16 -32768, i16 %add_ln415_3" [BN/bn.cpp:107]   --->   Operation 688 'select' 'select_ln388_11' <Predicate = (!tmp_37)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_27 : Operation 689 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln340_23 = select i1 %or_ln340_19, i16 %select_ln340_11, i16 %select_ln388_11" [BN/bn.cpp:107]   --->   Operation 689 'select' 'select_ln340_23' <Predicate = (!tmp_37)> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_27 : Operation 690 [4/5] (8.75ns)   --->   "%OUT_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %OUT_addr)" [BN/bn.cpp:113]   --->   Operation 690 'writeresp' 'OUT_addr_resp' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_27 : Operation 691 [5/5] (8.75ns)   --->   "%OUT_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %OUT_addr_1)" [BN/bn.cpp:113]   --->   Operation 691 'writeresp' 'OUT_addr_1_resp' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_27 : Operation 692 [1/1] (0.00ns)   --->   "%result_pack_2_V = call i64 @llvm.part.set.i64.i16(i64 %result_pack_2_V_1_l, i16 %result_2_V, i32 0, i32 15)" [BN/bn.cpp:112]   --->   Operation 692 'partset' 'result_pack_2_V' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_27 : Operation 693 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i64P(i64* %OUT_addr_2, i64 %result_pack_2_V, i8 -1)" [BN/bn.cpp:113]   --->   Operation 693 'write' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_27 : Operation 694 [1/1] (0.00ns)   --->   "%zext_ln321_27 = zext i30 %add_ln321_23 to i64" [BN/bn.cpp:113]   --->   Operation 694 'zext' 'zext_ln321_27' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_27 : Operation 695 [1/1] (0.00ns)   --->   "%OUT_addr_3 = getelementptr i64* %OUT_r, i64 %zext_ln321_27" [BN/bn.cpp:113]   --->   Operation 695 'getelementptr' 'OUT_addr_3' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_27 : Operation 696 [1/1] (8.75ns)   --->   "%OUT_addr_3_req = call i1 @_ssdm_op_WriteReq.m_axi.i64P(i64* %OUT_addr_3, i32 1)" [BN/bn.cpp:113]   --->   Operation 696 'writereq' 'OUT_addr_3_req' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_27 : Operation 697 [1/1] (0.00ns)   --->   "store i64 %result_pack_2_V, i64* %result_pack_2_V_1" [BN/bn.cpp:87]   --->   Operation 697 'store' <Predicate = (!tmp_37)> <Delay = 0.00>

State 28 <SV = 27> <Delay = 8.75>
ST_28 : Operation 698 [1/1] (0.00ns)   --->   "%result_pack_3_V_1_l = load i64* %result_pack_3_V_1" [BN/bn.cpp:112]   --->   Operation 698 'load' 'result_pack_3_V_1_l' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_28 : Operation 699 [3/5] (8.75ns)   --->   "%OUT_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %OUT_addr)" [BN/bn.cpp:113]   --->   Operation 699 'writeresp' 'OUT_addr_resp' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_28 : Operation 700 [4/5] (8.75ns)   --->   "%OUT_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %OUT_addr_1)" [BN/bn.cpp:113]   --->   Operation 700 'writeresp' 'OUT_addr_1_resp' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_28 : Operation 701 [5/5] (8.75ns)   --->   "%OUT_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %OUT_addr_2)" [BN/bn.cpp:113]   --->   Operation 701 'writeresp' 'OUT_addr_2_resp' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_28 : Operation 702 [1/1] (0.00ns)   --->   "%result_pack_3_V = call i64 @llvm.part.set.i64.i16(i64 %result_pack_3_V_1_l, i16 %select_ln340_23, i32 0, i32 15)" [BN/bn.cpp:112]   --->   Operation 702 'partset' 'result_pack_3_V' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_28 : Operation 703 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i64P(i64* %OUT_addr_3, i64 %result_pack_3_V, i8 -1)" [BN/bn.cpp:113]   --->   Operation 703 'write' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_28 : Operation 704 [1/1] (0.00ns)   --->   "store i64 %result_pack_3_V, i64* %result_pack_3_V_1" [BN/bn.cpp:87]   --->   Operation 704 'store' <Predicate = (!tmp_37)> <Delay = 0.00>

State 29 <SV = 28> <Delay = 8.75>
ST_29 : Operation 705 [2/5] (8.75ns)   --->   "%OUT_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %OUT_addr)" [BN/bn.cpp:113]   --->   Operation 705 'writeresp' 'OUT_addr_resp' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_29 : Operation 706 [3/5] (8.75ns)   --->   "%OUT_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %OUT_addr_1)" [BN/bn.cpp:113]   --->   Operation 706 'writeresp' 'OUT_addr_1_resp' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_29 : Operation 707 [4/5] (8.75ns)   --->   "%OUT_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %OUT_addr_2)" [BN/bn.cpp:113]   --->   Operation 707 'writeresp' 'OUT_addr_2_resp' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_29 : Operation 708 [5/5] (8.75ns)   --->   "%OUT_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %OUT_addr_3)" [BN/bn.cpp:113]   --->   Operation 708 'writeresp' 'OUT_addr_3_resp' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 30 <SV = 29> <Delay = 8.75>
ST_30 : Operation 709 [1/5] (8.75ns)   --->   "%OUT_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %OUT_addr)" [BN/bn.cpp:113]   --->   Operation 709 'writeresp' 'OUT_addr_resp' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_30 : Operation 710 [2/5] (8.75ns)   --->   "%OUT_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %OUT_addr_1)" [BN/bn.cpp:113]   --->   Operation 710 'writeresp' 'OUT_addr_1_resp' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_30 : Operation 711 [3/5] (8.75ns)   --->   "%OUT_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %OUT_addr_2)" [BN/bn.cpp:113]   --->   Operation 711 'writeresp' 'OUT_addr_2_resp' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_30 : Operation 712 [4/5] (8.75ns)   --->   "%OUT_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %OUT_addr_3)" [BN/bn.cpp:113]   --->   Operation 712 'writeresp' 'OUT_addr_3_resp' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 31 <SV = 30> <Delay = 8.75>
ST_31 : Operation 713 [1/5] (8.75ns)   --->   "%OUT_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %OUT_addr_1)" [BN/bn.cpp:113]   --->   Operation 713 'writeresp' 'OUT_addr_1_resp' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_31 : Operation 714 [2/5] (8.75ns)   --->   "%OUT_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %OUT_addr_2)" [BN/bn.cpp:113]   --->   Operation 714 'writeresp' 'OUT_addr_2_resp' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_31 : Operation 715 [3/5] (8.75ns)   --->   "%OUT_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %OUT_addr_3)" [BN/bn.cpp:113]   --->   Operation 715 'writeresp' 'OUT_addr_3_resp' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 32 <SV = 31> <Delay = 8.75>
ST_32 : Operation 716 [1/5] (8.75ns)   --->   "%OUT_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %OUT_addr_2)" [BN/bn.cpp:113]   --->   Operation 716 'writeresp' 'OUT_addr_2_resp' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_32 : Operation 717 [2/5] (8.75ns)   --->   "%OUT_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %OUT_addr_3)" [BN/bn.cpp:113]   --->   Operation 717 'writeresp' 'OUT_addr_3_resp' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 33 <SV = 32> <Delay = 8.75>
ST_33 : Operation 718 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str12)" [BN/bn.cpp:87]   --->   Operation 718 'specregionbegin' 'tmp' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_33 : Operation 719 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [BN/bn.cpp:89]   --->   Operation 719 'specpipeline' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_33 : Operation 720 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [BN/bn.cpp:110]   --->   Operation 720 'specpipeline' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_33 : Operation 721 [1/5] (8.75ns)   --->   "%OUT_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %OUT_addr_3)" [BN/bn.cpp:113]   --->   Operation 721 'writeresp' 'OUT_addr_3_resp' <Predicate = (!tmp_37)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_33 : Operation 722 [1/1] (0.00ns)   --->   "%empty_28 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str12, i32 %tmp)" [BN/bn.cpp:115]   --->   Operation 722 'specregionend' 'empty_28' <Predicate = (!tmp_37)> <Delay = 0.00>
ST_33 : Operation 723 [1/1] (0.00ns)   --->   "br label %0" [BN/bn.cpp:87]   --->   Operation 723 'br' <Predicate = (!tmp_37)> <Delay = 0.00>

State 34 <SV = 2> <Delay = 0.00>
ST_34 : Operation 724 [1/1] (0.00ns)   --->   "ret void" [BN/bn.cpp:116]   --->   Operation 724 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', BN/bn.cpp:87) [57]  (1.77 ns)

 <State 2>: 2.46ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', BN/bn.cpp:87) [57]  (0 ns)
	'add' operation ('add_ln321', BN/bn.cpp:91) [70]  (2.46 ns)

 <State 3>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('IN_addr', BN/bn.cpp:91) [72]  (0 ns)
	bus request on port 'IN_r' (BN/bn.cpp:91) [73]  (8.75 ns)

 <State 4>: 8.75ns
The critical path consists of the following:
	bus request on port 'IN_r' (BN/bn.cpp:91) [73]  (8.75 ns)

 <State 5>: 8.75ns
The critical path consists of the following:
	bus request on port 'IN_r' (BN/bn.cpp:91) [73]  (8.75 ns)

 <State 6>: 8.75ns
The critical path consists of the following:
	bus request on port 'IN_r' (BN/bn.cpp:91) [73]  (8.75 ns)

 <State 7>: 8.75ns
The critical path consists of the following:
	bus request on port 'IN_r' (BN/bn.cpp:91) [73]  (8.75 ns)

 <State 8>: 8.75ns
The critical path consists of the following:
	bus request on port 'IN_r' (BN/bn.cpp:91) [73]  (8.75 ns)

 <State 9>: 8.75ns
The critical path consists of the following:
	bus request on port 'IN_r' (BN/bn.cpp:91) [73]  (8.75 ns)

 <State 10>: 8.75ns
The critical path consists of the following:
	bus read on port 'IN_r' (BN/bn.cpp:91) [74]  (8.75 ns)

 <State 11>: 8.75ns
The critical path consists of the following:
	bus read on port 'IN_r' (BN/bn.cpp:91) [104]  (8.75 ns)

 <State 12>: 8.75ns
The critical path consists of the following:
	bus read on port 'IN_r' (BN/bn.cpp:91) [134]  (8.75 ns)

 <State 13>: 8.75ns
The critical path consists of the following:
	bus read on port 'IN_r' (BN/bn.cpp:91) [164]  (8.75 ns)

 <State 14>: 8.27ns
The critical path consists of the following:
	'call' operation ('x_sqrt_V', E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106) to 'sqrt_fixed<16, 6>' [212]  (8.27 ns)

 <State 15>: 8.27ns
The critical path consists of the following:
	'call' operation ('x_sqrt_V', E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106) to 'sqrt_fixed<16, 6>' [212]  (8.27 ns)

 <State 16>: 8.27ns
The critical path consists of the following:
	'call' operation ('x_sqrt_V', E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106) to 'sqrt_fixed<16, 6>' [212]  (8.27 ns)

 <State 17>: 8.27ns
The critical path consists of the following:
	'call' operation ('x_sqrt_V', E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106) to 'sqrt_fixed<16, 6>' [212]  (8.27 ns)

 <State 18>: 8.27ns
The critical path consists of the following:
	'call' operation ('x_sqrt_V', E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106) to 'sqrt_fixed<16, 6>' [212]  (8.27 ns)

 <State 19>: 8.27ns
The critical path consists of the following:
	'call' operation ('x_sqrt_V', E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106) to 'sqrt_fixed<16, 6>' [212]  (8.27 ns)

 <State 20>: 8.27ns
The critical path consists of the following:
	'call' operation ('x_sqrt_V_1', E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106) to 'sqrt_fixed<16, 6>' [290]  (8.27 ns)

 <State 21>: 8.27ns
The critical path consists of the following:
	'call' operation ('x_sqrt_V_2', E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106) to 'sqrt_fixed<16, 6>' [368]  (8.27 ns)

 <State 22>: 8.27ns
The critical path consists of the following:
	'call' operation ('x_sqrt_V_3', E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106) to 'sqrt_fixed<16, 6>' [446]  (8.27 ns)

 <State 23>: 7.81ns
The critical path consists of the following:
	'call' operation ('x_sqrt_V_3', E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:106) to 'sqrt_fixed<16, 6>' [446]  (7.81 ns)

 <State 24>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('OUT_addr', BN/bn.cpp:113) [504]  (0 ns)
	bus request on port 'OUT_r' (BN/bn.cpp:113) [505]  (8.75 ns)

 <State 25>: 8.75ns
The critical path consists of the following:
	'load' operation ('result_pack_0_V_1_l', BN/bn.cpp:112) on local variable 'result_pack[0].V' [62]  (0 ns)
	bus write on port 'OUT_r' (BN/bn.cpp:113) [506]  (8.75 ns)

 <State 26>: 8.75ns
The critical path consists of the following:
	'load' operation ('result_pack_1_V_1_l', BN/bn.cpp:112) on local variable 'result_pack[1].V' [63]  (0 ns)
	bus write on port 'OUT_r' (BN/bn.cpp:113) [513]  (8.75 ns)

 <State 27>: 8.75ns
The critical path consists of the following:
	'load' operation ('result_pack_2_V_1_l', BN/bn.cpp:112) on local variable 'result_pack[2].V' [64]  (0 ns)
	bus write on port 'OUT_r' (BN/bn.cpp:113) [520]  (8.75 ns)

 <State 28>: 8.75ns
The critical path consists of the following:
	'load' operation ('result_pack_3_V_1_l', BN/bn.cpp:112) on local variable 'result_pack[3].V' [65]  (0 ns)
	bus write on port 'OUT_r' (BN/bn.cpp:113) [527]  (8.75 ns)

 <State 29>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (BN/bn.cpp:113) [507]  (8.75 ns)

 <State 30>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (BN/bn.cpp:113) [507]  (8.75 ns)

 <State 31>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (BN/bn.cpp:113) [514]  (8.75 ns)

 <State 32>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (BN/bn.cpp:113) [521]  (8.75 ns)

 <State 33>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (BN/bn.cpp:113) [528]  (8.75 ns)

 <State 34>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
