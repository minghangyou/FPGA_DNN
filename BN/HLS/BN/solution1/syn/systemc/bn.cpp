// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "bn.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic bn::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic bn::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<74> bn::ap_ST_fsm_state1 = "1";
const sc_lv<74> bn::ap_ST_fsm_state2 = "10";
const sc_lv<74> bn::ap_ST_fsm_state3 = "100";
const sc_lv<74> bn::ap_ST_fsm_state4 = "1000";
const sc_lv<74> bn::ap_ST_fsm_state5 = "10000";
const sc_lv<74> bn::ap_ST_fsm_state6 = "100000";
const sc_lv<74> bn::ap_ST_fsm_state7 = "1000000";
const sc_lv<74> bn::ap_ST_fsm_state8 = "10000000";
const sc_lv<74> bn::ap_ST_fsm_state9 = "100000000";
const sc_lv<74> bn::ap_ST_fsm_state10 = "1000000000";
const sc_lv<74> bn::ap_ST_fsm_state11 = "10000000000";
const sc_lv<74> bn::ap_ST_fsm_state12 = "100000000000";
const sc_lv<74> bn::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<74> bn::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<74> bn::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<74> bn::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state53 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state54 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state55 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state56 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state57 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state58 = "1000000000000000000000000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state59 = "10000000000000000000000000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state60 = "100000000000000000000000000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state61 = "1000000000000000000000000000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state62 = "10000000000000000000000000000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state63 = "100000000000000000000000000000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state64 = "1000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state65 = "10000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state66 = "100000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state67 = "1000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state68 = "10000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state69 = "100000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state70 = "1000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state71 = "10000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state72 = "100000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state73 = "1000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<74> bn::ap_ST_fsm_state74 = "10000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> bn::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> bn::ap_const_lv32_1 = "1";
const sc_lv<32> bn::ap_const_lv32_8 = "1000";
const sc_lv<1> bn::ap_const_lv1_0 = "0";
const sc_lv<32> bn::ap_const_lv32_7 = "111";
const sc_lv<32> bn::ap_const_lv32_9 = "1001";
const sc_lv<1> bn::ap_const_lv1_1 = "1";
const sc_lv<32> bn::ap_const_lv32_49 = "1001001";
const int bn::C_S_AXI_DATA_WIDTH = "100000";
const int bn::C_M_AXI_IN_R_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int bn::C_M_AXI_IN_R_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int bn::C_M_AXI_IN_R_CACHE_VALUE = "11";
const int bn::C_M_AXI_DATA_WIDTH = "100000";
const int bn::C_M_AXI_BETA_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int bn::C_M_AXI_BETA_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int bn::C_M_AXI_BETA_CACHE_VALUE = "11";
const int bn::C_M_AXI_GAMMA_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int bn::C_M_AXI_GAMMA_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int bn::C_M_AXI_GAMMA_CACHE_VALUE = "11";
const int bn::C_M_AXI_M_M_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int bn::C_M_AXI_M_M_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int bn::C_M_AXI_M_M_CACHE_VALUE = "11";
const int bn::C_M_AXI_M_V_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int bn::C_M_AXI_M_V_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int bn::C_M_AXI_M_V_CACHE_VALUE = "11";
const int bn::C_M_AXI_OUT_R_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int bn::C_M_AXI_OUT_R_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int bn::C_M_AXI_OUT_R_CACHE_VALUE = "11";
const bool bn::ap_const_boolean_0 = false;
const sc_lv<32> bn::ap_const_lv32_A = "1010";
const sc_lv<32> bn::ap_const_lv32_B = "1011";
const sc_lv<32> bn::ap_const_lv32_13 = "10011";
const sc_lv<32> bn::ap_const_lv32_14 = "10100";
const sc_lv<32> bn::ap_const_lv32_43 = "1000011";
const sc_lv<32> bn::ap_const_lv32_44 = "1000100";
const sc_lv<6> bn::ap_const_lv6_0 = "000000";
const sc_lv<3> bn::ap_const_lv3_0 = "000";
const sc_lv<32> bn::ap_const_lv32_45 = "1000101";
const sc_lv<32> bn::ap_const_lv32_20 = "100000";
const sc_lv<2> bn::ap_const_lv2_0 = "00";
const sc_lv<4> bn::ap_const_lv4_0 = "0000";
const sc_lv<8> bn::ap_const_lv8_FF = "11111111";
const sc_lv<32> bn::ap_const_lv32_3 = "11";
const sc_lv<32> bn::ap_const_lv32_1F = "11111";
const sc_lv<6> bn::ap_const_lv6_20 = "100000";
const sc_lv<6> bn::ap_const_lv6_1 = "1";
const sc_lv<3> bn::ap_const_lv3_4 = "100";
const sc_lv<3> bn::ap_const_lv3_1 = "1";
const sc_lv<6> bn::ap_const_lv6_F = "1111";
const sc_lv<32> bn::ap_const_lv32_3F = "111111";
const sc_lv<7> bn::ap_const_lv7_3F = "111111";
const sc_lv<64> bn::ap_const_lv64_FFFFFFFFFFFFFFFF = "1111111111111111111111111111111111111111111111111111111111111111";
const sc_lv<17> bn::ap_const_lv17_1 = "1";
const sc_lv<32> bn::ap_const_lv32_10 = "10000";
const sc_lv<16> bn::ap_const_lv16_1 = "1";
const sc_lv<32> bn::ap_const_lv32_F = "1111";
const sc_lv<16> bn::ap_const_lv16_7FFF = "111111111111111";
const sc_lv<16> bn::ap_const_lv16_8000 = "1000000000000000";
const sc_lv<10> bn::ap_const_lv10_0 = "0000000000";
const sc_lv<32> bn::ap_const_lv32_2B = "101011";
const sc_lv<32> bn::ap_const_lv32_19 = "11001";
const sc_lv<32> bn::ap_const_lv32_1B = "11011";
const sc_lv<17> bn::ap_const_lv17_1FFFF = "11111111111111111";
const sc_lv<32> bn::ap_const_lv32_1A = "11010";
const sc_lv<18> bn::ap_const_lv18_3FFFF = "111111111111111111";
const sc_lv<18> bn::ap_const_lv18_0 = "000000000000000000";
const sc_lv<64> bn::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<8> bn::ap_const_lv8_0 = "00000000";
const bool bn::ap_const_boolean_1 = true;

bn::bn(sc_module_name name) : sc_module(name), mVcdFile(0) {
    bn_CTRL_s_axi_U = new bn_CTRL_s_axi<C_S_AXI_CTRL_ADDR_WIDTH,C_S_AXI_CTRL_DATA_WIDTH>("bn_CTRL_s_axi_U");
    bn_CTRL_s_axi_U->AWVALID(s_axi_CTRL_AWVALID);
    bn_CTRL_s_axi_U->AWREADY(s_axi_CTRL_AWREADY);
    bn_CTRL_s_axi_U->AWADDR(s_axi_CTRL_AWADDR);
    bn_CTRL_s_axi_U->WVALID(s_axi_CTRL_WVALID);
    bn_CTRL_s_axi_U->WREADY(s_axi_CTRL_WREADY);
    bn_CTRL_s_axi_U->WDATA(s_axi_CTRL_WDATA);
    bn_CTRL_s_axi_U->WSTRB(s_axi_CTRL_WSTRB);
    bn_CTRL_s_axi_U->ARVALID(s_axi_CTRL_ARVALID);
    bn_CTRL_s_axi_U->ARREADY(s_axi_CTRL_ARREADY);
    bn_CTRL_s_axi_U->ARADDR(s_axi_CTRL_ARADDR);
    bn_CTRL_s_axi_U->RVALID(s_axi_CTRL_RVALID);
    bn_CTRL_s_axi_U->RREADY(s_axi_CTRL_RREADY);
    bn_CTRL_s_axi_U->RDATA(s_axi_CTRL_RDATA);
    bn_CTRL_s_axi_U->RRESP(s_axi_CTRL_RRESP);
    bn_CTRL_s_axi_U->BVALID(s_axi_CTRL_BVALID);
    bn_CTRL_s_axi_U->BREADY(s_axi_CTRL_BREADY);
    bn_CTRL_s_axi_U->BRESP(s_axi_CTRL_BRESP);
    bn_CTRL_s_axi_U->ACLK(ap_clk);
    bn_CTRL_s_axi_U->ARESET(ap_rst_n_inv);
    bn_CTRL_s_axi_U->ACLK_EN(ap_var_for_const0);
    bn_CTRL_s_axi_U->ap_start(ap_start);
    bn_CTRL_s_axi_U->interrupt(interrupt);
    bn_CTRL_s_axi_U->ap_ready(ap_ready);
    bn_CTRL_s_axi_U->ap_done(ap_done);
    bn_CTRL_s_axi_U->ap_idle(ap_idle);
    bn_CTRL_s_axi_U->in_V(in_V);
    bn_CTRL_s_axi_U->beta_V(beta_V);
    bn_CTRL_s_axi_U->gamma_V(gamma_V);
    bn_CTRL_s_axi_U->moving_mean_V(moving_mean_V);
    bn_CTRL_s_axi_U->moving_variance_V(moving_variance_V);
    bn_CTRL_s_axi_U->out_V(out_V);
    bn_IN_r_m_axi_U = new bn_IN_r_m_axi<0,64,32,5,16,16,16,16,C_M_AXI_IN_R_ID_WIDTH,C_M_AXI_IN_R_ADDR_WIDTH,C_M_AXI_IN_R_DATA_WIDTH,C_M_AXI_IN_R_AWUSER_WIDTH,C_M_AXI_IN_R_ARUSER_WIDTH,C_M_AXI_IN_R_WUSER_WIDTH,C_M_AXI_IN_R_RUSER_WIDTH,C_M_AXI_IN_R_BUSER_WIDTH,C_M_AXI_IN_R_USER_VALUE,C_M_AXI_IN_R_PROT_VALUE,C_M_AXI_IN_R_CACHE_VALUE>("bn_IN_r_m_axi_U");
    bn_IN_r_m_axi_U->AWVALID(m_axi_IN_r_AWVALID);
    bn_IN_r_m_axi_U->AWREADY(m_axi_IN_r_AWREADY);
    bn_IN_r_m_axi_U->AWADDR(m_axi_IN_r_AWADDR);
    bn_IN_r_m_axi_U->AWID(m_axi_IN_r_AWID);
    bn_IN_r_m_axi_U->AWLEN(m_axi_IN_r_AWLEN);
    bn_IN_r_m_axi_U->AWSIZE(m_axi_IN_r_AWSIZE);
    bn_IN_r_m_axi_U->AWBURST(m_axi_IN_r_AWBURST);
    bn_IN_r_m_axi_U->AWLOCK(m_axi_IN_r_AWLOCK);
    bn_IN_r_m_axi_U->AWCACHE(m_axi_IN_r_AWCACHE);
    bn_IN_r_m_axi_U->AWPROT(m_axi_IN_r_AWPROT);
    bn_IN_r_m_axi_U->AWQOS(m_axi_IN_r_AWQOS);
    bn_IN_r_m_axi_U->AWREGION(m_axi_IN_r_AWREGION);
    bn_IN_r_m_axi_U->AWUSER(m_axi_IN_r_AWUSER);
    bn_IN_r_m_axi_U->WVALID(m_axi_IN_r_WVALID);
    bn_IN_r_m_axi_U->WREADY(m_axi_IN_r_WREADY);
    bn_IN_r_m_axi_U->WDATA(m_axi_IN_r_WDATA);
    bn_IN_r_m_axi_U->WSTRB(m_axi_IN_r_WSTRB);
    bn_IN_r_m_axi_U->WLAST(m_axi_IN_r_WLAST);
    bn_IN_r_m_axi_U->WID(m_axi_IN_r_WID);
    bn_IN_r_m_axi_U->WUSER(m_axi_IN_r_WUSER);
    bn_IN_r_m_axi_U->ARVALID(m_axi_IN_r_ARVALID);
    bn_IN_r_m_axi_U->ARREADY(m_axi_IN_r_ARREADY);
    bn_IN_r_m_axi_U->ARADDR(m_axi_IN_r_ARADDR);
    bn_IN_r_m_axi_U->ARID(m_axi_IN_r_ARID);
    bn_IN_r_m_axi_U->ARLEN(m_axi_IN_r_ARLEN);
    bn_IN_r_m_axi_U->ARSIZE(m_axi_IN_r_ARSIZE);
    bn_IN_r_m_axi_U->ARBURST(m_axi_IN_r_ARBURST);
    bn_IN_r_m_axi_U->ARLOCK(m_axi_IN_r_ARLOCK);
    bn_IN_r_m_axi_U->ARCACHE(m_axi_IN_r_ARCACHE);
    bn_IN_r_m_axi_U->ARPROT(m_axi_IN_r_ARPROT);
    bn_IN_r_m_axi_U->ARQOS(m_axi_IN_r_ARQOS);
    bn_IN_r_m_axi_U->ARREGION(m_axi_IN_r_ARREGION);
    bn_IN_r_m_axi_U->ARUSER(m_axi_IN_r_ARUSER);
    bn_IN_r_m_axi_U->RVALID(m_axi_IN_r_RVALID);
    bn_IN_r_m_axi_U->RREADY(m_axi_IN_r_RREADY);
    bn_IN_r_m_axi_U->RDATA(m_axi_IN_r_RDATA);
    bn_IN_r_m_axi_U->RLAST(m_axi_IN_r_RLAST);
    bn_IN_r_m_axi_U->RID(m_axi_IN_r_RID);
    bn_IN_r_m_axi_U->RUSER(m_axi_IN_r_RUSER);
    bn_IN_r_m_axi_U->RRESP(m_axi_IN_r_RRESP);
    bn_IN_r_m_axi_U->BVALID(m_axi_IN_r_BVALID);
    bn_IN_r_m_axi_U->BREADY(m_axi_IN_r_BREADY);
    bn_IN_r_m_axi_U->BRESP(m_axi_IN_r_BRESP);
    bn_IN_r_m_axi_U->BID(m_axi_IN_r_BID);
    bn_IN_r_m_axi_U->BUSER(m_axi_IN_r_BUSER);
    bn_IN_r_m_axi_U->ACLK(ap_clk);
    bn_IN_r_m_axi_U->ARESET(ap_rst_n_inv);
    bn_IN_r_m_axi_U->ACLK_EN(ap_var_for_const0);
    bn_IN_r_m_axi_U->I_ARVALID(IN_r_ARVALID);
    bn_IN_r_m_axi_U->I_ARREADY(IN_r_ARREADY);
    bn_IN_r_m_axi_U->I_ARADDR(IN_r_ARADDR);
    bn_IN_r_m_axi_U->I_ARID(ap_var_for_const1);
    bn_IN_r_m_axi_U->I_ARLEN(ap_var_for_const2);
    bn_IN_r_m_axi_U->I_ARSIZE(ap_var_for_const3);
    bn_IN_r_m_axi_U->I_ARLOCK(ap_var_for_const4);
    bn_IN_r_m_axi_U->I_ARCACHE(ap_var_for_const5);
    bn_IN_r_m_axi_U->I_ARQOS(ap_var_for_const5);
    bn_IN_r_m_axi_U->I_ARPROT(ap_var_for_const3);
    bn_IN_r_m_axi_U->I_ARUSER(ap_var_for_const1);
    bn_IN_r_m_axi_U->I_ARBURST(ap_var_for_const4);
    bn_IN_r_m_axi_U->I_ARREGION(ap_var_for_const5);
    bn_IN_r_m_axi_U->I_RVALID(IN_r_RVALID);
    bn_IN_r_m_axi_U->I_RREADY(IN_r_RREADY);
    bn_IN_r_m_axi_U->I_RDATA(IN_r_RDATA);
    bn_IN_r_m_axi_U->I_RID(IN_r_RID);
    bn_IN_r_m_axi_U->I_RUSER(IN_r_RUSER);
    bn_IN_r_m_axi_U->I_RRESP(IN_r_RRESP);
    bn_IN_r_m_axi_U->I_RLAST(IN_r_RLAST);
    bn_IN_r_m_axi_U->I_AWVALID(ap_var_for_const6);
    bn_IN_r_m_axi_U->I_AWREADY(IN_r_AWREADY);
    bn_IN_r_m_axi_U->I_AWADDR(ap_var_for_const7);
    bn_IN_r_m_axi_U->I_AWID(ap_var_for_const1);
    bn_IN_r_m_axi_U->I_AWLEN(ap_var_for_const7);
    bn_IN_r_m_axi_U->I_AWSIZE(ap_var_for_const3);
    bn_IN_r_m_axi_U->I_AWLOCK(ap_var_for_const4);
    bn_IN_r_m_axi_U->I_AWCACHE(ap_var_for_const5);
    bn_IN_r_m_axi_U->I_AWQOS(ap_var_for_const5);
    bn_IN_r_m_axi_U->I_AWPROT(ap_var_for_const3);
    bn_IN_r_m_axi_U->I_AWUSER(ap_var_for_const1);
    bn_IN_r_m_axi_U->I_AWBURST(ap_var_for_const4);
    bn_IN_r_m_axi_U->I_AWREGION(ap_var_for_const5);
    bn_IN_r_m_axi_U->I_WVALID(ap_var_for_const6);
    bn_IN_r_m_axi_U->I_WREADY(IN_r_WREADY);
    bn_IN_r_m_axi_U->I_WDATA(ap_var_for_const8);
    bn_IN_r_m_axi_U->I_WID(ap_var_for_const1);
    bn_IN_r_m_axi_U->I_WUSER(ap_var_for_const1);
    bn_IN_r_m_axi_U->I_WLAST(ap_var_for_const6);
    bn_IN_r_m_axi_U->I_WSTRB(ap_var_for_const9);
    bn_IN_r_m_axi_U->I_BVALID(IN_r_BVALID);
    bn_IN_r_m_axi_U->I_BREADY(ap_var_for_const6);
    bn_IN_r_m_axi_U->I_BRESP(IN_r_BRESP);
    bn_IN_r_m_axi_U->I_BID(IN_r_BID);
    bn_IN_r_m_axi_U->I_BUSER(IN_r_BUSER);
    bn_BETA_m_axi_U = new bn_BETA_m_axi<0,64,32,5,16,16,16,16,C_M_AXI_BETA_ID_WIDTH,C_M_AXI_BETA_ADDR_WIDTH,C_M_AXI_BETA_DATA_WIDTH,C_M_AXI_BETA_AWUSER_WIDTH,C_M_AXI_BETA_ARUSER_WIDTH,C_M_AXI_BETA_WUSER_WIDTH,C_M_AXI_BETA_RUSER_WIDTH,C_M_AXI_BETA_BUSER_WIDTH,C_M_AXI_BETA_USER_VALUE,C_M_AXI_BETA_PROT_VALUE,C_M_AXI_BETA_CACHE_VALUE>("bn_BETA_m_axi_U");
    bn_BETA_m_axi_U->AWVALID(m_axi_BETA_AWVALID);
    bn_BETA_m_axi_U->AWREADY(m_axi_BETA_AWREADY);
    bn_BETA_m_axi_U->AWADDR(m_axi_BETA_AWADDR);
    bn_BETA_m_axi_U->AWID(m_axi_BETA_AWID);
    bn_BETA_m_axi_U->AWLEN(m_axi_BETA_AWLEN);
    bn_BETA_m_axi_U->AWSIZE(m_axi_BETA_AWSIZE);
    bn_BETA_m_axi_U->AWBURST(m_axi_BETA_AWBURST);
    bn_BETA_m_axi_U->AWLOCK(m_axi_BETA_AWLOCK);
    bn_BETA_m_axi_U->AWCACHE(m_axi_BETA_AWCACHE);
    bn_BETA_m_axi_U->AWPROT(m_axi_BETA_AWPROT);
    bn_BETA_m_axi_U->AWQOS(m_axi_BETA_AWQOS);
    bn_BETA_m_axi_U->AWREGION(m_axi_BETA_AWREGION);
    bn_BETA_m_axi_U->AWUSER(m_axi_BETA_AWUSER);
    bn_BETA_m_axi_U->WVALID(m_axi_BETA_WVALID);
    bn_BETA_m_axi_U->WREADY(m_axi_BETA_WREADY);
    bn_BETA_m_axi_U->WDATA(m_axi_BETA_WDATA);
    bn_BETA_m_axi_U->WSTRB(m_axi_BETA_WSTRB);
    bn_BETA_m_axi_U->WLAST(m_axi_BETA_WLAST);
    bn_BETA_m_axi_U->WID(m_axi_BETA_WID);
    bn_BETA_m_axi_U->WUSER(m_axi_BETA_WUSER);
    bn_BETA_m_axi_U->ARVALID(m_axi_BETA_ARVALID);
    bn_BETA_m_axi_U->ARREADY(m_axi_BETA_ARREADY);
    bn_BETA_m_axi_U->ARADDR(m_axi_BETA_ARADDR);
    bn_BETA_m_axi_U->ARID(m_axi_BETA_ARID);
    bn_BETA_m_axi_U->ARLEN(m_axi_BETA_ARLEN);
    bn_BETA_m_axi_U->ARSIZE(m_axi_BETA_ARSIZE);
    bn_BETA_m_axi_U->ARBURST(m_axi_BETA_ARBURST);
    bn_BETA_m_axi_U->ARLOCK(m_axi_BETA_ARLOCK);
    bn_BETA_m_axi_U->ARCACHE(m_axi_BETA_ARCACHE);
    bn_BETA_m_axi_U->ARPROT(m_axi_BETA_ARPROT);
    bn_BETA_m_axi_U->ARQOS(m_axi_BETA_ARQOS);
    bn_BETA_m_axi_U->ARREGION(m_axi_BETA_ARREGION);
    bn_BETA_m_axi_U->ARUSER(m_axi_BETA_ARUSER);
    bn_BETA_m_axi_U->RVALID(m_axi_BETA_RVALID);
    bn_BETA_m_axi_U->RREADY(m_axi_BETA_RREADY);
    bn_BETA_m_axi_U->RDATA(m_axi_BETA_RDATA);
    bn_BETA_m_axi_U->RLAST(m_axi_BETA_RLAST);
    bn_BETA_m_axi_U->RID(m_axi_BETA_RID);
    bn_BETA_m_axi_U->RUSER(m_axi_BETA_RUSER);
    bn_BETA_m_axi_U->RRESP(m_axi_BETA_RRESP);
    bn_BETA_m_axi_U->BVALID(m_axi_BETA_BVALID);
    bn_BETA_m_axi_U->BREADY(m_axi_BETA_BREADY);
    bn_BETA_m_axi_U->BRESP(m_axi_BETA_BRESP);
    bn_BETA_m_axi_U->BID(m_axi_BETA_BID);
    bn_BETA_m_axi_U->BUSER(m_axi_BETA_BUSER);
    bn_BETA_m_axi_U->ACLK(ap_clk);
    bn_BETA_m_axi_U->ARESET(ap_rst_n_inv);
    bn_BETA_m_axi_U->ACLK_EN(ap_var_for_const0);
    bn_BETA_m_axi_U->I_ARVALID(BETA_ARVALID);
    bn_BETA_m_axi_U->I_ARREADY(BETA_ARREADY);
    bn_BETA_m_axi_U->I_ARADDR(BETA_ARADDR);
    bn_BETA_m_axi_U->I_ARID(ap_var_for_const1);
    bn_BETA_m_axi_U->I_ARLEN(ap_var_for_const2);
    bn_BETA_m_axi_U->I_ARSIZE(ap_var_for_const3);
    bn_BETA_m_axi_U->I_ARLOCK(ap_var_for_const4);
    bn_BETA_m_axi_U->I_ARCACHE(ap_var_for_const5);
    bn_BETA_m_axi_U->I_ARQOS(ap_var_for_const5);
    bn_BETA_m_axi_U->I_ARPROT(ap_var_for_const3);
    bn_BETA_m_axi_U->I_ARUSER(ap_var_for_const1);
    bn_BETA_m_axi_U->I_ARBURST(ap_var_for_const4);
    bn_BETA_m_axi_U->I_ARREGION(ap_var_for_const5);
    bn_BETA_m_axi_U->I_RVALID(BETA_RVALID);
    bn_BETA_m_axi_U->I_RREADY(BETA_RREADY);
    bn_BETA_m_axi_U->I_RDATA(BETA_RDATA);
    bn_BETA_m_axi_U->I_RID(BETA_RID);
    bn_BETA_m_axi_U->I_RUSER(BETA_RUSER);
    bn_BETA_m_axi_U->I_RRESP(BETA_RRESP);
    bn_BETA_m_axi_U->I_RLAST(BETA_RLAST);
    bn_BETA_m_axi_U->I_AWVALID(ap_var_for_const6);
    bn_BETA_m_axi_U->I_AWREADY(BETA_AWREADY);
    bn_BETA_m_axi_U->I_AWADDR(ap_var_for_const7);
    bn_BETA_m_axi_U->I_AWID(ap_var_for_const1);
    bn_BETA_m_axi_U->I_AWLEN(ap_var_for_const7);
    bn_BETA_m_axi_U->I_AWSIZE(ap_var_for_const3);
    bn_BETA_m_axi_U->I_AWLOCK(ap_var_for_const4);
    bn_BETA_m_axi_U->I_AWCACHE(ap_var_for_const5);
    bn_BETA_m_axi_U->I_AWQOS(ap_var_for_const5);
    bn_BETA_m_axi_U->I_AWPROT(ap_var_for_const3);
    bn_BETA_m_axi_U->I_AWUSER(ap_var_for_const1);
    bn_BETA_m_axi_U->I_AWBURST(ap_var_for_const4);
    bn_BETA_m_axi_U->I_AWREGION(ap_var_for_const5);
    bn_BETA_m_axi_U->I_WVALID(ap_var_for_const6);
    bn_BETA_m_axi_U->I_WREADY(BETA_WREADY);
    bn_BETA_m_axi_U->I_WDATA(ap_var_for_const8);
    bn_BETA_m_axi_U->I_WID(ap_var_for_const1);
    bn_BETA_m_axi_U->I_WUSER(ap_var_for_const1);
    bn_BETA_m_axi_U->I_WLAST(ap_var_for_const6);
    bn_BETA_m_axi_U->I_WSTRB(ap_var_for_const9);
    bn_BETA_m_axi_U->I_BVALID(BETA_BVALID);
    bn_BETA_m_axi_U->I_BREADY(ap_var_for_const6);
    bn_BETA_m_axi_U->I_BRESP(BETA_BRESP);
    bn_BETA_m_axi_U->I_BID(BETA_BID);
    bn_BETA_m_axi_U->I_BUSER(BETA_BUSER);
    bn_GAMMA_m_axi_U = new bn_GAMMA_m_axi<0,64,32,5,16,16,16,16,C_M_AXI_GAMMA_ID_WIDTH,C_M_AXI_GAMMA_ADDR_WIDTH,C_M_AXI_GAMMA_DATA_WIDTH,C_M_AXI_GAMMA_AWUSER_WIDTH,C_M_AXI_GAMMA_ARUSER_WIDTH,C_M_AXI_GAMMA_WUSER_WIDTH,C_M_AXI_GAMMA_RUSER_WIDTH,C_M_AXI_GAMMA_BUSER_WIDTH,C_M_AXI_GAMMA_USER_VALUE,C_M_AXI_GAMMA_PROT_VALUE,C_M_AXI_GAMMA_CACHE_VALUE>("bn_GAMMA_m_axi_U");
    bn_GAMMA_m_axi_U->AWVALID(m_axi_GAMMA_AWVALID);
    bn_GAMMA_m_axi_U->AWREADY(m_axi_GAMMA_AWREADY);
    bn_GAMMA_m_axi_U->AWADDR(m_axi_GAMMA_AWADDR);
    bn_GAMMA_m_axi_U->AWID(m_axi_GAMMA_AWID);
    bn_GAMMA_m_axi_U->AWLEN(m_axi_GAMMA_AWLEN);
    bn_GAMMA_m_axi_U->AWSIZE(m_axi_GAMMA_AWSIZE);
    bn_GAMMA_m_axi_U->AWBURST(m_axi_GAMMA_AWBURST);
    bn_GAMMA_m_axi_U->AWLOCK(m_axi_GAMMA_AWLOCK);
    bn_GAMMA_m_axi_U->AWCACHE(m_axi_GAMMA_AWCACHE);
    bn_GAMMA_m_axi_U->AWPROT(m_axi_GAMMA_AWPROT);
    bn_GAMMA_m_axi_U->AWQOS(m_axi_GAMMA_AWQOS);
    bn_GAMMA_m_axi_U->AWREGION(m_axi_GAMMA_AWREGION);
    bn_GAMMA_m_axi_U->AWUSER(m_axi_GAMMA_AWUSER);
    bn_GAMMA_m_axi_U->WVALID(m_axi_GAMMA_WVALID);
    bn_GAMMA_m_axi_U->WREADY(m_axi_GAMMA_WREADY);
    bn_GAMMA_m_axi_U->WDATA(m_axi_GAMMA_WDATA);
    bn_GAMMA_m_axi_U->WSTRB(m_axi_GAMMA_WSTRB);
    bn_GAMMA_m_axi_U->WLAST(m_axi_GAMMA_WLAST);
    bn_GAMMA_m_axi_U->WID(m_axi_GAMMA_WID);
    bn_GAMMA_m_axi_U->WUSER(m_axi_GAMMA_WUSER);
    bn_GAMMA_m_axi_U->ARVALID(m_axi_GAMMA_ARVALID);
    bn_GAMMA_m_axi_U->ARREADY(m_axi_GAMMA_ARREADY);
    bn_GAMMA_m_axi_U->ARADDR(m_axi_GAMMA_ARADDR);
    bn_GAMMA_m_axi_U->ARID(m_axi_GAMMA_ARID);
    bn_GAMMA_m_axi_U->ARLEN(m_axi_GAMMA_ARLEN);
    bn_GAMMA_m_axi_U->ARSIZE(m_axi_GAMMA_ARSIZE);
    bn_GAMMA_m_axi_U->ARBURST(m_axi_GAMMA_ARBURST);
    bn_GAMMA_m_axi_U->ARLOCK(m_axi_GAMMA_ARLOCK);
    bn_GAMMA_m_axi_U->ARCACHE(m_axi_GAMMA_ARCACHE);
    bn_GAMMA_m_axi_U->ARPROT(m_axi_GAMMA_ARPROT);
    bn_GAMMA_m_axi_U->ARQOS(m_axi_GAMMA_ARQOS);
    bn_GAMMA_m_axi_U->ARREGION(m_axi_GAMMA_ARREGION);
    bn_GAMMA_m_axi_U->ARUSER(m_axi_GAMMA_ARUSER);
    bn_GAMMA_m_axi_U->RVALID(m_axi_GAMMA_RVALID);
    bn_GAMMA_m_axi_U->RREADY(m_axi_GAMMA_RREADY);
    bn_GAMMA_m_axi_U->RDATA(m_axi_GAMMA_RDATA);
    bn_GAMMA_m_axi_U->RLAST(m_axi_GAMMA_RLAST);
    bn_GAMMA_m_axi_U->RID(m_axi_GAMMA_RID);
    bn_GAMMA_m_axi_U->RUSER(m_axi_GAMMA_RUSER);
    bn_GAMMA_m_axi_U->RRESP(m_axi_GAMMA_RRESP);
    bn_GAMMA_m_axi_U->BVALID(m_axi_GAMMA_BVALID);
    bn_GAMMA_m_axi_U->BREADY(m_axi_GAMMA_BREADY);
    bn_GAMMA_m_axi_U->BRESP(m_axi_GAMMA_BRESP);
    bn_GAMMA_m_axi_U->BID(m_axi_GAMMA_BID);
    bn_GAMMA_m_axi_U->BUSER(m_axi_GAMMA_BUSER);
    bn_GAMMA_m_axi_U->ACLK(ap_clk);
    bn_GAMMA_m_axi_U->ARESET(ap_rst_n_inv);
    bn_GAMMA_m_axi_U->ACLK_EN(ap_var_for_const0);
    bn_GAMMA_m_axi_U->I_ARVALID(GAMMA_ARVALID);
    bn_GAMMA_m_axi_U->I_ARREADY(GAMMA_ARREADY);
    bn_GAMMA_m_axi_U->I_ARADDR(GAMMA_ARADDR);
    bn_GAMMA_m_axi_U->I_ARID(ap_var_for_const1);
    bn_GAMMA_m_axi_U->I_ARLEN(ap_var_for_const2);
    bn_GAMMA_m_axi_U->I_ARSIZE(ap_var_for_const3);
    bn_GAMMA_m_axi_U->I_ARLOCK(ap_var_for_const4);
    bn_GAMMA_m_axi_U->I_ARCACHE(ap_var_for_const5);
    bn_GAMMA_m_axi_U->I_ARQOS(ap_var_for_const5);
    bn_GAMMA_m_axi_U->I_ARPROT(ap_var_for_const3);
    bn_GAMMA_m_axi_U->I_ARUSER(ap_var_for_const1);
    bn_GAMMA_m_axi_U->I_ARBURST(ap_var_for_const4);
    bn_GAMMA_m_axi_U->I_ARREGION(ap_var_for_const5);
    bn_GAMMA_m_axi_U->I_RVALID(GAMMA_RVALID);
    bn_GAMMA_m_axi_U->I_RREADY(GAMMA_RREADY);
    bn_GAMMA_m_axi_U->I_RDATA(GAMMA_RDATA);
    bn_GAMMA_m_axi_U->I_RID(GAMMA_RID);
    bn_GAMMA_m_axi_U->I_RUSER(GAMMA_RUSER);
    bn_GAMMA_m_axi_U->I_RRESP(GAMMA_RRESP);
    bn_GAMMA_m_axi_U->I_RLAST(GAMMA_RLAST);
    bn_GAMMA_m_axi_U->I_AWVALID(ap_var_for_const6);
    bn_GAMMA_m_axi_U->I_AWREADY(GAMMA_AWREADY);
    bn_GAMMA_m_axi_U->I_AWADDR(ap_var_for_const7);
    bn_GAMMA_m_axi_U->I_AWID(ap_var_for_const1);
    bn_GAMMA_m_axi_U->I_AWLEN(ap_var_for_const7);
    bn_GAMMA_m_axi_U->I_AWSIZE(ap_var_for_const3);
    bn_GAMMA_m_axi_U->I_AWLOCK(ap_var_for_const4);
    bn_GAMMA_m_axi_U->I_AWCACHE(ap_var_for_const5);
    bn_GAMMA_m_axi_U->I_AWQOS(ap_var_for_const5);
    bn_GAMMA_m_axi_U->I_AWPROT(ap_var_for_const3);
    bn_GAMMA_m_axi_U->I_AWUSER(ap_var_for_const1);
    bn_GAMMA_m_axi_U->I_AWBURST(ap_var_for_const4);
    bn_GAMMA_m_axi_U->I_AWREGION(ap_var_for_const5);
    bn_GAMMA_m_axi_U->I_WVALID(ap_var_for_const6);
    bn_GAMMA_m_axi_U->I_WREADY(GAMMA_WREADY);
    bn_GAMMA_m_axi_U->I_WDATA(ap_var_for_const8);
    bn_GAMMA_m_axi_U->I_WID(ap_var_for_const1);
    bn_GAMMA_m_axi_U->I_WUSER(ap_var_for_const1);
    bn_GAMMA_m_axi_U->I_WLAST(ap_var_for_const6);
    bn_GAMMA_m_axi_U->I_WSTRB(ap_var_for_const9);
    bn_GAMMA_m_axi_U->I_BVALID(GAMMA_BVALID);
    bn_GAMMA_m_axi_U->I_BREADY(ap_var_for_const6);
    bn_GAMMA_m_axi_U->I_BRESP(GAMMA_BRESP);
    bn_GAMMA_m_axi_U->I_BID(GAMMA_BID);
    bn_GAMMA_m_axi_U->I_BUSER(GAMMA_BUSER);
    bn_M_M_m_axi_U = new bn_M_M_m_axi<0,64,32,5,16,16,16,16,C_M_AXI_M_M_ID_WIDTH,C_M_AXI_M_M_ADDR_WIDTH,C_M_AXI_M_M_DATA_WIDTH,C_M_AXI_M_M_AWUSER_WIDTH,C_M_AXI_M_M_ARUSER_WIDTH,C_M_AXI_M_M_WUSER_WIDTH,C_M_AXI_M_M_RUSER_WIDTH,C_M_AXI_M_M_BUSER_WIDTH,C_M_AXI_M_M_USER_VALUE,C_M_AXI_M_M_PROT_VALUE,C_M_AXI_M_M_CACHE_VALUE>("bn_M_M_m_axi_U");
    bn_M_M_m_axi_U->AWVALID(m_axi_M_M_AWVALID);
    bn_M_M_m_axi_U->AWREADY(m_axi_M_M_AWREADY);
    bn_M_M_m_axi_U->AWADDR(m_axi_M_M_AWADDR);
    bn_M_M_m_axi_U->AWID(m_axi_M_M_AWID);
    bn_M_M_m_axi_U->AWLEN(m_axi_M_M_AWLEN);
    bn_M_M_m_axi_U->AWSIZE(m_axi_M_M_AWSIZE);
    bn_M_M_m_axi_U->AWBURST(m_axi_M_M_AWBURST);
    bn_M_M_m_axi_U->AWLOCK(m_axi_M_M_AWLOCK);
    bn_M_M_m_axi_U->AWCACHE(m_axi_M_M_AWCACHE);
    bn_M_M_m_axi_U->AWPROT(m_axi_M_M_AWPROT);
    bn_M_M_m_axi_U->AWQOS(m_axi_M_M_AWQOS);
    bn_M_M_m_axi_U->AWREGION(m_axi_M_M_AWREGION);
    bn_M_M_m_axi_U->AWUSER(m_axi_M_M_AWUSER);
    bn_M_M_m_axi_U->WVALID(m_axi_M_M_WVALID);
    bn_M_M_m_axi_U->WREADY(m_axi_M_M_WREADY);
    bn_M_M_m_axi_U->WDATA(m_axi_M_M_WDATA);
    bn_M_M_m_axi_U->WSTRB(m_axi_M_M_WSTRB);
    bn_M_M_m_axi_U->WLAST(m_axi_M_M_WLAST);
    bn_M_M_m_axi_U->WID(m_axi_M_M_WID);
    bn_M_M_m_axi_U->WUSER(m_axi_M_M_WUSER);
    bn_M_M_m_axi_U->ARVALID(m_axi_M_M_ARVALID);
    bn_M_M_m_axi_U->ARREADY(m_axi_M_M_ARREADY);
    bn_M_M_m_axi_U->ARADDR(m_axi_M_M_ARADDR);
    bn_M_M_m_axi_U->ARID(m_axi_M_M_ARID);
    bn_M_M_m_axi_U->ARLEN(m_axi_M_M_ARLEN);
    bn_M_M_m_axi_U->ARSIZE(m_axi_M_M_ARSIZE);
    bn_M_M_m_axi_U->ARBURST(m_axi_M_M_ARBURST);
    bn_M_M_m_axi_U->ARLOCK(m_axi_M_M_ARLOCK);
    bn_M_M_m_axi_U->ARCACHE(m_axi_M_M_ARCACHE);
    bn_M_M_m_axi_U->ARPROT(m_axi_M_M_ARPROT);
    bn_M_M_m_axi_U->ARQOS(m_axi_M_M_ARQOS);
    bn_M_M_m_axi_U->ARREGION(m_axi_M_M_ARREGION);
    bn_M_M_m_axi_U->ARUSER(m_axi_M_M_ARUSER);
    bn_M_M_m_axi_U->RVALID(m_axi_M_M_RVALID);
    bn_M_M_m_axi_U->RREADY(m_axi_M_M_RREADY);
    bn_M_M_m_axi_U->RDATA(m_axi_M_M_RDATA);
    bn_M_M_m_axi_U->RLAST(m_axi_M_M_RLAST);
    bn_M_M_m_axi_U->RID(m_axi_M_M_RID);
    bn_M_M_m_axi_U->RUSER(m_axi_M_M_RUSER);
    bn_M_M_m_axi_U->RRESP(m_axi_M_M_RRESP);
    bn_M_M_m_axi_U->BVALID(m_axi_M_M_BVALID);
    bn_M_M_m_axi_U->BREADY(m_axi_M_M_BREADY);
    bn_M_M_m_axi_U->BRESP(m_axi_M_M_BRESP);
    bn_M_M_m_axi_U->BID(m_axi_M_M_BID);
    bn_M_M_m_axi_U->BUSER(m_axi_M_M_BUSER);
    bn_M_M_m_axi_U->ACLK(ap_clk);
    bn_M_M_m_axi_U->ARESET(ap_rst_n_inv);
    bn_M_M_m_axi_U->ACLK_EN(ap_var_for_const0);
    bn_M_M_m_axi_U->I_ARVALID(M_M_ARVALID);
    bn_M_M_m_axi_U->I_ARREADY(M_M_ARREADY);
    bn_M_M_m_axi_U->I_ARADDR(M_M_ARADDR);
    bn_M_M_m_axi_U->I_ARID(ap_var_for_const1);
    bn_M_M_m_axi_U->I_ARLEN(ap_var_for_const2);
    bn_M_M_m_axi_U->I_ARSIZE(ap_var_for_const3);
    bn_M_M_m_axi_U->I_ARLOCK(ap_var_for_const4);
    bn_M_M_m_axi_U->I_ARCACHE(ap_var_for_const5);
    bn_M_M_m_axi_U->I_ARQOS(ap_var_for_const5);
    bn_M_M_m_axi_U->I_ARPROT(ap_var_for_const3);
    bn_M_M_m_axi_U->I_ARUSER(ap_var_for_const1);
    bn_M_M_m_axi_U->I_ARBURST(ap_var_for_const4);
    bn_M_M_m_axi_U->I_ARREGION(ap_var_for_const5);
    bn_M_M_m_axi_U->I_RVALID(M_M_RVALID);
    bn_M_M_m_axi_U->I_RREADY(M_M_RREADY);
    bn_M_M_m_axi_U->I_RDATA(M_M_RDATA);
    bn_M_M_m_axi_U->I_RID(M_M_RID);
    bn_M_M_m_axi_U->I_RUSER(M_M_RUSER);
    bn_M_M_m_axi_U->I_RRESP(M_M_RRESP);
    bn_M_M_m_axi_U->I_RLAST(M_M_RLAST);
    bn_M_M_m_axi_U->I_AWVALID(ap_var_for_const6);
    bn_M_M_m_axi_U->I_AWREADY(M_M_AWREADY);
    bn_M_M_m_axi_U->I_AWADDR(ap_var_for_const7);
    bn_M_M_m_axi_U->I_AWID(ap_var_for_const1);
    bn_M_M_m_axi_U->I_AWLEN(ap_var_for_const7);
    bn_M_M_m_axi_U->I_AWSIZE(ap_var_for_const3);
    bn_M_M_m_axi_U->I_AWLOCK(ap_var_for_const4);
    bn_M_M_m_axi_U->I_AWCACHE(ap_var_for_const5);
    bn_M_M_m_axi_U->I_AWQOS(ap_var_for_const5);
    bn_M_M_m_axi_U->I_AWPROT(ap_var_for_const3);
    bn_M_M_m_axi_U->I_AWUSER(ap_var_for_const1);
    bn_M_M_m_axi_U->I_AWBURST(ap_var_for_const4);
    bn_M_M_m_axi_U->I_AWREGION(ap_var_for_const5);
    bn_M_M_m_axi_U->I_WVALID(ap_var_for_const6);
    bn_M_M_m_axi_U->I_WREADY(M_M_WREADY);
    bn_M_M_m_axi_U->I_WDATA(ap_var_for_const8);
    bn_M_M_m_axi_U->I_WID(ap_var_for_const1);
    bn_M_M_m_axi_U->I_WUSER(ap_var_for_const1);
    bn_M_M_m_axi_U->I_WLAST(ap_var_for_const6);
    bn_M_M_m_axi_U->I_WSTRB(ap_var_for_const9);
    bn_M_M_m_axi_U->I_BVALID(M_M_BVALID);
    bn_M_M_m_axi_U->I_BREADY(ap_var_for_const6);
    bn_M_M_m_axi_U->I_BRESP(M_M_BRESP);
    bn_M_M_m_axi_U->I_BID(M_M_BID);
    bn_M_M_m_axi_U->I_BUSER(M_M_BUSER);
    bn_M_V_m_axi_U = new bn_M_V_m_axi<0,64,32,5,16,16,16,16,C_M_AXI_M_V_ID_WIDTH,C_M_AXI_M_V_ADDR_WIDTH,C_M_AXI_M_V_DATA_WIDTH,C_M_AXI_M_V_AWUSER_WIDTH,C_M_AXI_M_V_ARUSER_WIDTH,C_M_AXI_M_V_WUSER_WIDTH,C_M_AXI_M_V_RUSER_WIDTH,C_M_AXI_M_V_BUSER_WIDTH,C_M_AXI_M_V_USER_VALUE,C_M_AXI_M_V_PROT_VALUE,C_M_AXI_M_V_CACHE_VALUE>("bn_M_V_m_axi_U");
    bn_M_V_m_axi_U->AWVALID(m_axi_M_V_AWVALID);
    bn_M_V_m_axi_U->AWREADY(m_axi_M_V_AWREADY);
    bn_M_V_m_axi_U->AWADDR(m_axi_M_V_AWADDR);
    bn_M_V_m_axi_U->AWID(m_axi_M_V_AWID);
    bn_M_V_m_axi_U->AWLEN(m_axi_M_V_AWLEN);
    bn_M_V_m_axi_U->AWSIZE(m_axi_M_V_AWSIZE);
    bn_M_V_m_axi_U->AWBURST(m_axi_M_V_AWBURST);
    bn_M_V_m_axi_U->AWLOCK(m_axi_M_V_AWLOCK);
    bn_M_V_m_axi_U->AWCACHE(m_axi_M_V_AWCACHE);
    bn_M_V_m_axi_U->AWPROT(m_axi_M_V_AWPROT);
    bn_M_V_m_axi_U->AWQOS(m_axi_M_V_AWQOS);
    bn_M_V_m_axi_U->AWREGION(m_axi_M_V_AWREGION);
    bn_M_V_m_axi_U->AWUSER(m_axi_M_V_AWUSER);
    bn_M_V_m_axi_U->WVALID(m_axi_M_V_WVALID);
    bn_M_V_m_axi_U->WREADY(m_axi_M_V_WREADY);
    bn_M_V_m_axi_U->WDATA(m_axi_M_V_WDATA);
    bn_M_V_m_axi_U->WSTRB(m_axi_M_V_WSTRB);
    bn_M_V_m_axi_U->WLAST(m_axi_M_V_WLAST);
    bn_M_V_m_axi_U->WID(m_axi_M_V_WID);
    bn_M_V_m_axi_U->WUSER(m_axi_M_V_WUSER);
    bn_M_V_m_axi_U->ARVALID(m_axi_M_V_ARVALID);
    bn_M_V_m_axi_U->ARREADY(m_axi_M_V_ARREADY);
    bn_M_V_m_axi_U->ARADDR(m_axi_M_V_ARADDR);
    bn_M_V_m_axi_U->ARID(m_axi_M_V_ARID);
    bn_M_V_m_axi_U->ARLEN(m_axi_M_V_ARLEN);
    bn_M_V_m_axi_U->ARSIZE(m_axi_M_V_ARSIZE);
    bn_M_V_m_axi_U->ARBURST(m_axi_M_V_ARBURST);
    bn_M_V_m_axi_U->ARLOCK(m_axi_M_V_ARLOCK);
    bn_M_V_m_axi_U->ARCACHE(m_axi_M_V_ARCACHE);
    bn_M_V_m_axi_U->ARPROT(m_axi_M_V_ARPROT);
    bn_M_V_m_axi_U->ARQOS(m_axi_M_V_ARQOS);
    bn_M_V_m_axi_U->ARREGION(m_axi_M_V_ARREGION);
    bn_M_V_m_axi_U->ARUSER(m_axi_M_V_ARUSER);
    bn_M_V_m_axi_U->RVALID(m_axi_M_V_RVALID);
    bn_M_V_m_axi_U->RREADY(m_axi_M_V_RREADY);
    bn_M_V_m_axi_U->RDATA(m_axi_M_V_RDATA);
    bn_M_V_m_axi_U->RLAST(m_axi_M_V_RLAST);
    bn_M_V_m_axi_U->RID(m_axi_M_V_RID);
    bn_M_V_m_axi_U->RUSER(m_axi_M_V_RUSER);
    bn_M_V_m_axi_U->RRESP(m_axi_M_V_RRESP);
    bn_M_V_m_axi_U->BVALID(m_axi_M_V_BVALID);
    bn_M_V_m_axi_U->BREADY(m_axi_M_V_BREADY);
    bn_M_V_m_axi_U->BRESP(m_axi_M_V_BRESP);
    bn_M_V_m_axi_U->BID(m_axi_M_V_BID);
    bn_M_V_m_axi_U->BUSER(m_axi_M_V_BUSER);
    bn_M_V_m_axi_U->ACLK(ap_clk);
    bn_M_V_m_axi_U->ARESET(ap_rst_n_inv);
    bn_M_V_m_axi_U->ACLK_EN(ap_var_for_const0);
    bn_M_V_m_axi_U->I_ARVALID(M_V_ARVALID);
    bn_M_V_m_axi_U->I_ARREADY(M_V_ARREADY);
    bn_M_V_m_axi_U->I_ARADDR(M_V_ARADDR);
    bn_M_V_m_axi_U->I_ARID(ap_var_for_const1);
    bn_M_V_m_axi_U->I_ARLEN(ap_var_for_const2);
    bn_M_V_m_axi_U->I_ARSIZE(ap_var_for_const3);
    bn_M_V_m_axi_U->I_ARLOCK(ap_var_for_const4);
    bn_M_V_m_axi_U->I_ARCACHE(ap_var_for_const5);
    bn_M_V_m_axi_U->I_ARQOS(ap_var_for_const5);
    bn_M_V_m_axi_U->I_ARPROT(ap_var_for_const3);
    bn_M_V_m_axi_U->I_ARUSER(ap_var_for_const1);
    bn_M_V_m_axi_U->I_ARBURST(ap_var_for_const4);
    bn_M_V_m_axi_U->I_ARREGION(ap_var_for_const5);
    bn_M_V_m_axi_U->I_RVALID(M_V_RVALID);
    bn_M_V_m_axi_U->I_RREADY(M_V_RREADY);
    bn_M_V_m_axi_U->I_RDATA(M_V_RDATA);
    bn_M_V_m_axi_U->I_RID(M_V_RID);
    bn_M_V_m_axi_U->I_RUSER(M_V_RUSER);
    bn_M_V_m_axi_U->I_RRESP(M_V_RRESP);
    bn_M_V_m_axi_U->I_RLAST(M_V_RLAST);
    bn_M_V_m_axi_U->I_AWVALID(ap_var_for_const6);
    bn_M_V_m_axi_U->I_AWREADY(M_V_AWREADY);
    bn_M_V_m_axi_U->I_AWADDR(ap_var_for_const7);
    bn_M_V_m_axi_U->I_AWID(ap_var_for_const1);
    bn_M_V_m_axi_U->I_AWLEN(ap_var_for_const7);
    bn_M_V_m_axi_U->I_AWSIZE(ap_var_for_const3);
    bn_M_V_m_axi_U->I_AWLOCK(ap_var_for_const4);
    bn_M_V_m_axi_U->I_AWCACHE(ap_var_for_const5);
    bn_M_V_m_axi_U->I_AWQOS(ap_var_for_const5);
    bn_M_V_m_axi_U->I_AWPROT(ap_var_for_const3);
    bn_M_V_m_axi_U->I_AWUSER(ap_var_for_const1);
    bn_M_V_m_axi_U->I_AWBURST(ap_var_for_const4);
    bn_M_V_m_axi_U->I_AWREGION(ap_var_for_const5);
    bn_M_V_m_axi_U->I_WVALID(ap_var_for_const6);
    bn_M_V_m_axi_U->I_WREADY(M_V_WREADY);
    bn_M_V_m_axi_U->I_WDATA(ap_var_for_const8);
    bn_M_V_m_axi_U->I_WID(ap_var_for_const1);
    bn_M_V_m_axi_U->I_WUSER(ap_var_for_const1);
    bn_M_V_m_axi_U->I_WLAST(ap_var_for_const6);
    bn_M_V_m_axi_U->I_WSTRB(ap_var_for_const9);
    bn_M_V_m_axi_U->I_BVALID(M_V_BVALID);
    bn_M_V_m_axi_U->I_BREADY(ap_var_for_const6);
    bn_M_V_m_axi_U->I_BRESP(M_V_BRESP);
    bn_M_V_m_axi_U->I_BID(M_V_BID);
    bn_M_V_m_axi_U->I_BUSER(M_V_BUSER);
    bn_OUT_r_m_axi_U = new bn_OUT_r_m_axi<0,64,32,5,16,16,16,16,C_M_AXI_OUT_R_ID_WIDTH,C_M_AXI_OUT_R_ADDR_WIDTH,C_M_AXI_OUT_R_DATA_WIDTH,C_M_AXI_OUT_R_AWUSER_WIDTH,C_M_AXI_OUT_R_ARUSER_WIDTH,C_M_AXI_OUT_R_WUSER_WIDTH,C_M_AXI_OUT_R_RUSER_WIDTH,C_M_AXI_OUT_R_BUSER_WIDTH,C_M_AXI_OUT_R_USER_VALUE,C_M_AXI_OUT_R_PROT_VALUE,C_M_AXI_OUT_R_CACHE_VALUE>("bn_OUT_r_m_axi_U");
    bn_OUT_r_m_axi_U->AWVALID(m_axi_OUT_r_AWVALID);
    bn_OUT_r_m_axi_U->AWREADY(m_axi_OUT_r_AWREADY);
    bn_OUT_r_m_axi_U->AWADDR(m_axi_OUT_r_AWADDR);
    bn_OUT_r_m_axi_U->AWID(m_axi_OUT_r_AWID);
    bn_OUT_r_m_axi_U->AWLEN(m_axi_OUT_r_AWLEN);
    bn_OUT_r_m_axi_U->AWSIZE(m_axi_OUT_r_AWSIZE);
    bn_OUT_r_m_axi_U->AWBURST(m_axi_OUT_r_AWBURST);
    bn_OUT_r_m_axi_U->AWLOCK(m_axi_OUT_r_AWLOCK);
    bn_OUT_r_m_axi_U->AWCACHE(m_axi_OUT_r_AWCACHE);
    bn_OUT_r_m_axi_U->AWPROT(m_axi_OUT_r_AWPROT);
    bn_OUT_r_m_axi_U->AWQOS(m_axi_OUT_r_AWQOS);
    bn_OUT_r_m_axi_U->AWREGION(m_axi_OUT_r_AWREGION);
    bn_OUT_r_m_axi_U->AWUSER(m_axi_OUT_r_AWUSER);
    bn_OUT_r_m_axi_U->WVALID(m_axi_OUT_r_WVALID);
    bn_OUT_r_m_axi_U->WREADY(m_axi_OUT_r_WREADY);
    bn_OUT_r_m_axi_U->WDATA(m_axi_OUT_r_WDATA);
    bn_OUT_r_m_axi_U->WSTRB(m_axi_OUT_r_WSTRB);
    bn_OUT_r_m_axi_U->WLAST(m_axi_OUT_r_WLAST);
    bn_OUT_r_m_axi_U->WID(m_axi_OUT_r_WID);
    bn_OUT_r_m_axi_U->WUSER(m_axi_OUT_r_WUSER);
    bn_OUT_r_m_axi_U->ARVALID(m_axi_OUT_r_ARVALID);
    bn_OUT_r_m_axi_U->ARREADY(m_axi_OUT_r_ARREADY);
    bn_OUT_r_m_axi_U->ARADDR(m_axi_OUT_r_ARADDR);
    bn_OUT_r_m_axi_U->ARID(m_axi_OUT_r_ARID);
    bn_OUT_r_m_axi_U->ARLEN(m_axi_OUT_r_ARLEN);
    bn_OUT_r_m_axi_U->ARSIZE(m_axi_OUT_r_ARSIZE);
    bn_OUT_r_m_axi_U->ARBURST(m_axi_OUT_r_ARBURST);
    bn_OUT_r_m_axi_U->ARLOCK(m_axi_OUT_r_ARLOCK);
    bn_OUT_r_m_axi_U->ARCACHE(m_axi_OUT_r_ARCACHE);
    bn_OUT_r_m_axi_U->ARPROT(m_axi_OUT_r_ARPROT);
    bn_OUT_r_m_axi_U->ARQOS(m_axi_OUT_r_ARQOS);
    bn_OUT_r_m_axi_U->ARREGION(m_axi_OUT_r_ARREGION);
    bn_OUT_r_m_axi_U->ARUSER(m_axi_OUT_r_ARUSER);
    bn_OUT_r_m_axi_U->RVALID(m_axi_OUT_r_RVALID);
    bn_OUT_r_m_axi_U->RREADY(m_axi_OUT_r_RREADY);
    bn_OUT_r_m_axi_U->RDATA(m_axi_OUT_r_RDATA);
    bn_OUT_r_m_axi_U->RLAST(m_axi_OUT_r_RLAST);
    bn_OUT_r_m_axi_U->RID(m_axi_OUT_r_RID);
    bn_OUT_r_m_axi_U->RUSER(m_axi_OUT_r_RUSER);
    bn_OUT_r_m_axi_U->RRESP(m_axi_OUT_r_RRESP);
    bn_OUT_r_m_axi_U->BVALID(m_axi_OUT_r_BVALID);
    bn_OUT_r_m_axi_U->BREADY(m_axi_OUT_r_BREADY);
    bn_OUT_r_m_axi_U->BRESP(m_axi_OUT_r_BRESP);
    bn_OUT_r_m_axi_U->BID(m_axi_OUT_r_BID);
    bn_OUT_r_m_axi_U->BUSER(m_axi_OUT_r_BUSER);
    bn_OUT_r_m_axi_U->ACLK(ap_clk);
    bn_OUT_r_m_axi_U->ARESET(ap_rst_n_inv);
    bn_OUT_r_m_axi_U->ACLK_EN(ap_var_for_const0);
    bn_OUT_r_m_axi_U->I_ARVALID(ap_var_for_const6);
    bn_OUT_r_m_axi_U->I_ARREADY(OUT_r_ARREADY);
    bn_OUT_r_m_axi_U->I_ARADDR(ap_var_for_const7);
    bn_OUT_r_m_axi_U->I_ARID(ap_var_for_const1);
    bn_OUT_r_m_axi_U->I_ARLEN(ap_var_for_const7);
    bn_OUT_r_m_axi_U->I_ARSIZE(ap_var_for_const3);
    bn_OUT_r_m_axi_U->I_ARLOCK(ap_var_for_const4);
    bn_OUT_r_m_axi_U->I_ARCACHE(ap_var_for_const5);
    bn_OUT_r_m_axi_U->I_ARQOS(ap_var_for_const5);
    bn_OUT_r_m_axi_U->I_ARPROT(ap_var_for_const3);
    bn_OUT_r_m_axi_U->I_ARUSER(ap_var_for_const1);
    bn_OUT_r_m_axi_U->I_ARBURST(ap_var_for_const4);
    bn_OUT_r_m_axi_U->I_ARREGION(ap_var_for_const5);
    bn_OUT_r_m_axi_U->I_RVALID(OUT_r_RVALID);
    bn_OUT_r_m_axi_U->I_RREADY(ap_var_for_const6);
    bn_OUT_r_m_axi_U->I_RDATA(OUT_r_RDATA);
    bn_OUT_r_m_axi_U->I_RID(OUT_r_RID);
    bn_OUT_r_m_axi_U->I_RUSER(OUT_r_RUSER);
    bn_OUT_r_m_axi_U->I_RRESP(OUT_r_RRESP);
    bn_OUT_r_m_axi_U->I_RLAST(OUT_r_RLAST);
    bn_OUT_r_m_axi_U->I_AWVALID(OUT_r_AWVALID);
    bn_OUT_r_m_axi_U->I_AWREADY(OUT_r_AWREADY);
    bn_OUT_r_m_axi_U->I_AWADDR(OUT_r_AWADDR);
    bn_OUT_r_m_axi_U->I_AWID(ap_var_for_const1);
    bn_OUT_r_m_axi_U->I_AWLEN(ap_var_for_const2);
    bn_OUT_r_m_axi_U->I_AWSIZE(ap_var_for_const3);
    bn_OUT_r_m_axi_U->I_AWLOCK(ap_var_for_const4);
    bn_OUT_r_m_axi_U->I_AWCACHE(ap_var_for_const5);
    bn_OUT_r_m_axi_U->I_AWQOS(ap_var_for_const5);
    bn_OUT_r_m_axi_U->I_AWPROT(ap_var_for_const3);
    bn_OUT_r_m_axi_U->I_AWUSER(ap_var_for_const1);
    bn_OUT_r_m_axi_U->I_AWBURST(ap_var_for_const4);
    bn_OUT_r_m_axi_U->I_AWREGION(ap_var_for_const5);
    bn_OUT_r_m_axi_U->I_WVALID(OUT_r_WVALID);
    bn_OUT_r_m_axi_U->I_WREADY(OUT_r_WREADY);
    bn_OUT_r_m_axi_U->I_WDATA(p_Val2_s_fu_190);
    bn_OUT_r_m_axi_U->I_WID(ap_var_for_const1);
    bn_OUT_r_m_axi_U->I_WUSER(ap_var_for_const1);
    bn_OUT_r_m_axi_U->I_WLAST(ap_var_for_const6);
    bn_OUT_r_m_axi_U->I_WSTRB(ap_var_for_const10);
    bn_OUT_r_m_axi_U->I_BVALID(OUT_r_BVALID);
    bn_OUT_r_m_axi_U->I_BREADY(OUT_r_BREADY);
    bn_OUT_r_m_axi_U->I_BRESP(OUT_r_BRESP);
    bn_OUT_r_m_axi_U->I_BID(OUT_r_BID);
    bn_OUT_r_m_axi_U->I_BUSER(OUT_r_BUSER);
    grp_sqrt_fixed_16_6_s_fu_328 = new sqrt_fixed_16_6_s("grp_sqrt_fixed_16_6_s_fu_328");
    grp_sqrt_fixed_16_6_s_fu_328->ap_clk(ap_clk);
    grp_sqrt_fixed_16_6_s_fu_328->ap_rst(ap_rst_n_inv);
    grp_sqrt_fixed_16_6_s_fu_328->x_V(x_V_reg_1662);
    grp_sqrt_fixed_16_6_s_fu_328->ap_return(grp_sqrt_fixed_16_6_s_fu_328_ap_return);
    bn_sdiv_44s_14ns_bkb_U2 = new bn_sdiv_44s_14ns_bkb<1,48,44,14,44>("bn_sdiv_44s_14ns_bkb_U2");
    bn_sdiv_44s_14ns_bkb_U2->clk(ap_clk);
    bn_sdiv_44s_14ns_bkb_U2->reset(ap_rst_n_inv);
    bn_sdiv_44s_14ns_bkb_U2->start(grp_fu_1097_ap_start);
    bn_sdiv_44s_14ns_bkb_U2->done(grp_fu_1097_ap_done);
    bn_sdiv_44s_14ns_bkb_U2->din0(grp_fu_1097_p0);
    bn_sdiv_44s_14ns_bkb_U2->din1(grp_fu_1097_p1);
    bn_sdiv_44s_14ns_bkb_U2->ce(ap_var_for_const0);
    bn_sdiv_44s_14ns_bkb_U2->dout(grp_fu_1097_p2);
    bn_ama_submuladd_cud_U3 = new bn_ama_submuladd_cud<1,1,16,16,16,26,33>("bn_ama_submuladd_cud_U3");
    bn_ama_submuladd_cud_U3->din0(in_m_3_V_reg_1647);
    bn_ama_submuladd_cud_U3->din1(moving_mean_m_3_V_reg_1657);
    bn_ama_submuladd_cud_U3->din2(gamma_m_3_V_reg_1652);
    bn_ama_submuladd_cud_U3->din3(rhs_V_1_fu_1072_p3);
    bn_ama_submuladd_cud_U3->dout(grp_fu_1461_p4);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_BETA_ARADDR);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( empty_30_fu_431_p1 );

    SC_METHOD(thread_BETA_ARVALID);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_io );

    SC_METHOD(thread_BETA_RREADY);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln33_fu_461_p2 );
    sensitive << ( IN_r_RVALID );
    sensitive << ( BETA_RVALID );
    sensitive << ( GAMMA_RVALID );
    sensitive << ( M_M_RVALID );
    sensitive << ( M_V_RVALID );

    SC_METHOD(thread_BETA_blk_n_AR);
    sensitive << ( m_axi_BETA_ARREADY );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_BETA_blk_n_R);
    sensitive << ( m_axi_BETA_RVALID );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln33_fu_461_p2 );

    SC_METHOD(thread_GAMMA_ARADDR);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( empty_29_fu_421_p1 );

    SC_METHOD(thread_GAMMA_ARVALID);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_io );

    SC_METHOD(thread_GAMMA_RREADY);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln33_fu_461_p2 );
    sensitive << ( IN_r_RVALID );
    sensitive << ( BETA_RVALID );
    sensitive << ( GAMMA_RVALID );
    sensitive << ( M_M_RVALID );
    sensitive << ( M_V_RVALID );

    SC_METHOD(thread_GAMMA_blk_n_AR);
    sensitive << ( m_axi_GAMMA_ARREADY );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_GAMMA_blk_n_R);
    sensitive << ( m_axi_GAMMA_RVALID );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln33_fu_461_p2 );

    SC_METHOD(thread_IN_r_ARADDR);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( empty_31_fu_441_p1 );

    SC_METHOD(thread_IN_r_ARVALID);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_io );

    SC_METHOD(thread_IN_r_RREADY);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln33_fu_461_p2 );
    sensitive << ( IN_r_RVALID );
    sensitive << ( BETA_RVALID );
    sensitive << ( GAMMA_RVALID );
    sensitive << ( M_M_RVALID );
    sensitive << ( M_V_RVALID );

    SC_METHOD(thread_IN_r_blk_n_AR);
    sensitive << ( m_axi_IN_r_ARREADY );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_IN_r_blk_n_R);
    sensitive << ( m_axi_IN_r_RVALID );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln33_fu_461_p2 );

    SC_METHOD(thread_Lo_assign_fu_489_p3);
    sensitive << ( trunc_ln41_fu_485_p1 );

    SC_METHOD(thread_M_M_ARADDR);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( empty_28_fu_411_p1 );

    SC_METHOD(thread_M_M_ARVALID);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_io );

    SC_METHOD(thread_M_M_RREADY);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln33_fu_461_p2 );
    sensitive << ( IN_r_RVALID );
    sensitive << ( BETA_RVALID );
    sensitive << ( GAMMA_RVALID );
    sensitive << ( M_M_RVALID );
    sensitive << ( M_V_RVALID );

    SC_METHOD(thread_M_M_blk_n_AR);
    sensitive << ( m_axi_M_M_ARREADY );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_M_M_blk_n_R);
    sensitive << ( m_axi_M_M_RVALID );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln33_fu_461_p2 );

    SC_METHOD(thread_M_V_ARADDR);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( empty_27_fu_401_p1 );

    SC_METHOD(thread_M_V_ARVALID);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_io );

    SC_METHOD(thread_M_V_RREADY);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln33_fu_461_p2 );
    sensitive << ( IN_r_RVALID );
    sensitive << ( BETA_RVALID );
    sensitive << ( GAMMA_RVALID );
    sensitive << ( M_M_RVALID );
    sensitive << ( M_V_RVALID );

    SC_METHOD(thread_M_V_blk_n_AR);
    sensitive << ( m_axi_M_V_ARREADY );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_M_V_blk_n_R);
    sensitive << ( m_axi_M_V_RVALID );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln33_fu_461_p2 );

    SC_METHOD(thread_OUT_r_AWADDR);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( OUT_r_AWREADY );
    sensitive << ( empty_fu_451_p1 );

    SC_METHOD(thread_OUT_r_AWVALID);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( OUT_r_AWREADY );

    SC_METHOD(thread_OUT_r_BREADY);
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( OUT_r_BVALID );

    SC_METHOD(thread_OUT_r_WVALID);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln40_fu_473_p2 );
    sensitive << ( ap_block_state10_io );

    SC_METHOD(thread_OUT_r_blk_n_AW);
    sensitive << ( m_axi_OUT_r_AWREADY );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_OUT_r_blk_n_B);
    sensitive << ( m_axi_OUT_r_BVALID );
    sensitive << ( ap_CS_fsm_state74 );

    SC_METHOD(thread_OUT_r_blk_n_W);
    sensitive << ( m_axi_OUT_r_WREADY );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln40_fu_473_p2 );

    SC_METHOD(thread_Range1_all_ones_fu_1201_p2);
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( tmp_7_fu_1191_p4 );

    SC_METHOD(thread_Range1_all_zeros_fu_1207_p2);
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( tmp_7_fu_1191_p4 );

    SC_METHOD(thread_Range2_all_ones_fu_1185_p2);
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( tmp_fu_1175_p4 );

    SC_METHOD(thread_and_ln414_1_fu_1438_p2);
    sensitive << ( p_Val2_s_fu_190 );
    sensitive << ( xor_ln414_2_fu_1432_p2 );

    SC_METHOD(thread_and_ln414_2_fu_1444_p2);
    sensitive << ( and_ln414_fu_1426_p2 );
    sensitive << ( select_ln414_3_fu_1406_p3 );

    SC_METHOD(thread_and_ln414_fu_1426_p2);
    sensitive << ( shl_ln414_1_fu_1414_p2 );
    sensitive << ( lshr_ln414_fu_1420_p2 );

    SC_METHOD(thread_and_ln779_fu_1227_p2);
    sensitive << ( Range2_all_ones_fu_1185_p2 );
    sensitive << ( xor_ln779_fu_1221_p2 );

    SC_METHOD(thread_and_ln781_fu_1252_p2);
    sensitive << ( carry_1_reg_1704 );
    sensitive << ( Range1_all_ones_reg_1715 );

    SC_METHOD(thread_and_ln786_fu_1241_p2);
    sensitive << ( p_Result_24_fu_1167_p3 );
    sensitive << ( deleted_ones_fu_1233_p3 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state68);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state69);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state70);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state74);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state10_io);
    sensitive << ( icmp_ln40_fu_473_p2 );
    sensitive << ( OUT_r_WREADY );

    SC_METHOD(thread_ap_block_state2_io);
    sensitive << ( IN_r_ARREADY );
    sensitive << ( BETA_ARREADY );
    sensitive << ( GAMMA_ARREADY );
    sensitive << ( M_M_ARREADY );
    sensitive << ( M_V_ARREADY );

    SC_METHOD(thread_ap_block_state9);
    sensitive << ( icmp_ln33_fu_461_p2 );
    sensitive << ( IN_r_RVALID );
    sensitive << ( BETA_RVALID );
    sensitive << ( GAMMA_RVALID );
    sensitive << ( M_M_RVALID );
    sensitive << ( M_V_RVALID );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( OUT_r_BVALID );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( OUT_r_BVALID );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_carry_1_fu_1161_p2);
    sensitive << ( p_Result_23_fu_1121_p3 );
    sensitive << ( xor_ln416_fu_1155_p2 );

    SC_METHOD(thread_deleted_ones_fu_1233_p3);
    sensitive << ( carry_1_fu_1161_p2 );
    sensitive << ( Range1_all_ones_fu_1201_p2 );
    sensitive << ( and_ln779_fu_1227_p2 );

    SC_METHOD(thread_deleted_zeros_fu_1247_p3);
    sensitive << ( carry_1_reg_1704 );
    sensitive << ( Range1_all_ones_reg_1715 );
    sensitive << ( Range1_all_zeros_reg_1721 );

    SC_METHOD(thread_empty_27_fu_401_p1);
    sensitive << ( moving_variance_V9_reg_1482 );

    SC_METHOD(thread_empty_28_fu_411_p1);
    sensitive << ( moving_mean_V7_reg_1487 );

    SC_METHOD(thread_empty_29_fu_421_p1);
    sensitive << ( gamma_V5_reg_1492 );

    SC_METHOD(thread_empty_30_fu_431_p1);
    sensitive << ( beta_V3_reg_1497 );

    SC_METHOD(thread_empty_31_fu_441_p1);
    sensitive << ( in_V1_reg_1502 );

    SC_METHOD(thread_empty_fu_451_p1);
    sensitive << ( out_V1_reg_1477 );

    SC_METHOD(thread_gamma_m_3_V_fu_862_p1);
    sensitive << ( p_Result_17_fu_856_p2 );

    SC_METHOD(thread_grp_fu_1097_ap_start);
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_grp_fu_1097_p0);
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( tmp_s_fu_1083_p3 );

    SC_METHOD(thread_grp_fu_1097_p1);
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( grp_fu_1097_p10 );

    SC_METHOD(thread_grp_fu_1097_p10);
    sensitive << ( x_sqrt_V_reg_1677 );

    SC_METHOD(thread_grp_fu_333_p0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( Lo_assign_fu_489_p3 );
    sensitive << ( Lo_assign_reg_1589 );
    sensitive << ( ap_CS_fsm_state70 );

    SC_METHOD(thread_grp_fu_333_p1);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( or_ln41_fu_498_p2 );
    sensitive << ( or_ln41_reg_1599 );
    sensitive << ( ap_CS_fsm_state70 );

    SC_METHOD(thread_grp_fu_333_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln40_fu_473_p2 );
    sensitive << ( ap_block_state10_io );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( grp_fu_333_p0 );
    sensitive << ( grp_fu_333_p1 );

    SC_METHOD(thread_i_fu_467_p2);
    sensitive << ( i_0_reg_306 );

    SC_METHOD(thread_icmp_ln33_fu_461_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln33_fu_461_p2 );
    sensitive << ( IN_r_RVALID );
    sensitive << ( BETA_RVALID );
    sensitive << ( GAMMA_RVALID );
    sensitive << ( M_M_RVALID );
    sensitive << ( M_V_RVALID );
    sensitive << ( i_0_reg_306 );

    SC_METHOD(thread_icmp_ln40_fu_473_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_block_state10_io );
    sensitive << ( k_0_reg_317 );

    SC_METHOD(thread_icmp_ln647_1_fu_505_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln40_fu_473_p2 );
    sensitive << ( ap_block_state10_io );
    sensitive << ( Lo_assign_fu_489_p3 );
    sensitive << ( or_ln41_fu_498_p2 );

    SC_METHOD(thread_icmp_ln647_2_fu_511_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln40_fu_473_p2 );
    sensitive << ( ap_block_state10_io );
    sensitive << ( Lo_assign_fu_489_p3 );
    sensitive << ( or_ln41_fu_498_p2 );

    SC_METHOD(thread_icmp_ln647_3_fu_517_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln40_fu_473_p2 );
    sensitive << ( ap_block_state10_io );
    sensitive << ( Lo_assign_fu_489_p3 );
    sensitive << ( or_ln41_fu_498_p2 );

    SC_METHOD(thread_icmp_ln647_4_fu_523_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln40_fu_473_p2 );
    sensitive << ( ap_block_state10_io );
    sensitive << ( Lo_assign_fu_489_p3 );
    sensitive << ( or_ln41_fu_498_p2 );

    SC_METHOD(thread_in_m_3_V_fu_688_p1);
    sensitive << ( p_Result_s_fu_682_p2 );

    SC_METHOD(thread_k_fu_479_p2);
    sensitive << ( k_0_reg_317 );

    SC_METHOD(thread_lhs_V_fu_973_p1);
    sensitive << ( moving_variance_m_3_fu_969_p1 );

    SC_METHOD(thread_lshr_ln414_fu_1420_p2);
    sensitive << ( zext_ln414_4_fu_1386_p1 );

    SC_METHOD(thread_lshr_ln647_1_fu_676_p2);
    sensitive << ( zext_ln647_3_fu_666_p1 );

    SC_METHOD(thread_lshr_ln647_2_fu_759_p2);
    sensitive << ( select_ln647_4_fu_732_p3 );
    sensitive << ( zext_ln647_6_fu_751_p1 );

    SC_METHOD(thread_lshr_ln647_3_fu_765_p2);
    sensitive << ( zext_ln647_7_fu_755_p1 );

    SC_METHOD(thread_lshr_ln647_4_fu_844_p2);
    sensitive << ( select_ln647_7_fu_817_p3 );
    sensitive << ( zext_ln647_10_fu_836_p1 );

    SC_METHOD(thread_lshr_ln647_5_fu_850_p2);
    sensitive << ( zext_ln647_11_fu_840_p1 );

    SC_METHOD(thread_lshr_ln647_6_fu_933_p2);
    sensitive << ( select_ln647_10_fu_906_p3 );
    sensitive << ( zext_ln647_14_fu_925_p1 );

    SC_METHOD(thread_lshr_ln647_7_fu_939_p2);
    sensitive << ( zext_ln647_15_fu_929_p1 );

    SC_METHOD(thread_lshr_ln647_8_fu_597_p2);
    sensitive << ( select_ln647_13_fu_572_p3 );
    sensitive << ( zext_ln647_18_fu_593_p1 );

    SC_METHOD(thread_lshr_ln647_9_fu_958_p2);
    sensitive << ( zext_ln647_19_fu_955_p1 );

    SC_METHOD(thread_lshr_ln647_fu_670_p2);
    sensitive << ( select_ln647_1_fu_643_p3 );
    sensitive << ( zext_ln647_2_fu_662_p1 );

    SC_METHOD(thread_moving_mean_m_3_V_fu_951_p1);
    sensitive << ( p_Result_18_fu_945_p2 );

    SC_METHOD(thread_moving_variance_m_3_fu_969_p1);
    sensitive << ( p_Result_19_fu_964_p2 );

    SC_METHOD(thread_or_ln340_1_fu_1294_p2);
    sensitive << ( underflow_1_fu_1289_p2 );
    sensitive << ( overflow_fu_1272_p2 );

    SC_METHOD(thread_or_ln340_2_fu_1305_p2);
    sensitive << ( and_ln781_fu_1252_p2 );
    sensitive << ( or_ln340_3_fu_1300_p2 );

    SC_METHOD(thread_or_ln340_3_fu_1300_p2);
    sensitive << ( and_ln786_reg_1726 );
    sensitive << ( xor_ln785_1_fu_1267_p2 );

    SC_METHOD(thread_or_ln340_fu_1029_p2);
    sensitive << ( p_Result_21_fu_997_p3 );
    sensitive << ( xor_ln340_1_fu_1023_p2 );

    SC_METHOD(thread_or_ln41_fu_498_p2);
    sensitive << ( Lo_assign_fu_489_p3 );

    SC_METHOD(thread_or_ln785_fu_1262_p2);
    sensitive << ( p_Result_24_reg_1710 );
    sensitive << ( xor_ln785_fu_1256_p2 );

    SC_METHOD(thread_or_ln786_fu_1278_p2);
    sensitive << ( and_ln786_reg_1726 );
    sensitive << ( and_ln781_fu_1252_p2 );

    SC_METHOD(thread_overflow_fu_1272_p2);
    sensitive << ( or_ln785_fu_1262_p2 );
    sensitive << ( xor_ln785_1_fu_1267_p2 );

    SC_METHOD(thread_p_Result_16_fu_771_p2);
    sensitive << ( lshr_ln647_2_fu_759_p2 );
    sensitive << ( lshr_ln647_3_fu_765_p2 );

    SC_METHOD(thread_p_Result_17_fu_856_p2);
    sensitive << ( lshr_ln647_4_fu_844_p2 );
    sensitive << ( lshr_ln647_5_fu_850_p2 );

    SC_METHOD(thread_p_Result_18_fu_945_p2);
    sensitive << ( lshr_ln647_6_fu_933_p2 );
    sensitive << ( lshr_ln647_7_fu_939_p2 );

    SC_METHOD(thread_p_Result_19_fu_964_p2);
    sensitive << ( lshr_ln647_8_reg_1642 );
    sensitive << ( lshr_ln647_9_fu_958_p2 );

    SC_METHOD(thread_p_Result_20_fu_983_p3);
    sensitive << ( ret_V_10_fu_977_p2 );

    SC_METHOD(thread_p_Result_21_fu_997_p3);
    sensitive << ( tmp_num_V_fu_991_p2 );

    SC_METHOD(thread_p_Result_23_fu_1121_p3);
    sensitive << ( grp_fu_1097_p2 );

    SC_METHOD(thread_p_Result_24_fu_1167_p3);
    sensitive << ( tmp_V_7_fu_1141_p2 );

    SC_METHOD(thread_p_Result_25_fu_1450_p2);
    sensitive << ( and_ln414_1_fu_1438_p2 );
    sensitive << ( and_ln414_2_fu_1444_p2 );

    SC_METHOD(thread_p_Result_s_fu_682_p2);
    sensitive << ( lshr_ln647_fu_670_p2 );
    sensitive << ( lshr_ln647_1_fu_676_p2 );

    SC_METHOD(thread_p_Val2_21_fu_1325_p3);
    sensitive << ( or_ln340_2_fu_1305_p2 );
    sensitive << ( select_ln340_fu_1311_p3 );
    sensitive << ( select_ln388_fu_1318_p3 );

    SC_METHOD(thread_ret_V_10_fu_977_p2);
    sensitive << ( lhs_V_fu_973_p1 );

    SC_METHOD(thread_rhs_V_1_fu_1072_p3);
    sensitive << ( trunc_ln728_reg_1667 );

    SC_METHOD(thread_select_ln340_1_fu_1035_p3);
    sensitive << ( tmp_num_V_fu_991_p2 );
    sensitive << ( xor_ln340_fu_1017_p2 );

    SC_METHOD(thread_select_ln340_fu_1311_p3);
    sensitive << ( tmp_V_7_reg_1698 );
    sensitive << ( or_ln340_1_fu_1294_p2 );

    SC_METHOD(thread_select_ln388_1_fu_1043_p3);
    sensitive << ( tmp_num_V_fu_991_p2 );
    sensitive << ( underflow_fu_1011_p2 );

    SC_METHOD(thread_select_ln388_fu_1318_p3);
    sensitive << ( tmp_V_7_reg_1698 );
    sensitive << ( underflow_1_fu_1289_p2 );

    SC_METHOD(thread_select_ln414_1_fu_1356_p3);
    sensitive << ( grp_fu_333_p2 );
    sensitive << ( zext_ln414_fu_1336_p1 );
    sensitive << ( zext_ln414_1_fu_1339_p1 );

    SC_METHOD(thread_select_ln414_2_fu_1364_p3);
    sensitive << ( grp_fu_333_p2 );
    sensitive << ( zext_ln414_fu_1336_p1 );
    sensitive << ( xor_ln414_fu_1342_p2 );

    SC_METHOD(thread_select_ln414_3_fu_1406_p3);
    sensitive << ( grp_fu_333_p2 );
    sensitive << ( shl_ln414_fu_1390_p2 );
    sensitive << ( tmp_44_fu_1396_p4 );

    SC_METHOD(thread_select_ln414_fu_1348_p3);
    sensitive << ( grp_fu_333_p2 );
    sensitive << ( zext_ln414_fu_1336_p1 );
    sensitive << ( zext_ln414_1_fu_1339_p1 );

    SC_METHOD(thread_select_ln647_10_fu_906_p3);
    sensitive << ( moving_mean_pack_V_reg_1569 );
    sensitive << ( icmp_ln647_3_reg_1630 );
    sensitive << ( tmp_34_fu_872_p4 );

    SC_METHOD(thread_select_ln647_11_fu_912_p3);
    sensitive << ( icmp_ln647_3_reg_1630 );
    sensitive << ( zext_ln647_12_fu_866_p1 );
    sensitive << ( xor_ln647_3_fu_887_p2 );

    SC_METHOD(thread_select_ln647_12_fu_564_p3);
    sensitive << ( icmp_ln647_4_fu_523_p2 );
    sensitive << ( sub_ln647_12_fu_546_p2 );
    sensitive << ( sub_ln647_13_fu_558_p2 );

    SC_METHOD(thread_select_ln647_13_fu_572_p3);
    sensitive << ( moving_variance_pack_reg_1575 );
    sensitive << ( icmp_ln647_4_fu_523_p2 );
    sensitive << ( tmp_35_fu_537_p4 );

    SC_METHOD(thread_select_ln647_14_fu_579_p3);
    sensitive << ( zext_ln647_16_fu_529_p1 );
    sensitive << ( icmp_ln647_4_fu_523_p2 );
    sensitive << ( xor_ln647_4_fu_552_p2 );

    SC_METHOD(thread_select_ln647_1_fu_643_p3);
    sensitive << ( in_pack_V_reg_1551 );
    sensitive << ( icmp_ln647_reg_1609 );
    sensitive << ( tmp_31_fu_609_p4 );

    SC_METHOD(thread_select_ln647_2_fu_649_p3);
    sensitive << ( icmp_ln647_reg_1609 );
    sensitive << ( zext_ln647_fu_603_p1 );
    sensitive << ( xor_ln647_fu_624_p2 );

    SC_METHOD(thread_select_ln647_3_fu_725_p3);
    sensitive << ( icmp_ln647_1_reg_1616 );
    sensitive << ( sub_ln647_3_fu_707_p2 );
    sensitive << ( sub_ln647_4_fu_719_p2 );

    SC_METHOD(thread_select_ln647_4_fu_732_p3);
    sensitive << ( beta_pack_V_reg_1557 );
    sensitive << ( icmp_ln647_1_reg_1616 );
    sensitive << ( tmp_32_fu_698_p4 );

    SC_METHOD(thread_select_ln647_5_fu_738_p3);
    sensitive << ( icmp_ln647_1_reg_1616 );
    sensitive << ( zext_ln647_4_fu_692_p1 );
    sensitive << ( xor_ln647_1_fu_713_p2 );

    SC_METHOD(thread_select_ln647_6_fu_810_p3);
    sensitive << ( icmp_ln647_2_reg_1623 );
    sensitive << ( sub_ln647_6_fu_792_p2 );
    sensitive << ( sub_ln647_7_fu_804_p2 );

    SC_METHOD(thread_select_ln647_7_fu_817_p3);
    sensitive << ( gamma_pack_V_reg_1563 );
    sensitive << ( icmp_ln647_2_reg_1623 );
    sensitive << ( tmp_33_fu_783_p4 );

    SC_METHOD(thread_select_ln647_8_fu_823_p3);
    sensitive << ( icmp_ln647_2_reg_1623 );
    sensitive << ( zext_ln647_8_fu_777_p1 );
    sensitive << ( xor_ln647_2_fu_798_p2 );

    SC_METHOD(thread_select_ln647_9_fu_899_p3);
    sensitive << ( icmp_ln647_3_reg_1630 );
    sensitive << ( sub_ln647_9_fu_881_p2 );
    sensitive << ( sub_ln647_10_fu_893_p2 );

    SC_METHOD(thread_select_ln647_fu_636_p3);
    sensitive << ( icmp_ln647_reg_1609 );
    sensitive << ( sub_ln647_fu_618_p2 );
    sensitive << ( sub_ln647_1_fu_630_p2 );

    SC_METHOD(thread_shl_ln414_1_fu_1414_p2);
    sensitive << ( zext_ln414_3_fu_1382_p1 );

    SC_METHOD(thread_shl_ln414_fu_1390_p2);
    sensitive << ( tmp_V_8_fu_1333_p1 );
    sensitive << ( zext_ln414_2_fu_1378_p1 );

    SC_METHOD(thread_sub_ln647_10_fu_893_p2);
    sensitive << ( zext_ln647_12_fu_866_p1 );
    sensitive << ( zext_ln647_13_fu_869_p1 );

    SC_METHOD(thread_sub_ln647_11_fu_919_p2);
    sensitive << ( select_ln647_9_fu_899_p3 );

    SC_METHOD(thread_sub_ln647_12_fu_546_p2);
    sensitive << ( zext_ln647_16_fu_529_p1 );
    sensitive << ( zext_ln647_17_fu_533_p1 );

    SC_METHOD(thread_sub_ln647_13_fu_558_p2);
    sensitive << ( zext_ln647_16_fu_529_p1 );
    sensitive << ( zext_ln647_17_fu_533_p1 );

    SC_METHOD(thread_sub_ln647_14_fu_587_p2);
    sensitive << ( select_ln647_12_fu_564_p3 );

    SC_METHOD(thread_sub_ln647_1_fu_630_p2);
    sensitive << ( zext_ln647_fu_603_p1 );
    sensitive << ( zext_ln647_1_fu_606_p1 );

    SC_METHOD(thread_sub_ln647_2_fu_656_p2);
    sensitive << ( select_ln647_fu_636_p3 );

    SC_METHOD(thread_sub_ln647_3_fu_707_p2);
    sensitive << ( zext_ln647_4_fu_692_p1 );
    sensitive << ( zext_ln647_5_fu_695_p1 );

    SC_METHOD(thread_sub_ln647_4_fu_719_p2);
    sensitive << ( zext_ln647_4_fu_692_p1 );
    sensitive << ( zext_ln647_5_fu_695_p1 );

    SC_METHOD(thread_sub_ln647_5_fu_745_p2);
    sensitive << ( select_ln647_3_fu_725_p3 );

    SC_METHOD(thread_sub_ln647_6_fu_792_p2);
    sensitive << ( zext_ln647_8_fu_777_p1 );
    sensitive << ( zext_ln647_9_fu_780_p1 );

    SC_METHOD(thread_sub_ln647_7_fu_804_p2);
    sensitive << ( zext_ln647_8_fu_777_p1 );
    sensitive << ( zext_ln647_9_fu_780_p1 );

    SC_METHOD(thread_sub_ln647_8_fu_830_p2);
    sensitive << ( select_ln647_6_fu_810_p3 );

    SC_METHOD(thread_sub_ln647_9_fu_881_p2);
    sensitive << ( zext_ln647_12_fu_866_p1 );
    sensitive << ( zext_ln647_13_fu_869_p1 );

    SC_METHOD(thread_sub_ln647_fu_618_p2);
    sensitive << ( zext_ln647_fu_603_p1 );
    sensitive << ( zext_ln647_1_fu_606_p1 );

    SC_METHOD(thread_tmp_31_fu_609_p4);
    sensitive << ( in_pack_V_reg_1551 );

    SC_METHOD(thread_tmp_32_fu_698_p4);
    sensitive << ( beta_pack_V_reg_1557 );

    SC_METHOD(thread_tmp_33_fu_783_p4);
    sensitive << ( gamma_pack_V_reg_1563 );

    SC_METHOD(thread_tmp_34_fu_872_p4);
    sensitive << ( moving_mean_pack_V_reg_1569 );

    SC_METHOD(thread_tmp_35_fu_537_p4);
    sensitive << ( moving_variance_pack_reg_1575 );

    SC_METHOD(thread_tmp_40_fu_1129_p3);
    sensitive << ( grp_fu_1097_p2 );

    SC_METHOD(thread_tmp_41_fu_1147_p3);
    sensitive << ( tmp_V_7_fu_1141_p2 );

    SC_METHOD(thread_tmp_43_fu_1213_p3);
    sensitive << ( grp_fu_1097_p2 );

    SC_METHOD(thread_tmp_44_fu_1396_p4);
    sensitive << ( shl_ln414_fu_1390_p2 );

    SC_METHOD(thread_tmp_7_fu_1191_p4);
    sensitive << ( grp_fu_1097_p2 );

    SC_METHOD(thread_tmp_V_7_fu_1141_p2);
    sensitive << ( tmp_V_fu_1111_p4 );
    sensitive << ( zext_ln415_fu_1137_p1 );

    SC_METHOD(thread_tmp_V_8_fu_1333_p1);
    sensitive << ( p_Val2_21_reg_1732 );

    SC_METHOD(thread_tmp_V_fu_1111_p4);
    sensitive << ( grp_fu_1097_p2 );

    SC_METHOD(thread_tmp_fu_1175_p4);
    sensitive << ( grp_fu_1097_p2 );

    SC_METHOD(thread_tmp_num_V_fu_991_p2);
    sensitive << ( moving_variance_m_3_fu_969_p1 );

    SC_METHOD(thread_tmp_s_fu_1083_p3);
    sensitive << ( ret_V_11_reg_1672 );

    SC_METHOD(thread_trunc_ln41_fu_485_p1);
    sensitive << ( k_0_reg_317 );

    SC_METHOD(thread_trunc_ln728_fu_1059_p1);
    sensitive << ( p_Result_16_fu_771_p2 );

    SC_METHOD(thread_underflow_1_fu_1289_p2);
    sensitive << ( p_Result_22_reg_1692 );
    sensitive << ( xor_ln786_1_fu_1283_p2 );

    SC_METHOD(thread_underflow_fu_1011_p2);
    sensitive << ( p_Result_20_fu_983_p3 );
    sensitive << ( xor_ln786_fu_1005_p2 );

    SC_METHOD(thread_x_V_fu_1051_p3);
    sensitive << ( or_ln340_fu_1029_p2 );
    sensitive << ( select_ln340_1_fu_1035_p3 );
    sensitive << ( select_ln388_1_fu_1043_p3 );

    SC_METHOD(thread_xor_ln340_1_fu_1023_p2);
    sensitive << ( p_Result_20_fu_983_p3 );

    SC_METHOD(thread_xor_ln340_fu_1017_p2);
    sensitive << ( p_Result_21_fu_997_p3 );
    sensitive << ( p_Result_20_fu_983_p3 );

    SC_METHOD(thread_xor_ln414_1_fu_1372_p2);
    sensitive << ( select_ln414_fu_1348_p3 );

    SC_METHOD(thread_xor_ln414_2_fu_1432_p2);
    sensitive << ( and_ln414_fu_1426_p2 );

    SC_METHOD(thread_xor_ln414_fu_1342_p2);
    sensitive << ( zext_ln414_fu_1336_p1 );

    SC_METHOD(thread_xor_ln416_fu_1155_p2);
    sensitive << ( tmp_41_fu_1147_p3 );

    SC_METHOD(thread_xor_ln647_1_fu_713_p2);
    sensitive << ( zext_ln647_4_fu_692_p1 );

    SC_METHOD(thread_xor_ln647_2_fu_798_p2);
    sensitive << ( zext_ln647_8_fu_777_p1 );

    SC_METHOD(thread_xor_ln647_3_fu_887_p2);
    sensitive << ( zext_ln647_12_fu_866_p1 );

    SC_METHOD(thread_xor_ln647_4_fu_552_p2);
    sensitive << ( zext_ln647_16_fu_529_p1 );

    SC_METHOD(thread_xor_ln647_fu_624_p2);
    sensitive << ( zext_ln647_fu_603_p1 );

    SC_METHOD(thread_xor_ln779_fu_1221_p2);
    sensitive << ( tmp_43_fu_1213_p3 );

    SC_METHOD(thread_xor_ln785_1_fu_1267_p2);
    sensitive << ( p_Result_22_reg_1692 );

    SC_METHOD(thread_xor_ln785_fu_1256_p2);
    sensitive << ( deleted_zeros_fu_1247_p3 );

    SC_METHOD(thread_xor_ln786_1_fu_1283_p2);
    sensitive << ( or_ln786_fu_1278_p2 );

    SC_METHOD(thread_xor_ln786_fu_1005_p2);
    sensitive << ( p_Result_21_fu_997_p3 );

    SC_METHOD(thread_zext_ln414_1_fu_1339_p1);
    sensitive << ( or_ln41_reg_1599 );

    SC_METHOD(thread_zext_ln414_2_fu_1378_p1);
    sensitive << ( select_ln414_2_fu_1364_p3 );

    SC_METHOD(thread_zext_ln414_3_fu_1382_p1);
    sensitive << ( select_ln414_1_fu_1356_p3 );

    SC_METHOD(thread_zext_ln414_4_fu_1386_p1);
    sensitive << ( xor_ln414_1_fu_1372_p2 );

    SC_METHOD(thread_zext_ln414_fu_1336_p1);
    sensitive << ( Lo_assign_reg_1589 );

    SC_METHOD(thread_zext_ln415_fu_1137_p1);
    sensitive << ( tmp_40_fu_1129_p3 );

    SC_METHOD(thread_zext_ln647_10_fu_836_p1);
    sensitive << ( select_ln647_8_fu_823_p3 );

    SC_METHOD(thread_zext_ln647_11_fu_840_p1);
    sensitive << ( sub_ln647_8_fu_830_p2 );

    SC_METHOD(thread_zext_ln647_12_fu_866_p1);
    sensitive << ( Lo_assign_reg_1589 );

    SC_METHOD(thread_zext_ln647_13_fu_869_p1);
    sensitive << ( or_ln41_reg_1599 );

    SC_METHOD(thread_zext_ln647_14_fu_925_p1);
    sensitive << ( select_ln647_11_fu_912_p3 );

    SC_METHOD(thread_zext_ln647_15_fu_929_p1);
    sensitive << ( sub_ln647_11_fu_919_p2 );

    SC_METHOD(thread_zext_ln647_16_fu_529_p1);
    sensitive << ( Lo_assign_fu_489_p3 );

    SC_METHOD(thread_zext_ln647_17_fu_533_p1);
    sensitive << ( or_ln41_fu_498_p2 );

    SC_METHOD(thread_zext_ln647_18_fu_593_p1);
    sensitive << ( select_ln647_14_fu_579_p3 );

    SC_METHOD(thread_zext_ln647_19_fu_955_p1);
    sensitive << ( sub_ln647_14_reg_1637 );

    SC_METHOD(thread_zext_ln647_1_fu_606_p1);
    sensitive << ( or_ln41_reg_1599 );

    SC_METHOD(thread_zext_ln647_2_fu_662_p1);
    sensitive << ( select_ln647_2_fu_649_p3 );

    SC_METHOD(thread_zext_ln647_3_fu_666_p1);
    sensitive << ( sub_ln647_2_fu_656_p2 );

    SC_METHOD(thread_zext_ln647_4_fu_692_p1);
    sensitive << ( Lo_assign_reg_1589 );

    SC_METHOD(thread_zext_ln647_5_fu_695_p1);
    sensitive << ( or_ln41_reg_1599 );

    SC_METHOD(thread_zext_ln647_6_fu_751_p1);
    sensitive << ( select_ln647_5_fu_738_p3 );

    SC_METHOD(thread_zext_ln647_7_fu_755_p1);
    sensitive << ( sub_ln647_5_fu_745_p2 );

    SC_METHOD(thread_zext_ln647_8_fu_777_p1);
    sensitive << ( Lo_assign_reg_1589 );

    SC_METHOD(thread_zext_ln647_9_fu_780_p1);
    sensitive << ( or_ln41_reg_1599 );

    SC_METHOD(thread_zext_ln647_fu_603_p1);
    sensitive << ( Lo_assign_reg_1589 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln33_fu_461_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln40_fu_473_p2 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( IN_r_RVALID );
    sensitive << ( BETA_RVALID );
    sensitive << ( GAMMA_RVALID );
    sensitive << ( M_M_RVALID );
    sensitive << ( M_V_RVALID );
    sensitive << ( OUT_r_AWREADY );
    sensitive << ( OUT_r_BVALID );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state10_io );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const7);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const10);

    SC_THREAD(thread_ap_var_for_const8);

    SC_THREAD(thread_ap_var_for_const9);

    ap_CS_fsm = "00000000000000000000000000000000000000000000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "bn_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, m_axi_IN_r_AWVALID, "(port)m_axi_IN_r_AWVALID");
    sc_trace(mVcdFile, m_axi_IN_r_AWREADY, "(port)m_axi_IN_r_AWREADY");
    sc_trace(mVcdFile, m_axi_IN_r_AWADDR, "(port)m_axi_IN_r_AWADDR");
    sc_trace(mVcdFile, m_axi_IN_r_AWID, "(port)m_axi_IN_r_AWID");
    sc_trace(mVcdFile, m_axi_IN_r_AWLEN, "(port)m_axi_IN_r_AWLEN");
    sc_trace(mVcdFile, m_axi_IN_r_AWSIZE, "(port)m_axi_IN_r_AWSIZE");
    sc_trace(mVcdFile, m_axi_IN_r_AWBURST, "(port)m_axi_IN_r_AWBURST");
    sc_trace(mVcdFile, m_axi_IN_r_AWLOCK, "(port)m_axi_IN_r_AWLOCK");
    sc_trace(mVcdFile, m_axi_IN_r_AWCACHE, "(port)m_axi_IN_r_AWCACHE");
    sc_trace(mVcdFile, m_axi_IN_r_AWPROT, "(port)m_axi_IN_r_AWPROT");
    sc_trace(mVcdFile, m_axi_IN_r_AWQOS, "(port)m_axi_IN_r_AWQOS");
    sc_trace(mVcdFile, m_axi_IN_r_AWREGION, "(port)m_axi_IN_r_AWREGION");
    sc_trace(mVcdFile, m_axi_IN_r_AWUSER, "(port)m_axi_IN_r_AWUSER");
    sc_trace(mVcdFile, m_axi_IN_r_WVALID, "(port)m_axi_IN_r_WVALID");
    sc_trace(mVcdFile, m_axi_IN_r_WREADY, "(port)m_axi_IN_r_WREADY");
    sc_trace(mVcdFile, m_axi_IN_r_WDATA, "(port)m_axi_IN_r_WDATA");
    sc_trace(mVcdFile, m_axi_IN_r_WSTRB, "(port)m_axi_IN_r_WSTRB");
    sc_trace(mVcdFile, m_axi_IN_r_WLAST, "(port)m_axi_IN_r_WLAST");
    sc_trace(mVcdFile, m_axi_IN_r_WID, "(port)m_axi_IN_r_WID");
    sc_trace(mVcdFile, m_axi_IN_r_WUSER, "(port)m_axi_IN_r_WUSER");
    sc_trace(mVcdFile, m_axi_IN_r_ARVALID, "(port)m_axi_IN_r_ARVALID");
    sc_trace(mVcdFile, m_axi_IN_r_ARREADY, "(port)m_axi_IN_r_ARREADY");
    sc_trace(mVcdFile, m_axi_IN_r_ARADDR, "(port)m_axi_IN_r_ARADDR");
    sc_trace(mVcdFile, m_axi_IN_r_ARID, "(port)m_axi_IN_r_ARID");
    sc_trace(mVcdFile, m_axi_IN_r_ARLEN, "(port)m_axi_IN_r_ARLEN");
    sc_trace(mVcdFile, m_axi_IN_r_ARSIZE, "(port)m_axi_IN_r_ARSIZE");
    sc_trace(mVcdFile, m_axi_IN_r_ARBURST, "(port)m_axi_IN_r_ARBURST");
    sc_trace(mVcdFile, m_axi_IN_r_ARLOCK, "(port)m_axi_IN_r_ARLOCK");
    sc_trace(mVcdFile, m_axi_IN_r_ARCACHE, "(port)m_axi_IN_r_ARCACHE");
    sc_trace(mVcdFile, m_axi_IN_r_ARPROT, "(port)m_axi_IN_r_ARPROT");
    sc_trace(mVcdFile, m_axi_IN_r_ARQOS, "(port)m_axi_IN_r_ARQOS");
    sc_trace(mVcdFile, m_axi_IN_r_ARREGION, "(port)m_axi_IN_r_ARREGION");
    sc_trace(mVcdFile, m_axi_IN_r_ARUSER, "(port)m_axi_IN_r_ARUSER");
    sc_trace(mVcdFile, m_axi_IN_r_RVALID, "(port)m_axi_IN_r_RVALID");
    sc_trace(mVcdFile, m_axi_IN_r_RREADY, "(port)m_axi_IN_r_RREADY");
    sc_trace(mVcdFile, m_axi_IN_r_RDATA, "(port)m_axi_IN_r_RDATA");
    sc_trace(mVcdFile, m_axi_IN_r_RLAST, "(port)m_axi_IN_r_RLAST");
    sc_trace(mVcdFile, m_axi_IN_r_RID, "(port)m_axi_IN_r_RID");
    sc_trace(mVcdFile, m_axi_IN_r_RUSER, "(port)m_axi_IN_r_RUSER");
    sc_trace(mVcdFile, m_axi_IN_r_RRESP, "(port)m_axi_IN_r_RRESP");
    sc_trace(mVcdFile, m_axi_IN_r_BVALID, "(port)m_axi_IN_r_BVALID");
    sc_trace(mVcdFile, m_axi_IN_r_BREADY, "(port)m_axi_IN_r_BREADY");
    sc_trace(mVcdFile, m_axi_IN_r_BRESP, "(port)m_axi_IN_r_BRESP");
    sc_trace(mVcdFile, m_axi_IN_r_BID, "(port)m_axi_IN_r_BID");
    sc_trace(mVcdFile, m_axi_IN_r_BUSER, "(port)m_axi_IN_r_BUSER");
    sc_trace(mVcdFile, m_axi_BETA_AWVALID, "(port)m_axi_BETA_AWVALID");
    sc_trace(mVcdFile, m_axi_BETA_AWREADY, "(port)m_axi_BETA_AWREADY");
    sc_trace(mVcdFile, m_axi_BETA_AWADDR, "(port)m_axi_BETA_AWADDR");
    sc_trace(mVcdFile, m_axi_BETA_AWID, "(port)m_axi_BETA_AWID");
    sc_trace(mVcdFile, m_axi_BETA_AWLEN, "(port)m_axi_BETA_AWLEN");
    sc_trace(mVcdFile, m_axi_BETA_AWSIZE, "(port)m_axi_BETA_AWSIZE");
    sc_trace(mVcdFile, m_axi_BETA_AWBURST, "(port)m_axi_BETA_AWBURST");
    sc_trace(mVcdFile, m_axi_BETA_AWLOCK, "(port)m_axi_BETA_AWLOCK");
    sc_trace(mVcdFile, m_axi_BETA_AWCACHE, "(port)m_axi_BETA_AWCACHE");
    sc_trace(mVcdFile, m_axi_BETA_AWPROT, "(port)m_axi_BETA_AWPROT");
    sc_trace(mVcdFile, m_axi_BETA_AWQOS, "(port)m_axi_BETA_AWQOS");
    sc_trace(mVcdFile, m_axi_BETA_AWREGION, "(port)m_axi_BETA_AWREGION");
    sc_trace(mVcdFile, m_axi_BETA_AWUSER, "(port)m_axi_BETA_AWUSER");
    sc_trace(mVcdFile, m_axi_BETA_WVALID, "(port)m_axi_BETA_WVALID");
    sc_trace(mVcdFile, m_axi_BETA_WREADY, "(port)m_axi_BETA_WREADY");
    sc_trace(mVcdFile, m_axi_BETA_WDATA, "(port)m_axi_BETA_WDATA");
    sc_trace(mVcdFile, m_axi_BETA_WSTRB, "(port)m_axi_BETA_WSTRB");
    sc_trace(mVcdFile, m_axi_BETA_WLAST, "(port)m_axi_BETA_WLAST");
    sc_trace(mVcdFile, m_axi_BETA_WID, "(port)m_axi_BETA_WID");
    sc_trace(mVcdFile, m_axi_BETA_WUSER, "(port)m_axi_BETA_WUSER");
    sc_trace(mVcdFile, m_axi_BETA_ARVALID, "(port)m_axi_BETA_ARVALID");
    sc_trace(mVcdFile, m_axi_BETA_ARREADY, "(port)m_axi_BETA_ARREADY");
    sc_trace(mVcdFile, m_axi_BETA_ARADDR, "(port)m_axi_BETA_ARADDR");
    sc_trace(mVcdFile, m_axi_BETA_ARID, "(port)m_axi_BETA_ARID");
    sc_trace(mVcdFile, m_axi_BETA_ARLEN, "(port)m_axi_BETA_ARLEN");
    sc_trace(mVcdFile, m_axi_BETA_ARSIZE, "(port)m_axi_BETA_ARSIZE");
    sc_trace(mVcdFile, m_axi_BETA_ARBURST, "(port)m_axi_BETA_ARBURST");
    sc_trace(mVcdFile, m_axi_BETA_ARLOCK, "(port)m_axi_BETA_ARLOCK");
    sc_trace(mVcdFile, m_axi_BETA_ARCACHE, "(port)m_axi_BETA_ARCACHE");
    sc_trace(mVcdFile, m_axi_BETA_ARPROT, "(port)m_axi_BETA_ARPROT");
    sc_trace(mVcdFile, m_axi_BETA_ARQOS, "(port)m_axi_BETA_ARQOS");
    sc_trace(mVcdFile, m_axi_BETA_ARREGION, "(port)m_axi_BETA_ARREGION");
    sc_trace(mVcdFile, m_axi_BETA_ARUSER, "(port)m_axi_BETA_ARUSER");
    sc_trace(mVcdFile, m_axi_BETA_RVALID, "(port)m_axi_BETA_RVALID");
    sc_trace(mVcdFile, m_axi_BETA_RREADY, "(port)m_axi_BETA_RREADY");
    sc_trace(mVcdFile, m_axi_BETA_RDATA, "(port)m_axi_BETA_RDATA");
    sc_trace(mVcdFile, m_axi_BETA_RLAST, "(port)m_axi_BETA_RLAST");
    sc_trace(mVcdFile, m_axi_BETA_RID, "(port)m_axi_BETA_RID");
    sc_trace(mVcdFile, m_axi_BETA_RUSER, "(port)m_axi_BETA_RUSER");
    sc_trace(mVcdFile, m_axi_BETA_RRESP, "(port)m_axi_BETA_RRESP");
    sc_trace(mVcdFile, m_axi_BETA_BVALID, "(port)m_axi_BETA_BVALID");
    sc_trace(mVcdFile, m_axi_BETA_BREADY, "(port)m_axi_BETA_BREADY");
    sc_trace(mVcdFile, m_axi_BETA_BRESP, "(port)m_axi_BETA_BRESP");
    sc_trace(mVcdFile, m_axi_BETA_BID, "(port)m_axi_BETA_BID");
    sc_trace(mVcdFile, m_axi_BETA_BUSER, "(port)m_axi_BETA_BUSER");
    sc_trace(mVcdFile, m_axi_GAMMA_AWVALID, "(port)m_axi_GAMMA_AWVALID");
    sc_trace(mVcdFile, m_axi_GAMMA_AWREADY, "(port)m_axi_GAMMA_AWREADY");
    sc_trace(mVcdFile, m_axi_GAMMA_AWADDR, "(port)m_axi_GAMMA_AWADDR");
    sc_trace(mVcdFile, m_axi_GAMMA_AWID, "(port)m_axi_GAMMA_AWID");
    sc_trace(mVcdFile, m_axi_GAMMA_AWLEN, "(port)m_axi_GAMMA_AWLEN");
    sc_trace(mVcdFile, m_axi_GAMMA_AWSIZE, "(port)m_axi_GAMMA_AWSIZE");
    sc_trace(mVcdFile, m_axi_GAMMA_AWBURST, "(port)m_axi_GAMMA_AWBURST");
    sc_trace(mVcdFile, m_axi_GAMMA_AWLOCK, "(port)m_axi_GAMMA_AWLOCK");
    sc_trace(mVcdFile, m_axi_GAMMA_AWCACHE, "(port)m_axi_GAMMA_AWCACHE");
    sc_trace(mVcdFile, m_axi_GAMMA_AWPROT, "(port)m_axi_GAMMA_AWPROT");
    sc_trace(mVcdFile, m_axi_GAMMA_AWQOS, "(port)m_axi_GAMMA_AWQOS");
    sc_trace(mVcdFile, m_axi_GAMMA_AWREGION, "(port)m_axi_GAMMA_AWREGION");
    sc_trace(mVcdFile, m_axi_GAMMA_AWUSER, "(port)m_axi_GAMMA_AWUSER");
    sc_trace(mVcdFile, m_axi_GAMMA_WVALID, "(port)m_axi_GAMMA_WVALID");
    sc_trace(mVcdFile, m_axi_GAMMA_WREADY, "(port)m_axi_GAMMA_WREADY");
    sc_trace(mVcdFile, m_axi_GAMMA_WDATA, "(port)m_axi_GAMMA_WDATA");
    sc_trace(mVcdFile, m_axi_GAMMA_WSTRB, "(port)m_axi_GAMMA_WSTRB");
    sc_trace(mVcdFile, m_axi_GAMMA_WLAST, "(port)m_axi_GAMMA_WLAST");
    sc_trace(mVcdFile, m_axi_GAMMA_WID, "(port)m_axi_GAMMA_WID");
    sc_trace(mVcdFile, m_axi_GAMMA_WUSER, "(port)m_axi_GAMMA_WUSER");
    sc_trace(mVcdFile, m_axi_GAMMA_ARVALID, "(port)m_axi_GAMMA_ARVALID");
    sc_trace(mVcdFile, m_axi_GAMMA_ARREADY, "(port)m_axi_GAMMA_ARREADY");
    sc_trace(mVcdFile, m_axi_GAMMA_ARADDR, "(port)m_axi_GAMMA_ARADDR");
    sc_trace(mVcdFile, m_axi_GAMMA_ARID, "(port)m_axi_GAMMA_ARID");
    sc_trace(mVcdFile, m_axi_GAMMA_ARLEN, "(port)m_axi_GAMMA_ARLEN");
    sc_trace(mVcdFile, m_axi_GAMMA_ARSIZE, "(port)m_axi_GAMMA_ARSIZE");
    sc_trace(mVcdFile, m_axi_GAMMA_ARBURST, "(port)m_axi_GAMMA_ARBURST");
    sc_trace(mVcdFile, m_axi_GAMMA_ARLOCK, "(port)m_axi_GAMMA_ARLOCK");
    sc_trace(mVcdFile, m_axi_GAMMA_ARCACHE, "(port)m_axi_GAMMA_ARCACHE");
    sc_trace(mVcdFile, m_axi_GAMMA_ARPROT, "(port)m_axi_GAMMA_ARPROT");
    sc_trace(mVcdFile, m_axi_GAMMA_ARQOS, "(port)m_axi_GAMMA_ARQOS");
    sc_trace(mVcdFile, m_axi_GAMMA_ARREGION, "(port)m_axi_GAMMA_ARREGION");
    sc_trace(mVcdFile, m_axi_GAMMA_ARUSER, "(port)m_axi_GAMMA_ARUSER");
    sc_trace(mVcdFile, m_axi_GAMMA_RVALID, "(port)m_axi_GAMMA_RVALID");
    sc_trace(mVcdFile, m_axi_GAMMA_RREADY, "(port)m_axi_GAMMA_RREADY");
    sc_trace(mVcdFile, m_axi_GAMMA_RDATA, "(port)m_axi_GAMMA_RDATA");
    sc_trace(mVcdFile, m_axi_GAMMA_RLAST, "(port)m_axi_GAMMA_RLAST");
    sc_trace(mVcdFile, m_axi_GAMMA_RID, "(port)m_axi_GAMMA_RID");
    sc_trace(mVcdFile, m_axi_GAMMA_RUSER, "(port)m_axi_GAMMA_RUSER");
    sc_trace(mVcdFile, m_axi_GAMMA_RRESP, "(port)m_axi_GAMMA_RRESP");
    sc_trace(mVcdFile, m_axi_GAMMA_BVALID, "(port)m_axi_GAMMA_BVALID");
    sc_trace(mVcdFile, m_axi_GAMMA_BREADY, "(port)m_axi_GAMMA_BREADY");
    sc_trace(mVcdFile, m_axi_GAMMA_BRESP, "(port)m_axi_GAMMA_BRESP");
    sc_trace(mVcdFile, m_axi_GAMMA_BID, "(port)m_axi_GAMMA_BID");
    sc_trace(mVcdFile, m_axi_GAMMA_BUSER, "(port)m_axi_GAMMA_BUSER");
    sc_trace(mVcdFile, m_axi_M_M_AWVALID, "(port)m_axi_M_M_AWVALID");
    sc_trace(mVcdFile, m_axi_M_M_AWREADY, "(port)m_axi_M_M_AWREADY");
    sc_trace(mVcdFile, m_axi_M_M_AWADDR, "(port)m_axi_M_M_AWADDR");
    sc_trace(mVcdFile, m_axi_M_M_AWID, "(port)m_axi_M_M_AWID");
    sc_trace(mVcdFile, m_axi_M_M_AWLEN, "(port)m_axi_M_M_AWLEN");
    sc_trace(mVcdFile, m_axi_M_M_AWSIZE, "(port)m_axi_M_M_AWSIZE");
    sc_trace(mVcdFile, m_axi_M_M_AWBURST, "(port)m_axi_M_M_AWBURST");
    sc_trace(mVcdFile, m_axi_M_M_AWLOCK, "(port)m_axi_M_M_AWLOCK");
    sc_trace(mVcdFile, m_axi_M_M_AWCACHE, "(port)m_axi_M_M_AWCACHE");
    sc_trace(mVcdFile, m_axi_M_M_AWPROT, "(port)m_axi_M_M_AWPROT");
    sc_trace(mVcdFile, m_axi_M_M_AWQOS, "(port)m_axi_M_M_AWQOS");
    sc_trace(mVcdFile, m_axi_M_M_AWREGION, "(port)m_axi_M_M_AWREGION");
    sc_trace(mVcdFile, m_axi_M_M_AWUSER, "(port)m_axi_M_M_AWUSER");
    sc_trace(mVcdFile, m_axi_M_M_WVALID, "(port)m_axi_M_M_WVALID");
    sc_trace(mVcdFile, m_axi_M_M_WREADY, "(port)m_axi_M_M_WREADY");
    sc_trace(mVcdFile, m_axi_M_M_WDATA, "(port)m_axi_M_M_WDATA");
    sc_trace(mVcdFile, m_axi_M_M_WSTRB, "(port)m_axi_M_M_WSTRB");
    sc_trace(mVcdFile, m_axi_M_M_WLAST, "(port)m_axi_M_M_WLAST");
    sc_trace(mVcdFile, m_axi_M_M_WID, "(port)m_axi_M_M_WID");
    sc_trace(mVcdFile, m_axi_M_M_WUSER, "(port)m_axi_M_M_WUSER");
    sc_trace(mVcdFile, m_axi_M_M_ARVALID, "(port)m_axi_M_M_ARVALID");
    sc_trace(mVcdFile, m_axi_M_M_ARREADY, "(port)m_axi_M_M_ARREADY");
    sc_trace(mVcdFile, m_axi_M_M_ARADDR, "(port)m_axi_M_M_ARADDR");
    sc_trace(mVcdFile, m_axi_M_M_ARID, "(port)m_axi_M_M_ARID");
    sc_trace(mVcdFile, m_axi_M_M_ARLEN, "(port)m_axi_M_M_ARLEN");
    sc_trace(mVcdFile, m_axi_M_M_ARSIZE, "(port)m_axi_M_M_ARSIZE");
    sc_trace(mVcdFile, m_axi_M_M_ARBURST, "(port)m_axi_M_M_ARBURST");
    sc_trace(mVcdFile, m_axi_M_M_ARLOCK, "(port)m_axi_M_M_ARLOCK");
    sc_trace(mVcdFile, m_axi_M_M_ARCACHE, "(port)m_axi_M_M_ARCACHE");
    sc_trace(mVcdFile, m_axi_M_M_ARPROT, "(port)m_axi_M_M_ARPROT");
    sc_trace(mVcdFile, m_axi_M_M_ARQOS, "(port)m_axi_M_M_ARQOS");
    sc_trace(mVcdFile, m_axi_M_M_ARREGION, "(port)m_axi_M_M_ARREGION");
    sc_trace(mVcdFile, m_axi_M_M_ARUSER, "(port)m_axi_M_M_ARUSER");
    sc_trace(mVcdFile, m_axi_M_M_RVALID, "(port)m_axi_M_M_RVALID");
    sc_trace(mVcdFile, m_axi_M_M_RREADY, "(port)m_axi_M_M_RREADY");
    sc_trace(mVcdFile, m_axi_M_M_RDATA, "(port)m_axi_M_M_RDATA");
    sc_trace(mVcdFile, m_axi_M_M_RLAST, "(port)m_axi_M_M_RLAST");
    sc_trace(mVcdFile, m_axi_M_M_RID, "(port)m_axi_M_M_RID");
    sc_trace(mVcdFile, m_axi_M_M_RUSER, "(port)m_axi_M_M_RUSER");
    sc_trace(mVcdFile, m_axi_M_M_RRESP, "(port)m_axi_M_M_RRESP");
    sc_trace(mVcdFile, m_axi_M_M_BVALID, "(port)m_axi_M_M_BVALID");
    sc_trace(mVcdFile, m_axi_M_M_BREADY, "(port)m_axi_M_M_BREADY");
    sc_trace(mVcdFile, m_axi_M_M_BRESP, "(port)m_axi_M_M_BRESP");
    sc_trace(mVcdFile, m_axi_M_M_BID, "(port)m_axi_M_M_BID");
    sc_trace(mVcdFile, m_axi_M_M_BUSER, "(port)m_axi_M_M_BUSER");
    sc_trace(mVcdFile, m_axi_M_V_AWVALID, "(port)m_axi_M_V_AWVALID");
    sc_trace(mVcdFile, m_axi_M_V_AWREADY, "(port)m_axi_M_V_AWREADY");
    sc_trace(mVcdFile, m_axi_M_V_AWADDR, "(port)m_axi_M_V_AWADDR");
    sc_trace(mVcdFile, m_axi_M_V_AWID, "(port)m_axi_M_V_AWID");
    sc_trace(mVcdFile, m_axi_M_V_AWLEN, "(port)m_axi_M_V_AWLEN");
    sc_trace(mVcdFile, m_axi_M_V_AWSIZE, "(port)m_axi_M_V_AWSIZE");
    sc_trace(mVcdFile, m_axi_M_V_AWBURST, "(port)m_axi_M_V_AWBURST");
    sc_trace(mVcdFile, m_axi_M_V_AWLOCK, "(port)m_axi_M_V_AWLOCK");
    sc_trace(mVcdFile, m_axi_M_V_AWCACHE, "(port)m_axi_M_V_AWCACHE");
    sc_trace(mVcdFile, m_axi_M_V_AWPROT, "(port)m_axi_M_V_AWPROT");
    sc_trace(mVcdFile, m_axi_M_V_AWQOS, "(port)m_axi_M_V_AWQOS");
    sc_trace(mVcdFile, m_axi_M_V_AWREGION, "(port)m_axi_M_V_AWREGION");
    sc_trace(mVcdFile, m_axi_M_V_AWUSER, "(port)m_axi_M_V_AWUSER");
    sc_trace(mVcdFile, m_axi_M_V_WVALID, "(port)m_axi_M_V_WVALID");
    sc_trace(mVcdFile, m_axi_M_V_WREADY, "(port)m_axi_M_V_WREADY");
    sc_trace(mVcdFile, m_axi_M_V_WDATA, "(port)m_axi_M_V_WDATA");
    sc_trace(mVcdFile, m_axi_M_V_WSTRB, "(port)m_axi_M_V_WSTRB");
    sc_trace(mVcdFile, m_axi_M_V_WLAST, "(port)m_axi_M_V_WLAST");
    sc_trace(mVcdFile, m_axi_M_V_WID, "(port)m_axi_M_V_WID");
    sc_trace(mVcdFile, m_axi_M_V_WUSER, "(port)m_axi_M_V_WUSER");
    sc_trace(mVcdFile, m_axi_M_V_ARVALID, "(port)m_axi_M_V_ARVALID");
    sc_trace(mVcdFile, m_axi_M_V_ARREADY, "(port)m_axi_M_V_ARREADY");
    sc_trace(mVcdFile, m_axi_M_V_ARADDR, "(port)m_axi_M_V_ARADDR");
    sc_trace(mVcdFile, m_axi_M_V_ARID, "(port)m_axi_M_V_ARID");
    sc_trace(mVcdFile, m_axi_M_V_ARLEN, "(port)m_axi_M_V_ARLEN");
    sc_trace(mVcdFile, m_axi_M_V_ARSIZE, "(port)m_axi_M_V_ARSIZE");
    sc_trace(mVcdFile, m_axi_M_V_ARBURST, "(port)m_axi_M_V_ARBURST");
    sc_trace(mVcdFile, m_axi_M_V_ARLOCK, "(port)m_axi_M_V_ARLOCK");
    sc_trace(mVcdFile, m_axi_M_V_ARCACHE, "(port)m_axi_M_V_ARCACHE");
    sc_trace(mVcdFile, m_axi_M_V_ARPROT, "(port)m_axi_M_V_ARPROT");
    sc_trace(mVcdFile, m_axi_M_V_ARQOS, "(port)m_axi_M_V_ARQOS");
    sc_trace(mVcdFile, m_axi_M_V_ARREGION, "(port)m_axi_M_V_ARREGION");
    sc_trace(mVcdFile, m_axi_M_V_ARUSER, "(port)m_axi_M_V_ARUSER");
    sc_trace(mVcdFile, m_axi_M_V_RVALID, "(port)m_axi_M_V_RVALID");
    sc_trace(mVcdFile, m_axi_M_V_RREADY, "(port)m_axi_M_V_RREADY");
    sc_trace(mVcdFile, m_axi_M_V_RDATA, "(port)m_axi_M_V_RDATA");
    sc_trace(mVcdFile, m_axi_M_V_RLAST, "(port)m_axi_M_V_RLAST");
    sc_trace(mVcdFile, m_axi_M_V_RID, "(port)m_axi_M_V_RID");
    sc_trace(mVcdFile, m_axi_M_V_RUSER, "(port)m_axi_M_V_RUSER");
    sc_trace(mVcdFile, m_axi_M_V_RRESP, "(port)m_axi_M_V_RRESP");
    sc_trace(mVcdFile, m_axi_M_V_BVALID, "(port)m_axi_M_V_BVALID");
    sc_trace(mVcdFile, m_axi_M_V_BREADY, "(port)m_axi_M_V_BREADY");
    sc_trace(mVcdFile, m_axi_M_V_BRESP, "(port)m_axi_M_V_BRESP");
    sc_trace(mVcdFile, m_axi_M_V_BID, "(port)m_axi_M_V_BID");
    sc_trace(mVcdFile, m_axi_M_V_BUSER, "(port)m_axi_M_V_BUSER");
    sc_trace(mVcdFile, m_axi_OUT_r_AWVALID, "(port)m_axi_OUT_r_AWVALID");
    sc_trace(mVcdFile, m_axi_OUT_r_AWREADY, "(port)m_axi_OUT_r_AWREADY");
    sc_trace(mVcdFile, m_axi_OUT_r_AWADDR, "(port)m_axi_OUT_r_AWADDR");
    sc_trace(mVcdFile, m_axi_OUT_r_AWID, "(port)m_axi_OUT_r_AWID");
    sc_trace(mVcdFile, m_axi_OUT_r_AWLEN, "(port)m_axi_OUT_r_AWLEN");
    sc_trace(mVcdFile, m_axi_OUT_r_AWSIZE, "(port)m_axi_OUT_r_AWSIZE");
    sc_trace(mVcdFile, m_axi_OUT_r_AWBURST, "(port)m_axi_OUT_r_AWBURST");
    sc_trace(mVcdFile, m_axi_OUT_r_AWLOCK, "(port)m_axi_OUT_r_AWLOCK");
    sc_trace(mVcdFile, m_axi_OUT_r_AWCACHE, "(port)m_axi_OUT_r_AWCACHE");
    sc_trace(mVcdFile, m_axi_OUT_r_AWPROT, "(port)m_axi_OUT_r_AWPROT");
    sc_trace(mVcdFile, m_axi_OUT_r_AWQOS, "(port)m_axi_OUT_r_AWQOS");
    sc_trace(mVcdFile, m_axi_OUT_r_AWREGION, "(port)m_axi_OUT_r_AWREGION");
    sc_trace(mVcdFile, m_axi_OUT_r_AWUSER, "(port)m_axi_OUT_r_AWUSER");
    sc_trace(mVcdFile, m_axi_OUT_r_WVALID, "(port)m_axi_OUT_r_WVALID");
    sc_trace(mVcdFile, m_axi_OUT_r_WREADY, "(port)m_axi_OUT_r_WREADY");
    sc_trace(mVcdFile, m_axi_OUT_r_WDATA, "(port)m_axi_OUT_r_WDATA");
    sc_trace(mVcdFile, m_axi_OUT_r_WSTRB, "(port)m_axi_OUT_r_WSTRB");
    sc_trace(mVcdFile, m_axi_OUT_r_WLAST, "(port)m_axi_OUT_r_WLAST");
    sc_trace(mVcdFile, m_axi_OUT_r_WID, "(port)m_axi_OUT_r_WID");
    sc_trace(mVcdFile, m_axi_OUT_r_WUSER, "(port)m_axi_OUT_r_WUSER");
    sc_trace(mVcdFile, m_axi_OUT_r_ARVALID, "(port)m_axi_OUT_r_ARVALID");
    sc_trace(mVcdFile, m_axi_OUT_r_ARREADY, "(port)m_axi_OUT_r_ARREADY");
    sc_trace(mVcdFile, m_axi_OUT_r_ARADDR, "(port)m_axi_OUT_r_ARADDR");
    sc_trace(mVcdFile, m_axi_OUT_r_ARID, "(port)m_axi_OUT_r_ARID");
    sc_trace(mVcdFile, m_axi_OUT_r_ARLEN, "(port)m_axi_OUT_r_ARLEN");
    sc_trace(mVcdFile, m_axi_OUT_r_ARSIZE, "(port)m_axi_OUT_r_ARSIZE");
    sc_trace(mVcdFile, m_axi_OUT_r_ARBURST, "(port)m_axi_OUT_r_ARBURST");
    sc_trace(mVcdFile, m_axi_OUT_r_ARLOCK, "(port)m_axi_OUT_r_ARLOCK");
    sc_trace(mVcdFile, m_axi_OUT_r_ARCACHE, "(port)m_axi_OUT_r_ARCACHE");
    sc_trace(mVcdFile, m_axi_OUT_r_ARPROT, "(port)m_axi_OUT_r_ARPROT");
    sc_trace(mVcdFile, m_axi_OUT_r_ARQOS, "(port)m_axi_OUT_r_ARQOS");
    sc_trace(mVcdFile, m_axi_OUT_r_ARREGION, "(port)m_axi_OUT_r_ARREGION");
    sc_trace(mVcdFile, m_axi_OUT_r_ARUSER, "(port)m_axi_OUT_r_ARUSER");
    sc_trace(mVcdFile, m_axi_OUT_r_RVALID, "(port)m_axi_OUT_r_RVALID");
    sc_trace(mVcdFile, m_axi_OUT_r_RREADY, "(port)m_axi_OUT_r_RREADY");
    sc_trace(mVcdFile, m_axi_OUT_r_RDATA, "(port)m_axi_OUT_r_RDATA");
    sc_trace(mVcdFile, m_axi_OUT_r_RLAST, "(port)m_axi_OUT_r_RLAST");
    sc_trace(mVcdFile, m_axi_OUT_r_RID, "(port)m_axi_OUT_r_RID");
    sc_trace(mVcdFile, m_axi_OUT_r_RUSER, "(port)m_axi_OUT_r_RUSER");
    sc_trace(mVcdFile, m_axi_OUT_r_RRESP, "(port)m_axi_OUT_r_RRESP");
    sc_trace(mVcdFile, m_axi_OUT_r_BVALID, "(port)m_axi_OUT_r_BVALID");
    sc_trace(mVcdFile, m_axi_OUT_r_BREADY, "(port)m_axi_OUT_r_BREADY");
    sc_trace(mVcdFile, m_axi_OUT_r_BRESP, "(port)m_axi_OUT_r_BRESP");
    sc_trace(mVcdFile, m_axi_OUT_r_BID, "(port)m_axi_OUT_r_BID");
    sc_trace(mVcdFile, m_axi_OUT_r_BUSER, "(port)m_axi_OUT_r_BUSER");
    sc_trace(mVcdFile, s_axi_CTRL_AWVALID, "(port)s_axi_CTRL_AWVALID");
    sc_trace(mVcdFile, s_axi_CTRL_AWREADY, "(port)s_axi_CTRL_AWREADY");
    sc_trace(mVcdFile, s_axi_CTRL_AWADDR, "(port)s_axi_CTRL_AWADDR");
    sc_trace(mVcdFile, s_axi_CTRL_WVALID, "(port)s_axi_CTRL_WVALID");
    sc_trace(mVcdFile, s_axi_CTRL_WREADY, "(port)s_axi_CTRL_WREADY");
    sc_trace(mVcdFile, s_axi_CTRL_WDATA, "(port)s_axi_CTRL_WDATA");
    sc_trace(mVcdFile, s_axi_CTRL_WSTRB, "(port)s_axi_CTRL_WSTRB");
    sc_trace(mVcdFile, s_axi_CTRL_ARVALID, "(port)s_axi_CTRL_ARVALID");
    sc_trace(mVcdFile, s_axi_CTRL_ARREADY, "(port)s_axi_CTRL_ARREADY");
    sc_trace(mVcdFile, s_axi_CTRL_ARADDR, "(port)s_axi_CTRL_ARADDR");
    sc_trace(mVcdFile, s_axi_CTRL_RVALID, "(port)s_axi_CTRL_RVALID");
    sc_trace(mVcdFile, s_axi_CTRL_RREADY, "(port)s_axi_CTRL_RREADY");
    sc_trace(mVcdFile, s_axi_CTRL_RDATA, "(port)s_axi_CTRL_RDATA");
    sc_trace(mVcdFile, s_axi_CTRL_RRESP, "(port)s_axi_CTRL_RRESP");
    sc_trace(mVcdFile, s_axi_CTRL_BVALID, "(port)s_axi_CTRL_BVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BREADY, "(port)s_axi_CTRL_BREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BRESP, "(port)s_axi_CTRL_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, in_V, "in_V");
    sc_trace(mVcdFile, beta_V, "beta_V");
    sc_trace(mVcdFile, gamma_V, "gamma_V");
    sc_trace(mVcdFile, moving_mean_V, "moving_mean_V");
    sc_trace(mVcdFile, moving_variance_V, "moving_variance_V");
    sc_trace(mVcdFile, out_V, "out_V");
    sc_trace(mVcdFile, IN_r_blk_n_AR, "IN_r_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, IN_r_blk_n_R, "IN_r_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, icmp_ln33_fu_461_p2, "icmp_ln33_fu_461_p2");
    sc_trace(mVcdFile, BETA_blk_n_AR, "BETA_blk_n_AR");
    sc_trace(mVcdFile, BETA_blk_n_R, "BETA_blk_n_R");
    sc_trace(mVcdFile, GAMMA_blk_n_AR, "GAMMA_blk_n_AR");
    sc_trace(mVcdFile, GAMMA_blk_n_R, "GAMMA_blk_n_R");
    sc_trace(mVcdFile, M_M_blk_n_AR, "M_M_blk_n_AR");
    sc_trace(mVcdFile, M_M_blk_n_R, "M_M_blk_n_R");
    sc_trace(mVcdFile, M_V_blk_n_AR, "M_V_blk_n_AR");
    sc_trace(mVcdFile, M_V_blk_n_R, "M_V_blk_n_R");
    sc_trace(mVcdFile, OUT_r_blk_n_AW, "OUT_r_blk_n_AW");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, OUT_r_blk_n_W, "OUT_r_blk_n_W");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, icmp_ln40_fu_473_p2, "icmp_ln40_fu_473_p2");
    sc_trace(mVcdFile, OUT_r_blk_n_B, "OUT_r_blk_n_B");
    sc_trace(mVcdFile, ap_CS_fsm_state74, "ap_CS_fsm_state74");
    sc_trace(mVcdFile, IN_r_AWREADY, "IN_r_AWREADY");
    sc_trace(mVcdFile, IN_r_WREADY, "IN_r_WREADY");
    sc_trace(mVcdFile, IN_r_ARVALID, "IN_r_ARVALID");
    sc_trace(mVcdFile, IN_r_ARREADY, "IN_r_ARREADY");
    sc_trace(mVcdFile, IN_r_ARADDR, "IN_r_ARADDR");
    sc_trace(mVcdFile, IN_r_RVALID, "IN_r_RVALID");
    sc_trace(mVcdFile, IN_r_RREADY, "IN_r_RREADY");
    sc_trace(mVcdFile, IN_r_RDATA, "IN_r_RDATA");
    sc_trace(mVcdFile, IN_r_RLAST, "IN_r_RLAST");
    sc_trace(mVcdFile, IN_r_RID, "IN_r_RID");
    sc_trace(mVcdFile, IN_r_RUSER, "IN_r_RUSER");
    sc_trace(mVcdFile, IN_r_RRESP, "IN_r_RRESP");
    sc_trace(mVcdFile, IN_r_BVALID, "IN_r_BVALID");
    sc_trace(mVcdFile, IN_r_BRESP, "IN_r_BRESP");
    sc_trace(mVcdFile, IN_r_BID, "IN_r_BID");
    sc_trace(mVcdFile, IN_r_BUSER, "IN_r_BUSER");
    sc_trace(mVcdFile, BETA_AWREADY, "BETA_AWREADY");
    sc_trace(mVcdFile, BETA_WREADY, "BETA_WREADY");
    sc_trace(mVcdFile, BETA_ARVALID, "BETA_ARVALID");
    sc_trace(mVcdFile, BETA_ARREADY, "BETA_ARREADY");
    sc_trace(mVcdFile, BETA_ARADDR, "BETA_ARADDR");
    sc_trace(mVcdFile, BETA_RVALID, "BETA_RVALID");
    sc_trace(mVcdFile, BETA_RREADY, "BETA_RREADY");
    sc_trace(mVcdFile, BETA_RDATA, "BETA_RDATA");
    sc_trace(mVcdFile, BETA_RLAST, "BETA_RLAST");
    sc_trace(mVcdFile, BETA_RID, "BETA_RID");
    sc_trace(mVcdFile, BETA_RUSER, "BETA_RUSER");
    sc_trace(mVcdFile, BETA_RRESP, "BETA_RRESP");
    sc_trace(mVcdFile, BETA_BVALID, "BETA_BVALID");
    sc_trace(mVcdFile, BETA_BRESP, "BETA_BRESP");
    sc_trace(mVcdFile, BETA_BID, "BETA_BID");
    sc_trace(mVcdFile, BETA_BUSER, "BETA_BUSER");
    sc_trace(mVcdFile, GAMMA_AWREADY, "GAMMA_AWREADY");
    sc_trace(mVcdFile, GAMMA_WREADY, "GAMMA_WREADY");
    sc_trace(mVcdFile, GAMMA_ARVALID, "GAMMA_ARVALID");
    sc_trace(mVcdFile, GAMMA_ARREADY, "GAMMA_ARREADY");
    sc_trace(mVcdFile, GAMMA_ARADDR, "GAMMA_ARADDR");
    sc_trace(mVcdFile, GAMMA_RVALID, "GAMMA_RVALID");
    sc_trace(mVcdFile, GAMMA_RREADY, "GAMMA_RREADY");
    sc_trace(mVcdFile, GAMMA_RDATA, "GAMMA_RDATA");
    sc_trace(mVcdFile, GAMMA_RLAST, "GAMMA_RLAST");
    sc_trace(mVcdFile, GAMMA_RID, "GAMMA_RID");
    sc_trace(mVcdFile, GAMMA_RUSER, "GAMMA_RUSER");
    sc_trace(mVcdFile, GAMMA_RRESP, "GAMMA_RRESP");
    sc_trace(mVcdFile, GAMMA_BVALID, "GAMMA_BVALID");
    sc_trace(mVcdFile, GAMMA_BRESP, "GAMMA_BRESP");
    sc_trace(mVcdFile, GAMMA_BID, "GAMMA_BID");
    sc_trace(mVcdFile, GAMMA_BUSER, "GAMMA_BUSER");
    sc_trace(mVcdFile, M_M_AWREADY, "M_M_AWREADY");
    sc_trace(mVcdFile, M_M_WREADY, "M_M_WREADY");
    sc_trace(mVcdFile, M_M_ARVALID, "M_M_ARVALID");
    sc_trace(mVcdFile, M_M_ARREADY, "M_M_ARREADY");
    sc_trace(mVcdFile, M_M_ARADDR, "M_M_ARADDR");
    sc_trace(mVcdFile, M_M_RVALID, "M_M_RVALID");
    sc_trace(mVcdFile, M_M_RREADY, "M_M_RREADY");
    sc_trace(mVcdFile, M_M_RDATA, "M_M_RDATA");
    sc_trace(mVcdFile, M_M_RLAST, "M_M_RLAST");
    sc_trace(mVcdFile, M_M_RID, "M_M_RID");
    sc_trace(mVcdFile, M_M_RUSER, "M_M_RUSER");
    sc_trace(mVcdFile, M_M_RRESP, "M_M_RRESP");
    sc_trace(mVcdFile, M_M_BVALID, "M_M_BVALID");
    sc_trace(mVcdFile, M_M_BRESP, "M_M_BRESP");
    sc_trace(mVcdFile, M_M_BID, "M_M_BID");
    sc_trace(mVcdFile, M_M_BUSER, "M_M_BUSER");
    sc_trace(mVcdFile, M_V_AWREADY, "M_V_AWREADY");
    sc_trace(mVcdFile, M_V_WREADY, "M_V_WREADY");
    sc_trace(mVcdFile, M_V_ARVALID, "M_V_ARVALID");
    sc_trace(mVcdFile, M_V_ARREADY, "M_V_ARREADY");
    sc_trace(mVcdFile, M_V_ARADDR, "M_V_ARADDR");
    sc_trace(mVcdFile, M_V_RVALID, "M_V_RVALID");
    sc_trace(mVcdFile, M_V_RREADY, "M_V_RREADY");
    sc_trace(mVcdFile, M_V_RDATA, "M_V_RDATA");
    sc_trace(mVcdFile, M_V_RLAST, "M_V_RLAST");
    sc_trace(mVcdFile, M_V_RID, "M_V_RID");
    sc_trace(mVcdFile, M_V_RUSER, "M_V_RUSER");
    sc_trace(mVcdFile, M_V_RRESP, "M_V_RRESP");
    sc_trace(mVcdFile, M_V_BVALID, "M_V_BVALID");
    sc_trace(mVcdFile, M_V_BRESP, "M_V_BRESP");
    sc_trace(mVcdFile, M_V_BID, "M_V_BID");
    sc_trace(mVcdFile, M_V_BUSER, "M_V_BUSER");
    sc_trace(mVcdFile, OUT_r_AWVALID, "OUT_r_AWVALID");
    sc_trace(mVcdFile, OUT_r_AWREADY, "OUT_r_AWREADY");
    sc_trace(mVcdFile, OUT_r_AWADDR, "OUT_r_AWADDR");
    sc_trace(mVcdFile, OUT_r_WVALID, "OUT_r_WVALID");
    sc_trace(mVcdFile, OUT_r_WREADY, "OUT_r_WREADY");
    sc_trace(mVcdFile, OUT_r_ARREADY, "OUT_r_ARREADY");
    sc_trace(mVcdFile, OUT_r_RVALID, "OUT_r_RVALID");
    sc_trace(mVcdFile, OUT_r_RDATA, "OUT_r_RDATA");
    sc_trace(mVcdFile, OUT_r_RLAST, "OUT_r_RLAST");
    sc_trace(mVcdFile, OUT_r_RID, "OUT_r_RID");
    sc_trace(mVcdFile, OUT_r_RUSER, "OUT_r_RUSER");
    sc_trace(mVcdFile, OUT_r_RRESP, "OUT_r_RRESP");
    sc_trace(mVcdFile, OUT_r_BVALID, "OUT_r_BVALID");
    sc_trace(mVcdFile, OUT_r_BREADY, "OUT_r_BREADY");
    sc_trace(mVcdFile, OUT_r_BRESP, "OUT_r_BRESP");
    sc_trace(mVcdFile, OUT_r_BID, "OUT_r_BID");
    sc_trace(mVcdFile, OUT_r_BUSER, "OUT_r_BUSER");
    sc_trace(mVcdFile, out_V1_reg_1477, "out_V1_reg_1477");
    sc_trace(mVcdFile, moving_variance_V9_reg_1482, "moving_variance_V9_reg_1482");
    sc_trace(mVcdFile, moving_mean_V7_reg_1487, "moving_mean_V7_reg_1487");
    sc_trace(mVcdFile, gamma_V5_reg_1492, "gamma_V5_reg_1492");
    sc_trace(mVcdFile, beta_V3_reg_1497, "beta_V3_reg_1497");
    sc_trace(mVcdFile, in_V1_reg_1502, "in_V1_reg_1502");
    sc_trace(mVcdFile, ap_block_state2_io, "ap_block_state2_io");
    sc_trace(mVcdFile, i_fu_467_p2, "i_fu_467_p2");
    sc_trace(mVcdFile, i_reg_1546, "i_reg_1546");
    sc_trace(mVcdFile, ap_block_state9, "ap_block_state9");
    sc_trace(mVcdFile, in_pack_V_reg_1551, "in_pack_V_reg_1551");
    sc_trace(mVcdFile, beta_pack_V_reg_1557, "beta_pack_V_reg_1557");
    sc_trace(mVcdFile, gamma_pack_V_reg_1563, "gamma_pack_V_reg_1563");
    sc_trace(mVcdFile, moving_mean_pack_V_reg_1569, "moving_mean_pack_V_reg_1569");
    sc_trace(mVcdFile, moving_variance_pack_reg_1575, "moving_variance_pack_reg_1575");
    sc_trace(mVcdFile, k_fu_479_p2, "k_fu_479_p2");
    sc_trace(mVcdFile, k_reg_1584, "k_reg_1584");
    sc_trace(mVcdFile, ap_block_state10_io, "ap_block_state10_io");
    sc_trace(mVcdFile, Lo_assign_fu_489_p3, "Lo_assign_fu_489_p3");
    sc_trace(mVcdFile, Lo_assign_reg_1589, "Lo_assign_reg_1589");
    sc_trace(mVcdFile, or_ln41_fu_498_p2, "or_ln41_fu_498_p2");
    sc_trace(mVcdFile, or_ln41_reg_1599, "or_ln41_reg_1599");
    sc_trace(mVcdFile, grp_fu_333_p2, "grp_fu_333_p2");
    sc_trace(mVcdFile, icmp_ln647_reg_1609, "icmp_ln647_reg_1609");
    sc_trace(mVcdFile, icmp_ln647_1_fu_505_p2, "icmp_ln647_1_fu_505_p2");
    sc_trace(mVcdFile, icmp_ln647_1_reg_1616, "icmp_ln647_1_reg_1616");
    sc_trace(mVcdFile, icmp_ln647_2_fu_511_p2, "icmp_ln647_2_fu_511_p2");
    sc_trace(mVcdFile, icmp_ln647_2_reg_1623, "icmp_ln647_2_reg_1623");
    sc_trace(mVcdFile, icmp_ln647_3_fu_517_p2, "icmp_ln647_3_fu_517_p2");
    sc_trace(mVcdFile, icmp_ln647_3_reg_1630, "icmp_ln647_3_reg_1630");
    sc_trace(mVcdFile, sub_ln647_14_fu_587_p2, "sub_ln647_14_fu_587_p2");
    sc_trace(mVcdFile, sub_ln647_14_reg_1637, "sub_ln647_14_reg_1637");
    sc_trace(mVcdFile, lshr_ln647_8_fu_597_p2, "lshr_ln647_8_fu_597_p2");
    sc_trace(mVcdFile, lshr_ln647_8_reg_1642, "lshr_ln647_8_reg_1642");
    sc_trace(mVcdFile, in_m_3_V_fu_688_p1, "in_m_3_V_fu_688_p1");
    sc_trace(mVcdFile, in_m_3_V_reg_1647, "in_m_3_V_reg_1647");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, gamma_m_3_V_fu_862_p1, "gamma_m_3_V_fu_862_p1");
    sc_trace(mVcdFile, gamma_m_3_V_reg_1652, "gamma_m_3_V_reg_1652");
    sc_trace(mVcdFile, moving_mean_m_3_V_fu_951_p1, "moving_mean_m_3_V_fu_951_p1");
    sc_trace(mVcdFile, moving_mean_m_3_V_reg_1657, "moving_mean_m_3_V_reg_1657");
    sc_trace(mVcdFile, x_V_fu_1051_p3, "x_V_fu_1051_p3");
    sc_trace(mVcdFile, x_V_reg_1662, "x_V_reg_1662");
    sc_trace(mVcdFile, trunc_ln728_fu_1059_p1, "trunc_ln728_fu_1059_p1");
    sc_trace(mVcdFile, trunc_ln728_reg_1667, "trunc_ln728_reg_1667");
    sc_trace(mVcdFile, grp_fu_1461_p4, "grp_fu_1461_p4");
    sc_trace(mVcdFile, ret_V_11_reg_1672, "ret_V_11_reg_1672");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, grp_sqrt_fixed_16_6_s_fu_328_ap_return, "grp_sqrt_fixed_16_6_s_fu_328_ap_return");
    sc_trace(mVcdFile, x_sqrt_V_reg_1677, "x_sqrt_V_reg_1677");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, p_Result_22_reg_1692, "p_Result_22_reg_1692");
    sc_trace(mVcdFile, ap_CS_fsm_state68, "ap_CS_fsm_state68");
    sc_trace(mVcdFile, tmp_V_7_fu_1141_p2, "tmp_V_7_fu_1141_p2");
    sc_trace(mVcdFile, tmp_V_7_reg_1698, "tmp_V_7_reg_1698");
    sc_trace(mVcdFile, carry_1_fu_1161_p2, "carry_1_fu_1161_p2");
    sc_trace(mVcdFile, carry_1_reg_1704, "carry_1_reg_1704");
    sc_trace(mVcdFile, p_Result_24_fu_1167_p3, "p_Result_24_fu_1167_p3");
    sc_trace(mVcdFile, p_Result_24_reg_1710, "p_Result_24_reg_1710");
    sc_trace(mVcdFile, Range1_all_ones_fu_1201_p2, "Range1_all_ones_fu_1201_p2");
    sc_trace(mVcdFile, Range1_all_ones_reg_1715, "Range1_all_ones_reg_1715");
    sc_trace(mVcdFile, Range1_all_zeros_fu_1207_p2, "Range1_all_zeros_fu_1207_p2");
    sc_trace(mVcdFile, Range1_all_zeros_reg_1721, "Range1_all_zeros_reg_1721");
    sc_trace(mVcdFile, and_ln786_fu_1241_p2, "and_ln786_fu_1241_p2");
    sc_trace(mVcdFile, and_ln786_reg_1726, "and_ln786_reg_1726");
    sc_trace(mVcdFile, p_Val2_21_fu_1325_p3, "p_Val2_21_fu_1325_p3");
    sc_trace(mVcdFile, p_Val2_21_reg_1732, "p_Val2_21_reg_1732");
    sc_trace(mVcdFile, ap_CS_fsm_state69, "ap_CS_fsm_state69");
    sc_trace(mVcdFile, i_0_reg_306, "i_0_reg_306");
    sc_trace(mVcdFile, k_0_reg_317, "k_0_reg_317");
    sc_trace(mVcdFile, ap_CS_fsm_state70, "ap_CS_fsm_state70");
    sc_trace(mVcdFile, empty_27_fu_401_p1, "empty_27_fu_401_p1");
    sc_trace(mVcdFile, empty_28_fu_411_p1, "empty_28_fu_411_p1");
    sc_trace(mVcdFile, empty_29_fu_421_p1, "empty_29_fu_421_p1");
    sc_trace(mVcdFile, empty_30_fu_431_p1, "empty_30_fu_431_p1");
    sc_trace(mVcdFile, empty_31_fu_441_p1, "empty_31_fu_441_p1");
    sc_trace(mVcdFile, empty_fu_451_p1, "empty_fu_451_p1");
    sc_trace(mVcdFile, p_Val2_s_fu_190, "p_Val2_s_fu_190");
    sc_trace(mVcdFile, p_Result_25_fu_1450_p2, "p_Result_25_fu_1450_p2");
    sc_trace(mVcdFile, grp_fu_333_p0, "grp_fu_333_p0");
    sc_trace(mVcdFile, grp_fu_333_p1, "grp_fu_333_p1");
    sc_trace(mVcdFile, trunc_ln41_fu_485_p1, "trunc_ln41_fu_485_p1");
    sc_trace(mVcdFile, zext_ln647_16_fu_529_p1, "zext_ln647_16_fu_529_p1");
    sc_trace(mVcdFile, zext_ln647_17_fu_533_p1, "zext_ln647_17_fu_533_p1");
    sc_trace(mVcdFile, icmp_ln647_4_fu_523_p2, "icmp_ln647_4_fu_523_p2");
    sc_trace(mVcdFile, sub_ln647_12_fu_546_p2, "sub_ln647_12_fu_546_p2");
    sc_trace(mVcdFile, sub_ln647_13_fu_558_p2, "sub_ln647_13_fu_558_p2");
    sc_trace(mVcdFile, tmp_35_fu_537_p4, "tmp_35_fu_537_p4");
    sc_trace(mVcdFile, xor_ln647_4_fu_552_p2, "xor_ln647_4_fu_552_p2");
    sc_trace(mVcdFile, select_ln647_12_fu_564_p3, "select_ln647_12_fu_564_p3");
    sc_trace(mVcdFile, select_ln647_14_fu_579_p3, "select_ln647_14_fu_579_p3");
    sc_trace(mVcdFile, select_ln647_13_fu_572_p3, "select_ln647_13_fu_572_p3");
    sc_trace(mVcdFile, zext_ln647_18_fu_593_p1, "zext_ln647_18_fu_593_p1");
    sc_trace(mVcdFile, zext_ln647_fu_603_p1, "zext_ln647_fu_603_p1");
    sc_trace(mVcdFile, zext_ln647_1_fu_606_p1, "zext_ln647_1_fu_606_p1");
    sc_trace(mVcdFile, sub_ln647_fu_618_p2, "sub_ln647_fu_618_p2");
    sc_trace(mVcdFile, sub_ln647_1_fu_630_p2, "sub_ln647_1_fu_630_p2");
    sc_trace(mVcdFile, tmp_31_fu_609_p4, "tmp_31_fu_609_p4");
    sc_trace(mVcdFile, xor_ln647_fu_624_p2, "xor_ln647_fu_624_p2");
    sc_trace(mVcdFile, select_ln647_fu_636_p3, "select_ln647_fu_636_p3");
    sc_trace(mVcdFile, select_ln647_2_fu_649_p3, "select_ln647_2_fu_649_p3");
    sc_trace(mVcdFile, sub_ln647_2_fu_656_p2, "sub_ln647_2_fu_656_p2");
    sc_trace(mVcdFile, select_ln647_1_fu_643_p3, "select_ln647_1_fu_643_p3");
    sc_trace(mVcdFile, zext_ln647_2_fu_662_p1, "zext_ln647_2_fu_662_p1");
    sc_trace(mVcdFile, zext_ln647_3_fu_666_p1, "zext_ln647_3_fu_666_p1");
    sc_trace(mVcdFile, lshr_ln647_fu_670_p2, "lshr_ln647_fu_670_p2");
    sc_trace(mVcdFile, lshr_ln647_1_fu_676_p2, "lshr_ln647_1_fu_676_p2");
    sc_trace(mVcdFile, p_Result_s_fu_682_p2, "p_Result_s_fu_682_p2");
    sc_trace(mVcdFile, zext_ln647_4_fu_692_p1, "zext_ln647_4_fu_692_p1");
    sc_trace(mVcdFile, zext_ln647_5_fu_695_p1, "zext_ln647_5_fu_695_p1");
    sc_trace(mVcdFile, sub_ln647_3_fu_707_p2, "sub_ln647_3_fu_707_p2");
    sc_trace(mVcdFile, sub_ln647_4_fu_719_p2, "sub_ln647_4_fu_719_p2");
    sc_trace(mVcdFile, tmp_32_fu_698_p4, "tmp_32_fu_698_p4");
    sc_trace(mVcdFile, xor_ln647_1_fu_713_p2, "xor_ln647_1_fu_713_p2");
    sc_trace(mVcdFile, select_ln647_3_fu_725_p3, "select_ln647_3_fu_725_p3");
    sc_trace(mVcdFile, select_ln647_5_fu_738_p3, "select_ln647_5_fu_738_p3");
    sc_trace(mVcdFile, sub_ln647_5_fu_745_p2, "sub_ln647_5_fu_745_p2");
    sc_trace(mVcdFile, select_ln647_4_fu_732_p3, "select_ln647_4_fu_732_p3");
    sc_trace(mVcdFile, zext_ln647_6_fu_751_p1, "zext_ln647_6_fu_751_p1");
    sc_trace(mVcdFile, zext_ln647_7_fu_755_p1, "zext_ln647_7_fu_755_p1");
    sc_trace(mVcdFile, lshr_ln647_2_fu_759_p2, "lshr_ln647_2_fu_759_p2");
    sc_trace(mVcdFile, lshr_ln647_3_fu_765_p2, "lshr_ln647_3_fu_765_p2");
    sc_trace(mVcdFile, zext_ln647_8_fu_777_p1, "zext_ln647_8_fu_777_p1");
    sc_trace(mVcdFile, zext_ln647_9_fu_780_p1, "zext_ln647_9_fu_780_p1");
    sc_trace(mVcdFile, sub_ln647_6_fu_792_p2, "sub_ln647_6_fu_792_p2");
    sc_trace(mVcdFile, sub_ln647_7_fu_804_p2, "sub_ln647_7_fu_804_p2");
    sc_trace(mVcdFile, tmp_33_fu_783_p4, "tmp_33_fu_783_p4");
    sc_trace(mVcdFile, xor_ln647_2_fu_798_p2, "xor_ln647_2_fu_798_p2");
    sc_trace(mVcdFile, select_ln647_6_fu_810_p3, "select_ln647_6_fu_810_p3");
    sc_trace(mVcdFile, select_ln647_8_fu_823_p3, "select_ln647_8_fu_823_p3");
    sc_trace(mVcdFile, sub_ln647_8_fu_830_p2, "sub_ln647_8_fu_830_p2");
    sc_trace(mVcdFile, select_ln647_7_fu_817_p3, "select_ln647_7_fu_817_p3");
    sc_trace(mVcdFile, zext_ln647_10_fu_836_p1, "zext_ln647_10_fu_836_p1");
    sc_trace(mVcdFile, zext_ln647_11_fu_840_p1, "zext_ln647_11_fu_840_p1");
    sc_trace(mVcdFile, lshr_ln647_4_fu_844_p2, "lshr_ln647_4_fu_844_p2");
    sc_trace(mVcdFile, lshr_ln647_5_fu_850_p2, "lshr_ln647_5_fu_850_p2");
    sc_trace(mVcdFile, p_Result_17_fu_856_p2, "p_Result_17_fu_856_p2");
    sc_trace(mVcdFile, zext_ln647_12_fu_866_p1, "zext_ln647_12_fu_866_p1");
    sc_trace(mVcdFile, zext_ln647_13_fu_869_p1, "zext_ln647_13_fu_869_p1");
    sc_trace(mVcdFile, sub_ln647_9_fu_881_p2, "sub_ln647_9_fu_881_p2");
    sc_trace(mVcdFile, sub_ln647_10_fu_893_p2, "sub_ln647_10_fu_893_p2");
    sc_trace(mVcdFile, tmp_34_fu_872_p4, "tmp_34_fu_872_p4");
    sc_trace(mVcdFile, xor_ln647_3_fu_887_p2, "xor_ln647_3_fu_887_p2");
    sc_trace(mVcdFile, select_ln647_9_fu_899_p3, "select_ln647_9_fu_899_p3");
    sc_trace(mVcdFile, select_ln647_11_fu_912_p3, "select_ln647_11_fu_912_p3");
    sc_trace(mVcdFile, sub_ln647_11_fu_919_p2, "sub_ln647_11_fu_919_p2");
    sc_trace(mVcdFile, select_ln647_10_fu_906_p3, "select_ln647_10_fu_906_p3");
    sc_trace(mVcdFile, zext_ln647_14_fu_925_p1, "zext_ln647_14_fu_925_p1");
    sc_trace(mVcdFile, zext_ln647_15_fu_929_p1, "zext_ln647_15_fu_929_p1");
    sc_trace(mVcdFile, lshr_ln647_6_fu_933_p2, "lshr_ln647_6_fu_933_p2");
    sc_trace(mVcdFile, lshr_ln647_7_fu_939_p2, "lshr_ln647_7_fu_939_p2");
    sc_trace(mVcdFile, p_Result_18_fu_945_p2, "p_Result_18_fu_945_p2");
    sc_trace(mVcdFile, zext_ln647_19_fu_955_p1, "zext_ln647_19_fu_955_p1");
    sc_trace(mVcdFile, lshr_ln647_9_fu_958_p2, "lshr_ln647_9_fu_958_p2");
    sc_trace(mVcdFile, p_Result_19_fu_964_p2, "p_Result_19_fu_964_p2");
    sc_trace(mVcdFile, moving_variance_m_3_fu_969_p1, "moving_variance_m_3_fu_969_p1");
    sc_trace(mVcdFile, lhs_V_fu_973_p1, "lhs_V_fu_973_p1");
    sc_trace(mVcdFile, ret_V_10_fu_977_p2, "ret_V_10_fu_977_p2");
    sc_trace(mVcdFile, tmp_num_V_fu_991_p2, "tmp_num_V_fu_991_p2");
    sc_trace(mVcdFile, p_Result_21_fu_997_p3, "p_Result_21_fu_997_p3");
    sc_trace(mVcdFile, p_Result_20_fu_983_p3, "p_Result_20_fu_983_p3");
    sc_trace(mVcdFile, xor_ln786_fu_1005_p2, "xor_ln786_fu_1005_p2");
    sc_trace(mVcdFile, xor_ln340_1_fu_1023_p2, "xor_ln340_1_fu_1023_p2");
    sc_trace(mVcdFile, xor_ln340_fu_1017_p2, "xor_ln340_fu_1017_p2");
    sc_trace(mVcdFile, underflow_fu_1011_p2, "underflow_fu_1011_p2");
    sc_trace(mVcdFile, or_ln340_fu_1029_p2, "or_ln340_fu_1029_p2");
    sc_trace(mVcdFile, select_ln340_1_fu_1035_p3, "select_ln340_1_fu_1035_p3");
    sc_trace(mVcdFile, select_ln388_1_fu_1043_p3, "select_ln388_1_fu_1043_p3");
    sc_trace(mVcdFile, p_Result_16_fu_771_p2, "p_Result_16_fu_771_p2");
    sc_trace(mVcdFile, rhs_V_1_fu_1072_p3, "rhs_V_1_fu_1072_p3");
    sc_trace(mVcdFile, tmp_s_fu_1083_p3, "tmp_s_fu_1083_p3");
    sc_trace(mVcdFile, grp_fu_1097_p0, "grp_fu_1097_p0");
    sc_trace(mVcdFile, grp_fu_1097_p1, "grp_fu_1097_p1");
    sc_trace(mVcdFile, grp_fu_1097_p2, "grp_fu_1097_p2");
    sc_trace(mVcdFile, tmp_40_fu_1129_p3, "tmp_40_fu_1129_p3");
    sc_trace(mVcdFile, tmp_V_fu_1111_p4, "tmp_V_fu_1111_p4");
    sc_trace(mVcdFile, zext_ln415_fu_1137_p1, "zext_ln415_fu_1137_p1");
    sc_trace(mVcdFile, tmp_41_fu_1147_p3, "tmp_41_fu_1147_p3");
    sc_trace(mVcdFile, p_Result_23_fu_1121_p3, "p_Result_23_fu_1121_p3");
    sc_trace(mVcdFile, xor_ln416_fu_1155_p2, "xor_ln416_fu_1155_p2");
    sc_trace(mVcdFile, tmp_fu_1175_p4, "tmp_fu_1175_p4");
    sc_trace(mVcdFile, tmp_7_fu_1191_p4, "tmp_7_fu_1191_p4");
    sc_trace(mVcdFile, tmp_43_fu_1213_p3, "tmp_43_fu_1213_p3");
    sc_trace(mVcdFile, Range2_all_ones_fu_1185_p2, "Range2_all_ones_fu_1185_p2");
    sc_trace(mVcdFile, xor_ln779_fu_1221_p2, "xor_ln779_fu_1221_p2");
    sc_trace(mVcdFile, and_ln779_fu_1227_p2, "and_ln779_fu_1227_p2");
    sc_trace(mVcdFile, deleted_ones_fu_1233_p3, "deleted_ones_fu_1233_p3");
    sc_trace(mVcdFile, deleted_zeros_fu_1247_p3, "deleted_zeros_fu_1247_p3");
    sc_trace(mVcdFile, xor_ln785_fu_1256_p2, "xor_ln785_fu_1256_p2");
    sc_trace(mVcdFile, or_ln785_fu_1262_p2, "or_ln785_fu_1262_p2");
    sc_trace(mVcdFile, xor_ln785_1_fu_1267_p2, "xor_ln785_1_fu_1267_p2");
    sc_trace(mVcdFile, and_ln781_fu_1252_p2, "and_ln781_fu_1252_p2");
    sc_trace(mVcdFile, or_ln786_fu_1278_p2, "or_ln786_fu_1278_p2");
    sc_trace(mVcdFile, xor_ln786_1_fu_1283_p2, "xor_ln786_1_fu_1283_p2");
    sc_trace(mVcdFile, underflow_1_fu_1289_p2, "underflow_1_fu_1289_p2");
    sc_trace(mVcdFile, overflow_fu_1272_p2, "overflow_fu_1272_p2");
    sc_trace(mVcdFile, or_ln340_3_fu_1300_p2, "or_ln340_3_fu_1300_p2");
    sc_trace(mVcdFile, or_ln340_1_fu_1294_p2, "or_ln340_1_fu_1294_p2");
    sc_trace(mVcdFile, or_ln340_2_fu_1305_p2, "or_ln340_2_fu_1305_p2");
    sc_trace(mVcdFile, select_ln340_fu_1311_p3, "select_ln340_fu_1311_p3");
    sc_trace(mVcdFile, select_ln388_fu_1318_p3, "select_ln388_fu_1318_p3");
    sc_trace(mVcdFile, zext_ln414_fu_1336_p1, "zext_ln414_fu_1336_p1");
    sc_trace(mVcdFile, zext_ln414_1_fu_1339_p1, "zext_ln414_1_fu_1339_p1");
    sc_trace(mVcdFile, xor_ln414_fu_1342_p2, "xor_ln414_fu_1342_p2");
    sc_trace(mVcdFile, select_ln414_fu_1348_p3, "select_ln414_fu_1348_p3");
    sc_trace(mVcdFile, select_ln414_2_fu_1364_p3, "select_ln414_2_fu_1364_p3");
    sc_trace(mVcdFile, select_ln414_1_fu_1356_p3, "select_ln414_1_fu_1356_p3");
    sc_trace(mVcdFile, xor_ln414_1_fu_1372_p2, "xor_ln414_1_fu_1372_p2");
    sc_trace(mVcdFile, tmp_V_8_fu_1333_p1, "tmp_V_8_fu_1333_p1");
    sc_trace(mVcdFile, zext_ln414_2_fu_1378_p1, "zext_ln414_2_fu_1378_p1");
    sc_trace(mVcdFile, shl_ln414_fu_1390_p2, "shl_ln414_fu_1390_p2");
    sc_trace(mVcdFile, tmp_44_fu_1396_p4, "tmp_44_fu_1396_p4");
    sc_trace(mVcdFile, zext_ln414_3_fu_1382_p1, "zext_ln414_3_fu_1382_p1");
    sc_trace(mVcdFile, zext_ln414_4_fu_1386_p1, "zext_ln414_4_fu_1386_p1");
    sc_trace(mVcdFile, shl_ln414_1_fu_1414_p2, "shl_ln414_1_fu_1414_p2");
    sc_trace(mVcdFile, lshr_ln414_fu_1420_p2, "lshr_ln414_fu_1420_p2");
    sc_trace(mVcdFile, and_ln414_fu_1426_p2, "and_ln414_fu_1426_p2");
    sc_trace(mVcdFile, xor_ln414_2_fu_1432_p2, "xor_ln414_2_fu_1432_p2");
    sc_trace(mVcdFile, select_ln414_3_fu_1406_p3, "select_ln414_3_fu_1406_p3");
    sc_trace(mVcdFile, and_ln414_1_fu_1438_p2, "and_ln414_1_fu_1438_p2");
    sc_trace(mVcdFile, and_ln414_2_fu_1444_p2, "and_ln414_2_fu_1444_p2");
    sc_trace(mVcdFile, grp_fu_1097_ap_start, "grp_fu_1097_ap_start");
    sc_trace(mVcdFile, grp_fu_1097_ap_done, "grp_fu_1097_ap_done");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_1097_p10, "grp_fu_1097_p10");
#endif

    }
    mHdltvinHandle.open("bn.hdltvin.dat");
    mHdltvoutHandle.open("bn.hdltvout.dat");
}

bn::~bn() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete bn_CTRL_s_axi_U;
    delete bn_IN_r_m_axi_U;
    delete bn_BETA_m_axi_U;
    delete bn_GAMMA_m_axi_U;
    delete bn_M_M_m_axi_U;
    delete bn_M_V_m_axi_U;
    delete bn_OUT_r_m_axi_U;
    delete grp_sqrt_fixed_16_6_s_fu_328;
    delete bn_sdiv_44s_14ns_bkb_U2;
    delete bn_ama_submuladd_cud_U3;
}

void bn::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void bn::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_logic_0;
}

void bn::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv32_0;
}

void bn::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv1_0;
}

void bn::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv3_0;
}

void bn::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_20;
}

void bn::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv2_0;
}

void bn::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv4_0;
}

void bn::thread_ap_var_for_const10() {
    ap_var_for_const10 = ap_const_lv8_FF;
}

void bn::thread_ap_var_for_const8() {
    ap_var_for_const8 = ap_const_lv64_0;
}

void bn::thread_ap_var_for_const9() {
    ap_var_for_const9 = ap_const_lv8_0;
}

void bn::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(icmp_ln40_fu_473_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0))) {
        i_0_reg_306 = i_reg_1546.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(OUT_r_AWREADY.read(), ap_const_logic_1))) {
        i_0_reg_306 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
        k_0_reg_317 = k_reg_1584.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
                !((esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IN_r_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, BETA_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, GAMMA_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, M_M_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, M_V_RVALID.read()))))) {
        k_0_reg_317 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln40_fu_473_p2.read()))) {
        Lo_assign_reg_1589 = Lo_assign_fu_489_p3.read();
        icmp_ln647_1_reg_1616 = icmp_ln647_1_fu_505_p2.read();
        icmp_ln647_2_reg_1623 = icmp_ln647_2_fu_511_p2.read();
        icmp_ln647_3_reg_1630 = icmp_ln647_3_fu_517_p2.read();
        icmp_ln647_reg_1609 = grp_fu_333_p2.read();
        lshr_ln647_8_reg_1642 = lshr_ln647_8_fu_597_p2.read();
        or_ln41_reg_1599 = or_ln41_fu_498_p2.read();
        sub_ln647_14_reg_1637 = sub_ln647_14_fu_587_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read())) {
        Range1_all_ones_reg_1715 = Range1_all_ones_fu_1201_p2.read();
        Range1_all_zeros_reg_1721 = Range1_all_zeros_fu_1207_p2.read();
        and_ln786_reg_1726 = and_ln786_fu_1241_p2.read();
        carry_1_reg_1704 = carry_1_fu_1161_p2.read();
        p_Result_22_reg_1692 = grp_fu_1097_p2.read().range(43, 43);
        p_Result_24_reg_1710 = tmp_V_7_fu_1141_p2.read().range(15, 15);
        tmp_V_7_reg_1698 = tmp_V_7_fu_1141_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        beta_V3_reg_1497 = beta_V.read().range(31, 3);
        gamma_V5_reg_1492 = gamma_V.read().range(31, 3);
        in_V1_reg_1502 = in_V.read().range(31, 3);
        moving_mean_V7_reg_1487 = moving_mean_V.read().range(31, 3);
        moving_variance_V9_reg_1482 = moving_variance_V.read().range(31, 3);
        out_V1_reg_1477 = out_V.read().range(31, 3);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && !((esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IN_r_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, BETA_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, GAMMA_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, M_M_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, M_V_RVALID.read()))))) {
        beta_pack_V_reg_1557 = BETA_RDATA.read();
        gamma_pack_V_reg_1563 = GAMMA_RDATA.read();
        in_pack_V_reg_1551 = IN_r_RDATA.read();
        moving_mean_pack_V_reg_1569 = M_M_RDATA.read();
        moving_variance_pack_reg_1575 = M_V_RDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        gamma_m_3_V_reg_1652 = gamma_m_3_V_fu_862_p1.read();
        in_m_3_V_reg_1647 = in_m_3_V_fu_688_p1.read();
        moving_mean_m_3_V_reg_1657 = moving_mean_m_3_V_fu_951_p1.read();
        trunc_ln728_reg_1667 = trunc_ln728_fu_1059_p1.read();
        x_V_reg_1662 = x_V_fu_1051_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && !((esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IN_r_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, BETA_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, GAMMA_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, M_M_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, M_V_RVALID.read()))))) {
        i_reg_1546 = i_fu_467_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0))) {
        k_reg_1584 = k_fu_479_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read())) {
        p_Val2_21_reg_1732 = p_Val2_21_fu_1325_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
        p_Val2_s_fu_190 = p_Result_25_fu_1450_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        ret_V_11_reg_1672 = grp_fu_1461_p4.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        x_sqrt_V_reg_1677 = grp_sqrt_fixed_16_6_s_fu_328_ap_return.read();
    }
}

void bn::thread_BETA_ARADDR() {
    BETA_ARADDR =  (sc_lv<32>) (empty_30_fu_431_p1.read());
}

void bn::thread_BETA_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_block_state2_io.read(), ap_const_boolean_0))) {
        BETA_ARVALID = ap_const_logic_1;
    } else {
        BETA_ARVALID = ap_const_logic_0;
    }
}

void bn::thread_BETA_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
         !((esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IN_r_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, BETA_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, GAMMA_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, M_M_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, M_V_RVALID.read()))))) {
        BETA_RREADY = ap_const_logic_1;
    } else {
        BETA_RREADY = ap_const_logic_0;
    }
}

void bn::thread_BETA_blk_n_AR() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        BETA_blk_n_AR = m_axi_BETA_ARREADY.read();
    } else {
        BETA_blk_n_AR = ap_const_logic_1;
    }
}

void bn::thread_BETA_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0))) {
        BETA_blk_n_R = m_axi_BETA_RVALID.read();
    } else {
        BETA_blk_n_R = ap_const_logic_1;
    }
}

void bn::thread_GAMMA_ARADDR() {
    GAMMA_ARADDR =  (sc_lv<32>) (empty_29_fu_421_p1.read());
}

void bn::thread_GAMMA_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_block_state2_io.read(), ap_const_boolean_0))) {
        GAMMA_ARVALID = ap_const_logic_1;
    } else {
        GAMMA_ARVALID = ap_const_logic_0;
    }
}

void bn::thread_GAMMA_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
         !((esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IN_r_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, BETA_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, GAMMA_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, M_M_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, M_V_RVALID.read()))))) {
        GAMMA_RREADY = ap_const_logic_1;
    } else {
        GAMMA_RREADY = ap_const_logic_0;
    }
}

void bn::thread_GAMMA_blk_n_AR() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        GAMMA_blk_n_AR = m_axi_GAMMA_ARREADY.read();
    } else {
        GAMMA_blk_n_AR = ap_const_logic_1;
    }
}

void bn::thread_GAMMA_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0))) {
        GAMMA_blk_n_R = m_axi_GAMMA_RVALID.read();
    } else {
        GAMMA_blk_n_R = ap_const_logic_1;
    }
}

void bn::thread_IN_r_ARADDR() {
    IN_r_ARADDR =  (sc_lv<32>) (empty_31_fu_441_p1.read());
}

void bn::thread_IN_r_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_block_state2_io.read(), ap_const_boolean_0))) {
        IN_r_ARVALID = ap_const_logic_1;
    } else {
        IN_r_ARVALID = ap_const_logic_0;
    }
}

void bn::thread_IN_r_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
         !((esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IN_r_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, BETA_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, GAMMA_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, M_M_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, M_V_RVALID.read()))))) {
        IN_r_RREADY = ap_const_logic_1;
    } else {
        IN_r_RREADY = ap_const_logic_0;
    }
}

void bn::thread_IN_r_blk_n_AR() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        IN_r_blk_n_AR = m_axi_IN_r_ARREADY.read();
    } else {
        IN_r_blk_n_AR = ap_const_logic_1;
    }
}

void bn::thread_IN_r_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0))) {
        IN_r_blk_n_R = m_axi_IN_r_RVALID.read();
    } else {
        IN_r_blk_n_R = ap_const_logic_1;
    }
}

void bn::thread_Lo_assign_fu_489_p3() {
    Lo_assign_fu_489_p3 = esl_concat<2,4>(trunc_ln41_fu_485_p1.read(), ap_const_lv4_0);
}

void bn::thread_M_M_ARADDR() {
    M_M_ARADDR =  (sc_lv<32>) (empty_28_fu_411_p1.read());
}

void bn::thread_M_M_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_block_state2_io.read(), ap_const_boolean_0))) {
        M_M_ARVALID = ap_const_logic_1;
    } else {
        M_M_ARVALID = ap_const_logic_0;
    }
}

void bn::thread_M_M_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
         !((esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IN_r_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, BETA_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, GAMMA_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, M_M_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, M_V_RVALID.read()))))) {
        M_M_RREADY = ap_const_logic_1;
    } else {
        M_M_RREADY = ap_const_logic_0;
    }
}

void bn::thread_M_M_blk_n_AR() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        M_M_blk_n_AR = m_axi_M_M_ARREADY.read();
    } else {
        M_M_blk_n_AR = ap_const_logic_1;
    }
}

void bn::thread_M_M_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0))) {
        M_M_blk_n_R = m_axi_M_M_RVALID.read();
    } else {
        M_M_blk_n_R = ap_const_logic_1;
    }
}

void bn::thread_M_V_ARADDR() {
    M_V_ARADDR =  (sc_lv<32>) (empty_27_fu_401_p1.read());
}

void bn::thread_M_V_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_block_state2_io.read(), ap_const_boolean_0))) {
        M_V_ARVALID = ap_const_logic_1;
    } else {
        M_V_ARVALID = ap_const_logic_0;
    }
}

void bn::thread_M_V_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
         !((esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IN_r_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, BETA_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, GAMMA_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, M_M_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, M_V_RVALID.read()))))) {
        M_V_RREADY = ap_const_logic_1;
    } else {
        M_V_RREADY = ap_const_logic_0;
    }
}

void bn::thread_M_V_blk_n_AR() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        M_V_blk_n_AR = m_axi_M_V_ARREADY.read();
    } else {
        M_V_blk_n_AR = ap_const_logic_1;
    }
}

void bn::thread_M_V_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0))) {
        M_V_blk_n_R = m_axi_M_V_RVALID.read();
    } else {
        M_V_blk_n_R = ap_const_logic_1;
    }
}

void bn::thread_OUT_r_AWADDR() {
    OUT_r_AWADDR =  (sc_lv<32>) (empty_fu_451_p1.read());
}

void bn::thread_OUT_r_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(OUT_r_AWREADY.read(), ap_const_logic_1))) {
        OUT_r_AWVALID = ap_const_logic_1;
    } else {
        OUT_r_AWVALID = ap_const_logic_0;
    }
}

void bn::thread_OUT_r_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read()) && 
         esl_seteq<1,1,1>(OUT_r_BVALID.read(), ap_const_logic_1))) {
        OUT_r_BREADY = ap_const_logic_1;
    } else {
        OUT_r_BREADY = ap_const_logic_0;
    }
}

void bn::thread_OUT_r_WVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(icmp_ln40_fu_473_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0))) {
        OUT_r_WVALID = ap_const_logic_1;
    } else {
        OUT_r_WVALID = ap_const_logic_0;
    }
}

void bn::thread_OUT_r_blk_n_AW() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        OUT_r_blk_n_AW = m_axi_OUT_r_AWREADY.read();
    } else {
        OUT_r_blk_n_AW = ap_const_logic_1;
    }
}

void bn::thread_OUT_r_blk_n_B() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read())) {
        OUT_r_blk_n_B = m_axi_OUT_r_BVALID.read();
    } else {
        OUT_r_blk_n_B = ap_const_logic_1;
    }
}

void bn::thread_OUT_r_blk_n_W() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(icmp_ln40_fu_473_p2.read(), ap_const_lv1_1))) {
        OUT_r_blk_n_W = m_axi_OUT_r_WREADY.read();
    } else {
        OUT_r_blk_n_W = ap_const_logic_1;
    }
}

void bn::thread_Range1_all_ones_fu_1201_p2() {
    Range1_all_ones_fu_1201_p2 = (!tmp_7_fu_1191_p4.read().is_01() || !ap_const_lv18_3FFFF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_7_fu_1191_p4.read() == ap_const_lv18_3FFFF);
}

void bn::thread_Range1_all_zeros_fu_1207_p2() {
    Range1_all_zeros_fu_1207_p2 = (!tmp_7_fu_1191_p4.read().is_01() || !ap_const_lv18_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_7_fu_1191_p4.read() == ap_const_lv18_0);
}

void bn::thread_Range2_all_ones_fu_1185_p2() {
    Range2_all_ones_fu_1185_p2 = (!tmp_fu_1175_p4.read().is_01() || !ap_const_lv17_1FFFF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_1175_p4.read() == ap_const_lv17_1FFFF);
}

void bn::thread_and_ln414_1_fu_1438_p2() {
    and_ln414_1_fu_1438_p2 = (p_Val2_s_fu_190.read() & xor_ln414_2_fu_1432_p2.read());
}

void bn::thread_and_ln414_2_fu_1444_p2() {
    and_ln414_2_fu_1444_p2 = (select_ln414_3_fu_1406_p3.read() & and_ln414_fu_1426_p2.read());
}

void bn::thread_and_ln414_fu_1426_p2() {
    and_ln414_fu_1426_p2 = (shl_ln414_1_fu_1414_p2.read() & lshr_ln414_fu_1420_p2.read());
}

void bn::thread_and_ln779_fu_1227_p2() {
    and_ln779_fu_1227_p2 = (Range2_all_ones_fu_1185_p2.read() & xor_ln779_fu_1221_p2.read());
}

void bn::thread_and_ln781_fu_1252_p2() {
    and_ln781_fu_1252_p2 = (carry_1_reg_1704.read() & Range1_all_ones_reg_1715.read());
}

void bn::thread_and_ln786_fu_1241_p2() {
    and_ln786_fu_1241_p2 = (p_Result_24_fu_1167_p3.read() & deleted_ones_fu_1233_p3.read());
}

void bn::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void bn::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void bn::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void bn::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void bn::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void bn::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void bn::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void bn::thread_ap_CS_fsm_state68() {
    ap_CS_fsm_state68 = ap_CS_fsm.read()[67];
}

void bn::thread_ap_CS_fsm_state69() {
    ap_CS_fsm_state69 = ap_CS_fsm.read()[68];
}

void bn::thread_ap_CS_fsm_state70() {
    ap_CS_fsm_state70 = ap_CS_fsm.read()[69];
}

void bn::thread_ap_CS_fsm_state74() {
    ap_CS_fsm_state74 = ap_CS_fsm.read()[73];
}

void bn::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void bn::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void bn::thread_ap_block_state10_io() {
    ap_block_state10_io = (esl_seteq<1,1,1>(icmp_ln40_fu_473_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_WREADY.read()));
}

void bn::thread_ap_block_state2_io() {
    ap_block_state2_io = (esl_seteq<1,1,1>(ap_const_logic_0, IN_r_ARREADY.read()) || esl_seteq<1,1,1>(ap_const_logic_0, BETA_ARREADY.read()) || esl_seteq<1,1,1>(ap_const_logic_0, GAMMA_ARREADY.read()) || esl_seteq<1,1,1>(ap_const_logic_0, M_M_ARREADY.read()) || esl_seteq<1,1,1>(ap_const_logic_0, M_V_ARREADY.read()));
}

void bn::thread_ap_block_state9() {
    ap_block_state9 = ((esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IN_r_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, BETA_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, GAMMA_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, M_M_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, M_V_RVALID.read())));
}

void bn::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read()) && 
         esl_seteq<1,1,1>(OUT_r_BVALID.read(), ap_const_logic_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void bn::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void bn::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read()) && 
         esl_seteq<1,1,1>(OUT_r_BVALID.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void bn::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void bn::thread_carry_1_fu_1161_p2() {
    carry_1_fu_1161_p2 = (p_Result_23_fu_1121_p3.read() & xor_ln416_fu_1155_p2.read());
}

void bn::thread_deleted_ones_fu_1233_p3() {
    deleted_ones_fu_1233_p3 = (!carry_1_fu_1161_p2.read()[0].is_01())? sc_lv<1>(): ((carry_1_fu_1161_p2.read()[0].to_bool())? and_ln779_fu_1227_p2.read(): Range1_all_ones_fu_1201_p2.read());
}

void bn::thread_deleted_zeros_fu_1247_p3() {
    deleted_zeros_fu_1247_p3 = (!carry_1_reg_1704.read()[0].is_01())? sc_lv<1>(): ((carry_1_reg_1704.read()[0].to_bool())? Range1_all_ones_reg_1715.read(): Range1_all_zeros_reg_1721.read());
}

void bn::thread_empty_27_fu_401_p1() {
    empty_27_fu_401_p1 = esl_zext<64,29>(moving_variance_V9_reg_1482.read());
}

void bn::thread_empty_28_fu_411_p1() {
    empty_28_fu_411_p1 = esl_zext<64,29>(moving_mean_V7_reg_1487.read());
}

void bn::thread_empty_29_fu_421_p1() {
    empty_29_fu_421_p1 = esl_zext<64,29>(gamma_V5_reg_1492.read());
}

void bn::thread_empty_30_fu_431_p1() {
    empty_30_fu_431_p1 = esl_zext<64,29>(beta_V3_reg_1497.read());
}

void bn::thread_empty_31_fu_441_p1() {
    empty_31_fu_441_p1 = esl_zext<64,29>(in_V1_reg_1502.read());
}

void bn::thread_empty_fu_451_p1() {
    empty_fu_451_p1 = esl_zext<64,29>(out_V1_reg_1477.read());
}

void bn::thread_gamma_m_3_V_fu_862_p1() {
    gamma_m_3_V_fu_862_p1 = p_Result_17_fu_856_p2.read().range(16-1, 0);
}

void bn::thread_grp_fu_1097_ap_start() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        grp_fu_1097_ap_start = ap_const_logic_1;
    } else {
        grp_fu_1097_ap_start = ap_const_logic_0;
    }
}

void bn::thread_grp_fu_1097_p0() {
    grp_fu_1097_p0 = esl_sext<44,43>(tmp_s_fu_1083_p3.read());
}

void bn::thread_grp_fu_1097_p1() {
    grp_fu_1097_p1 =  (sc_lv<14>) (grp_fu_1097_p10.read());
}

void bn::thread_grp_fu_1097_p10() {
    grp_fu_1097_p10 = esl_zext<44,13>(x_sqrt_V_reg_1677.read());
}

void bn::thread_grp_fu_333_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
        grp_fu_333_p0 = Lo_assign_reg_1589.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_fu_333_p0 = Lo_assign_fu_489_p3.read();
    } else {
        grp_fu_333_p0 = "XXXXXX";
    }
}

void bn::thread_grp_fu_333_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
        grp_fu_333_p1 = or_ln41_reg_1599.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_fu_333_p1 = or_ln41_fu_498_p2.read();
    } else {
        grp_fu_333_p1 = "XXXXXX";
    }
}

void bn::thread_grp_fu_333_p2() {
    grp_fu_333_p2 = (!grp_fu_333_p0.read().is_01() || !grp_fu_333_p1.read().is_01())? sc_lv<1>(): (sc_biguint<6>(grp_fu_333_p0.read()) > sc_biguint<6>(grp_fu_333_p1.read()));
}

void bn::thread_i_fu_467_p2() {
    i_fu_467_p2 = (!i_0_reg_306.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_0_reg_306.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void bn::thread_icmp_ln33_fu_461_p2() {
    icmp_ln33_fu_461_p2 = (!i_0_reg_306.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_306.read() == ap_const_lv6_20);
}

void bn::thread_icmp_ln40_fu_473_p2() {
    icmp_ln40_fu_473_p2 = (!k_0_reg_317.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(k_0_reg_317.read() == ap_const_lv3_4);
}

void bn::thread_icmp_ln647_1_fu_505_p2() {
    icmp_ln647_1_fu_505_p2 = (!Lo_assign_fu_489_p3.read().is_01() || !or_ln41_fu_498_p2.read().is_01())? sc_lv<1>(): (sc_biguint<6>(Lo_assign_fu_489_p3.read()) > sc_biguint<6>(or_ln41_fu_498_p2.read()));
}

void bn::thread_icmp_ln647_2_fu_511_p2() {
    icmp_ln647_2_fu_511_p2 = (!Lo_assign_fu_489_p3.read().is_01() || !or_ln41_fu_498_p2.read().is_01())? sc_lv<1>(): (sc_biguint<6>(Lo_assign_fu_489_p3.read()) > sc_biguint<6>(or_ln41_fu_498_p2.read()));
}

void bn::thread_icmp_ln647_3_fu_517_p2() {
    icmp_ln647_3_fu_517_p2 = (!Lo_assign_fu_489_p3.read().is_01() || !or_ln41_fu_498_p2.read().is_01())? sc_lv<1>(): (sc_biguint<6>(Lo_assign_fu_489_p3.read()) > sc_biguint<6>(or_ln41_fu_498_p2.read()));
}

void bn::thread_icmp_ln647_4_fu_523_p2() {
    icmp_ln647_4_fu_523_p2 = (!Lo_assign_fu_489_p3.read().is_01() || !or_ln41_fu_498_p2.read().is_01())? sc_lv<1>(): (sc_biguint<6>(Lo_assign_fu_489_p3.read()) > sc_biguint<6>(or_ln41_fu_498_p2.read()));
}

void bn::thread_in_m_3_V_fu_688_p1() {
    in_m_3_V_fu_688_p1 = p_Result_s_fu_682_p2.read().range(16-1, 0);
}

void bn::thread_k_fu_479_p2() {
    k_fu_479_p2 = (!k_0_reg_317.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(k_0_reg_317.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void bn::thread_lhs_V_fu_973_p1() {
    lhs_V_fu_973_p1 = esl_sext<17,16>(moving_variance_m_3_fu_969_p1.read());
}

void bn::thread_lshr_ln414_fu_1420_p2() {
    lshr_ln414_fu_1420_p2 = (!zext_ln414_4_fu_1386_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_FFFFFFFFFFFFFFFF >> (unsigned short)zext_ln414_4_fu_1386_p1.read().to_uint();
}

void bn::thread_lshr_ln647_1_fu_676_p2() {
    lshr_ln647_1_fu_676_p2 = (!zext_ln647_3_fu_666_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_FFFFFFFFFFFFFFFF >> (unsigned short)zext_ln647_3_fu_666_p1.read().to_uint();
}

void bn::thread_lshr_ln647_2_fu_759_p2() {
    lshr_ln647_2_fu_759_p2 = (!zext_ln647_6_fu_751_p1.read().is_01())? sc_lv<64>(): select_ln647_4_fu_732_p3.read() >> (unsigned short)zext_ln647_6_fu_751_p1.read().to_uint();
}

void bn::thread_lshr_ln647_3_fu_765_p2() {
    lshr_ln647_3_fu_765_p2 = (!zext_ln647_7_fu_755_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_FFFFFFFFFFFFFFFF >> (unsigned short)zext_ln647_7_fu_755_p1.read().to_uint();
}

void bn::thread_lshr_ln647_4_fu_844_p2() {
    lshr_ln647_4_fu_844_p2 = (!zext_ln647_10_fu_836_p1.read().is_01())? sc_lv<64>(): select_ln647_7_fu_817_p3.read() >> (unsigned short)zext_ln647_10_fu_836_p1.read().to_uint();
}

void bn::thread_lshr_ln647_5_fu_850_p2() {
    lshr_ln647_5_fu_850_p2 = (!zext_ln647_11_fu_840_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_FFFFFFFFFFFFFFFF >> (unsigned short)zext_ln647_11_fu_840_p1.read().to_uint();
}

void bn::thread_lshr_ln647_6_fu_933_p2() {
    lshr_ln647_6_fu_933_p2 = (!zext_ln647_14_fu_925_p1.read().is_01())? sc_lv<64>(): select_ln647_10_fu_906_p3.read() >> (unsigned short)zext_ln647_14_fu_925_p1.read().to_uint();
}

void bn::thread_lshr_ln647_7_fu_939_p2() {
    lshr_ln647_7_fu_939_p2 = (!zext_ln647_15_fu_929_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_FFFFFFFFFFFFFFFF >> (unsigned short)zext_ln647_15_fu_929_p1.read().to_uint();
}

void bn::thread_lshr_ln647_8_fu_597_p2() {
    lshr_ln647_8_fu_597_p2 = (!zext_ln647_18_fu_593_p1.read().is_01())? sc_lv<64>(): select_ln647_13_fu_572_p3.read() >> (unsigned short)zext_ln647_18_fu_593_p1.read().to_uint();
}

void bn::thread_lshr_ln647_9_fu_958_p2() {
    lshr_ln647_9_fu_958_p2 = (!zext_ln647_19_fu_955_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_FFFFFFFFFFFFFFFF >> (unsigned short)zext_ln647_19_fu_955_p1.read().to_uint();
}

void bn::thread_lshr_ln647_fu_670_p2() {
    lshr_ln647_fu_670_p2 = (!zext_ln647_2_fu_662_p1.read().is_01())? sc_lv<64>(): select_ln647_1_fu_643_p3.read() >> (unsigned short)zext_ln647_2_fu_662_p1.read().to_uint();
}

void bn::thread_moving_mean_m_3_V_fu_951_p1() {
    moving_mean_m_3_V_fu_951_p1 = p_Result_18_fu_945_p2.read().range(16-1, 0);
}

void bn::thread_moving_variance_m_3_fu_969_p1() {
    moving_variance_m_3_fu_969_p1 = p_Result_19_fu_964_p2.read().range(16-1, 0);
}

void bn::thread_or_ln340_1_fu_1294_p2() {
    or_ln340_1_fu_1294_p2 = (underflow_1_fu_1289_p2.read() | overflow_fu_1272_p2.read());
}

void bn::thread_or_ln340_2_fu_1305_p2() {
    or_ln340_2_fu_1305_p2 = (or_ln340_3_fu_1300_p2.read() | and_ln781_fu_1252_p2.read());
}

void bn::thread_or_ln340_3_fu_1300_p2() {
    or_ln340_3_fu_1300_p2 = (and_ln786_reg_1726.read() | xor_ln785_1_fu_1267_p2.read());
}

void bn::thread_or_ln340_fu_1029_p2() {
    or_ln340_fu_1029_p2 = (p_Result_21_fu_997_p3.read() | xor_ln340_1_fu_1023_p2.read());
}

void bn::thread_or_ln41_fu_498_p2() {
    or_ln41_fu_498_p2 = (Lo_assign_fu_489_p3.read() | ap_const_lv6_F);
}

void bn::thread_or_ln785_fu_1262_p2() {
    or_ln785_fu_1262_p2 = (p_Result_24_reg_1710.read() | xor_ln785_fu_1256_p2.read());
}

void bn::thread_or_ln786_fu_1278_p2() {
    or_ln786_fu_1278_p2 = (and_ln781_fu_1252_p2.read() | and_ln786_reg_1726.read());
}

void bn::thread_overflow_fu_1272_p2() {
    overflow_fu_1272_p2 = (or_ln785_fu_1262_p2.read() & xor_ln785_1_fu_1267_p2.read());
}

void bn::thread_p_Result_16_fu_771_p2() {
    p_Result_16_fu_771_p2 = (lshr_ln647_2_fu_759_p2.read() & lshr_ln647_3_fu_765_p2.read());
}

void bn::thread_p_Result_17_fu_856_p2() {
    p_Result_17_fu_856_p2 = (lshr_ln647_4_fu_844_p2.read() & lshr_ln647_5_fu_850_p2.read());
}

void bn::thread_p_Result_18_fu_945_p2() {
    p_Result_18_fu_945_p2 = (lshr_ln647_6_fu_933_p2.read() & lshr_ln647_7_fu_939_p2.read());
}

void bn::thread_p_Result_19_fu_964_p2() {
    p_Result_19_fu_964_p2 = (lshr_ln647_8_reg_1642.read() & lshr_ln647_9_fu_958_p2.read());
}

void bn::thread_p_Result_20_fu_983_p3() {
    p_Result_20_fu_983_p3 = ret_V_10_fu_977_p2.read().range(16, 16);
}

void bn::thread_p_Result_21_fu_997_p3() {
    p_Result_21_fu_997_p3 = tmp_num_V_fu_991_p2.read().range(15, 15);
}

void bn::thread_p_Result_23_fu_1121_p3() {
    p_Result_23_fu_1121_p3 = grp_fu_1097_p2.read().range(25, 25);
}

void bn::thread_p_Result_24_fu_1167_p3() {
    p_Result_24_fu_1167_p3 = tmp_V_7_fu_1141_p2.read().range(15, 15);
}

void bn::thread_p_Result_25_fu_1450_p2() {
    p_Result_25_fu_1450_p2 = (and_ln414_1_fu_1438_p2.read() | and_ln414_2_fu_1444_p2.read());
}

void bn::thread_p_Result_s_fu_682_p2() {
    p_Result_s_fu_682_p2 = (lshr_ln647_fu_670_p2.read() & lshr_ln647_1_fu_676_p2.read());
}

void bn::thread_p_Val2_21_fu_1325_p3() {
    p_Val2_21_fu_1325_p3 = (!or_ln340_2_fu_1305_p2.read()[0].is_01())? sc_lv<16>(): ((or_ln340_2_fu_1305_p2.read()[0].to_bool())? select_ln340_fu_1311_p3.read(): select_ln388_fu_1318_p3.read());
}

void bn::thread_ret_V_10_fu_977_p2() {
    ret_V_10_fu_977_p2 = (!ap_const_lv17_1.is_01() || !lhs_V_fu_973_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(ap_const_lv17_1) + sc_bigint<17>(lhs_V_fu_973_p1.read()));
}

void bn::thread_rhs_V_1_fu_1072_p3() {
    rhs_V_1_fu_1072_p3 = esl_concat<16,10>(trunc_ln728_reg_1667.read(), ap_const_lv10_0);
}

void bn::thread_select_ln340_1_fu_1035_p3() {
    select_ln340_1_fu_1035_p3 = (!xor_ln340_fu_1017_p2.read()[0].is_01())? sc_lv<16>(): ((xor_ln340_fu_1017_p2.read()[0].to_bool())? ap_const_lv16_7FFF: tmp_num_V_fu_991_p2.read());
}

void bn::thread_select_ln340_fu_1311_p3() {
    select_ln340_fu_1311_p3 = (!or_ln340_1_fu_1294_p2.read()[0].is_01())? sc_lv<16>(): ((or_ln340_1_fu_1294_p2.read()[0].to_bool())? ap_const_lv16_7FFF: tmp_V_7_reg_1698.read());
}

void bn::thread_select_ln388_1_fu_1043_p3() {
    select_ln388_1_fu_1043_p3 = (!underflow_fu_1011_p2.read()[0].is_01())? sc_lv<16>(): ((underflow_fu_1011_p2.read()[0].to_bool())? ap_const_lv16_8000: tmp_num_V_fu_991_p2.read());
}

void bn::thread_select_ln388_fu_1318_p3() {
    select_ln388_fu_1318_p3 = (!underflow_1_fu_1289_p2.read()[0].is_01())? sc_lv<16>(): ((underflow_1_fu_1289_p2.read()[0].to_bool())? ap_const_lv16_8000: tmp_V_7_reg_1698.read());
}

void bn::thread_select_ln414_1_fu_1356_p3() {
    select_ln414_1_fu_1356_p3 = (!grp_fu_333_p2.read()[0].is_01())? sc_lv<7>(): ((grp_fu_333_p2.read()[0].to_bool())? zext_ln414_1_fu_1339_p1.read(): zext_ln414_fu_1336_p1.read());
}

void bn::thread_select_ln414_2_fu_1364_p3() {
    select_ln414_2_fu_1364_p3 = (!grp_fu_333_p2.read()[0].is_01())? sc_lv<7>(): ((grp_fu_333_p2.read()[0].to_bool())? xor_ln414_fu_1342_p2.read(): zext_ln414_fu_1336_p1.read());
}

void bn::thread_select_ln414_3_fu_1406_p3() {
    select_ln414_3_fu_1406_p3 = (!grp_fu_333_p2.read()[0].is_01())? sc_lv<64>(): ((grp_fu_333_p2.read()[0].to_bool())? tmp_44_fu_1396_p4.read(): shl_ln414_fu_1390_p2.read());
}

void bn::thread_select_ln414_fu_1348_p3() {
    select_ln414_fu_1348_p3 = (!grp_fu_333_p2.read()[0].is_01())? sc_lv<7>(): ((grp_fu_333_p2.read()[0].to_bool())? zext_ln414_fu_1336_p1.read(): zext_ln414_1_fu_1339_p1.read());
}

void bn::thread_select_ln647_10_fu_906_p3() {
    select_ln647_10_fu_906_p3 = (!icmp_ln647_3_reg_1630.read()[0].is_01())? sc_lv<64>(): ((icmp_ln647_3_reg_1630.read()[0].to_bool())? tmp_34_fu_872_p4.read(): moving_mean_pack_V_reg_1569.read());
}

void bn::thread_select_ln647_11_fu_912_p3() {
    select_ln647_11_fu_912_p3 = (!icmp_ln647_3_reg_1630.read()[0].is_01())? sc_lv<7>(): ((icmp_ln647_3_reg_1630.read()[0].to_bool())? xor_ln647_3_fu_887_p2.read(): zext_ln647_12_fu_866_p1.read());
}

void bn::thread_select_ln647_12_fu_564_p3() {
    select_ln647_12_fu_564_p3 = (!icmp_ln647_4_fu_523_p2.read()[0].is_01())? sc_lv<7>(): ((icmp_ln647_4_fu_523_p2.read()[0].to_bool())? sub_ln647_12_fu_546_p2.read(): sub_ln647_13_fu_558_p2.read());
}

void bn::thread_select_ln647_13_fu_572_p3() {
    select_ln647_13_fu_572_p3 = (!icmp_ln647_4_fu_523_p2.read()[0].is_01())? sc_lv<64>(): ((icmp_ln647_4_fu_523_p2.read()[0].to_bool())? tmp_35_fu_537_p4.read(): moving_variance_pack_reg_1575.read());
}

void bn::thread_select_ln647_14_fu_579_p3() {
    select_ln647_14_fu_579_p3 = (!icmp_ln647_4_fu_523_p2.read()[0].is_01())? sc_lv<7>(): ((icmp_ln647_4_fu_523_p2.read()[0].to_bool())? xor_ln647_4_fu_552_p2.read(): zext_ln647_16_fu_529_p1.read());
}

void bn::thread_select_ln647_1_fu_643_p3() {
    select_ln647_1_fu_643_p3 = (!icmp_ln647_reg_1609.read()[0].is_01())? sc_lv<64>(): ((icmp_ln647_reg_1609.read()[0].to_bool())? tmp_31_fu_609_p4.read(): in_pack_V_reg_1551.read());
}

void bn::thread_select_ln647_2_fu_649_p3() {
    select_ln647_2_fu_649_p3 = (!icmp_ln647_reg_1609.read()[0].is_01())? sc_lv<7>(): ((icmp_ln647_reg_1609.read()[0].to_bool())? xor_ln647_fu_624_p2.read(): zext_ln647_fu_603_p1.read());
}

void bn::thread_select_ln647_3_fu_725_p3() {
    select_ln647_3_fu_725_p3 = (!icmp_ln647_1_reg_1616.read()[0].is_01())? sc_lv<7>(): ((icmp_ln647_1_reg_1616.read()[0].to_bool())? sub_ln647_3_fu_707_p2.read(): sub_ln647_4_fu_719_p2.read());
}

void bn::thread_select_ln647_4_fu_732_p3() {
    select_ln647_4_fu_732_p3 = (!icmp_ln647_1_reg_1616.read()[0].is_01())? sc_lv<64>(): ((icmp_ln647_1_reg_1616.read()[0].to_bool())? tmp_32_fu_698_p4.read(): beta_pack_V_reg_1557.read());
}

void bn::thread_select_ln647_5_fu_738_p3() {
    select_ln647_5_fu_738_p3 = (!icmp_ln647_1_reg_1616.read()[0].is_01())? sc_lv<7>(): ((icmp_ln647_1_reg_1616.read()[0].to_bool())? xor_ln647_1_fu_713_p2.read(): zext_ln647_4_fu_692_p1.read());
}

void bn::thread_select_ln647_6_fu_810_p3() {
    select_ln647_6_fu_810_p3 = (!icmp_ln647_2_reg_1623.read()[0].is_01())? sc_lv<7>(): ((icmp_ln647_2_reg_1623.read()[0].to_bool())? sub_ln647_6_fu_792_p2.read(): sub_ln647_7_fu_804_p2.read());
}

void bn::thread_select_ln647_7_fu_817_p3() {
    select_ln647_7_fu_817_p3 = (!icmp_ln647_2_reg_1623.read()[0].is_01())? sc_lv<64>(): ((icmp_ln647_2_reg_1623.read()[0].to_bool())? tmp_33_fu_783_p4.read(): gamma_pack_V_reg_1563.read());
}

void bn::thread_select_ln647_8_fu_823_p3() {
    select_ln647_8_fu_823_p3 = (!icmp_ln647_2_reg_1623.read()[0].is_01())? sc_lv<7>(): ((icmp_ln647_2_reg_1623.read()[0].to_bool())? xor_ln647_2_fu_798_p2.read(): zext_ln647_8_fu_777_p1.read());
}

void bn::thread_select_ln647_9_fu_899_p3() {
    select_ln647_9_fu_899_p3 = (!icmp_ln647_3_reg_1630.read()[0].is_01())? sc_lv<7>(): ((icmp_ln647_3_reg_1630.read()[0].to_bool())? sub_ln647_9_fu_881_p2.read(): sub_ln647_10_fu_893_p2.read());
}

void bn::thread_select_ln647_fu_636_p3() {
    select_ln647_fu_636_p3 = (!icmp_ln647_reg_1609.read()[0].is_01())? sc_lv<7>(): ((icmp_ln647_reg_1609.read()[0].to_bool())? sub_ln647_fu_618_p2.read(): sub_ln647_1_fu_630_p2.read());
}

void bn::thread_shl_ln414_1_fu_1414_p2() {
    shl_ln414_1_fu_1414_p2 = (!zext_ln414_3_fu_1382_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_FFFFFFFFFFFFFFFF << (unsigned short)zext_ln414_3_fu_1382_p1.read().to_uint();
}

void bn::thread_shl_ln414_fu_1390_p2() {
    shl_ln414_fu_1390_p2 = (!zext_ln414_2_fu_1378_p1.read().is_01())? sc_lv<64>(): tmp_V_8_fu_1333_p1.read() << (unsigned short)zext_ln414_2_fu_1378_p1.read().to_uint();
}

void bn::thread_sub_ln647_10_fu_893_p2() {
    sub_ln647_10_fu_893_p2 = (!zext_ln647_13_fu_869_p1.read().is_01() || !zext_ln647_12_fu_866_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(zext_ln647_13_fu_869_p1.read()) - sc_biguint<7>(zext_ln647_12_fu_866_p1.read()));
}

void bn::thread_sub_ln647_11_fu_919_p2() {
    sub_ln647_11_fu_919_p2 = (!ap_const_lv7_3F.is_01() || !select_ln647_9_fu_899_p3.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_3F) - sc_biguint<7>(select_ln647_9_fu_899_p3.read()));
}

void bn::thread_sub_ln647_12_fu_546_p2() {
    sub_ln647_12_fu_546_p2 = (!zext_ln647_16_fu_529_p1.read().is_01() || !zext_ln647_17_fu_533_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(zext_ln647_16_fu_529_p1.read()) - sc_biguint<7>(zext_ln647_17_fu_533_p1.read()));
}

void bn::thread_sub_ln647_13_fu_558_p2() {
    sub_ln647_13_fu_558_p2 = (!zext_ln647_17_fu_533_p1.read().is_01() || !zext_ln647_16_fu_529_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(zext_ln647_17_fu_533_p1.read()) - sc_biguint<7>(zext_ln647_16_fu_529_p1.read()));
}

void bn::thread_sub_ln647_14_fu_587_p2() {
    sub_ln647_14_fu_587_p2 = (!ap_const_lv7_3F.is_01() || !select_ln647_12_fu_564_p3.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_3F) - sc_biguint<7>(select_ln647_12_fu_564_p3.read()));
}

void bn::thread_sub_ln647_1_fu_630_p2() {
    sub_ln647_1_fu_630_p2 = (!zext_ln647_1_fu_606_p1.read().is_01() || !zext_ln647_fu_603_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(zext_ln647_1_fu_606_p1.read()) - sc_biguint<7>(zext_ln647_fu_603_p1.read()));
}

void bn::thread_sub_ln647_2_fu_656_p2() {
    sub_ln647_2_fu_656_p2 = (!ap_const_lv7_3F.is_01() || !select_ln647_fu_636_p3.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_3F) - sc_biguint<7>(select_ln647_fu_636_p3.read()));
}

void bn::thread_sub_ln647_3_fu_707_p2() {
    sub_ln647_3_fu_707_p2 = (!zext_ln647_4_fu_692_p1.read().is_01() || !zext_ln647_5_fu_695_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(zext_ln647_4_fu_692_p1.read()) - sc_biguint<7>(zext_ln647_5_fu_695_p1.read()));
}

void bn::thread_sub_ln647_4_fu_719_p2() {
    sub_ln647_4_fu_719_p2 = (!zext_ln647_5_fu_695_p1.read().is_01() || !zext_ln647_4_fu_692_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(zext_ln647_5_fu_695_p1.read()) - sc_biguint<7>(zext_ln647_4_fu_692_p1.read()));
}

void bn::thread_sub_ln647_5_fu_745_p2() {
    sub_ln647_5_fu_745_p2 = (!ap_const_lv7_3F.is_01() || !select_ln647_3_fu_725_p3.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_3F) - sc_biguint<7>(select_ln647_3_fu_725_p3.read()));
}

void bn::thread_sub_ln647_6_fu_792_p2() {
    sub_ln647_6_fu_792_p2 = (!zext_ln647_8_fu_777_p1.read().is_01() || !zext_ln647_9_fu_780_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(zext_ln647_8_fu_777_p1.read()) - sc_biguint<7>(zext_ln647_9_fu_780_p1.read()));
}

void bn::thread_sub_ln647_7_fu_804_p2() {
    sub_ln647_7_fu_804_p2 = (!zext_ln647_9_fu_780_p1.read().is_01() || !zext_ln647_8_fu_777_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(zext_ln647_9_fu_780_p1.read()) - sc_biguint<7>(zext_ln647_8_fu_777_p1.read()));
}

void bn::thread_sub_ln647_8_fu_830_p2() {
    sub_ln647_8_fu_830_p2 = (!ap_const_lv7_3F.is_01() || !select_ln647_6_fu_810_p3.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_3F) - sc_biguint<7>(select_ln647_6_fu_810_p3.read()));
}

void bn::thread_sub_ln647_9_fu_881_p2() {
    sub_ln647_9_fu_881_p2 = (!zext_ln647_12_fu_866_p1.read().is_01() || !zext_ln647_13_fu_869_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(zext_ln647_12_fu_866_p1.read()) - sc_biguint<7>(zext_ln647_13_fu_869_p1.read()));
}

void bn::thread_sub_ln647_fu_618_p2() {
    sub_ln647_fu_618_p2 = (!zext_ln647_fu_603_p1.read().is_01() || !zext_ln647_1_fu_606_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(zext_ln647_fu_603_p1.read()) - sc_biguint<7>(zext_ln647_1_fu_606_p1.read()));
}

void bn::thread_tmp_31_fu_609_p4() {
    tmp_31_fu_609_p4 = in_pack_V_reg_1551.read().range(0, 63);
}

void bn::thread_tmp_32_fu_698_p4() {
    tmp_32_fu_698_p4 = beta_pack_V_reg_1557.read().range(0, 63);
}

void bn::thread_tmp_33_fu_783_p4() {
    tmp_33_fu_783_p4 = gamma_pack_V_reg_1563.read().range(0, 63);
}

void bn::thread_tmp_34_fu_872_p4() {
    tmp_34_fu_872_p4 = moving_mean_pack_V_reg_1569.read().range(0, 63);
}

void bn::thread_tmp_35_fu_537_p4() {
    tmp_35_fu_537_p4 = moving_variance_pack_reg_1575.read().range(0, 63);
}

void bn::thread_tmp_40_fu_1129_p3() {
    tmp_40_fu_1129_p3 = grp_fu_1097_p2.read().range(9, 9);
}

void bn::thread_tmp_41_fu_1147_p3() {
    tmp_41_fu_1147_p3 = tmp_V_7_fu_1141_p2.read().range(15, 15);
}

void bn::thread_tmp_43_fu_1213_p3() {
    tmp_43_fu_1213_p3 = grp_fu_1097_p2.read().range(26, 26);
}

void bn::thread_tmp_44_fu_1396_p4() {
    tmp_44_fu_1396_p4 = shl_ln414_fu_1390_p2.read().range(0, 63);
}

void bn::thread_tmp_7_fu_1191_p4() {
    tmp_7_fu_1191_p4 = grp_fu_1097_p2.read().range(43, 26);
}

void bn::thread_tmp_V_7_fu_1141_p2() {
    tmp_V_7_fu_1141_p2 = (!tmp_V_fu_1111_p4.read().is_01() || !zext_ln415_fu_1137_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp_V_fu_1111_p4.read()) + sc_biguint<16>(zext_ln415_fu_1137_p1.read()));
}

void bn::thread_tmp_V_8_fu_1333_p1() {
    tmp_V_8_fu_1333_p1 = esl_zext<64,16>(p_Val2_21_reg_1732.read());
}

void bn::thread_tmp_V_fu_1111_p4() {
    tmp_V_fu_1111_p4 = grp_fu_1097_p2.read().range(25, 10);
}

void bn::thread_tmp_fu_1175_p4() {
    tmp_fu_1175_p4 = grp_fu_1097_p2.read().range(43, 27);
}

void bn::thread_tmp_num_V_fu_991_p2() {
    tmp_num_V_fu_991_p2 = (!ap_const_lv16_1.is_01() || !moving_variance_m_3_fu_969_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_1) + sc_bigint<16>(moving_variance_m_3_fu_969_p1.read()));
}

void bn::thread_tmp_s_fu_1083_p3() {
    tmp_s_fu_1083_p3 = esl_concat<33,10>(ret_V_11_reg_1672.read(), ap_const_lv10_0);
}

void bn::thread_trunc_ln41_fu_485_p1() {
    trunc_ln41_fu_485_p1 = k_0_reg_317.read().range(2-1, 0);
}

void bn::thread_trunc_ln728_fu_1059_p1() {
    trunc_ln728_fu_1059_p1 = p_Result_16_fu_771_p2.read().range(16-1, 0);
}

void bn::thread_underflow_1_fu_1289_p2() {
    underflow_1_fu_1289_p2 = (p_Result_22_reg_1692.read() & xor_ln786_1_fu_1283_p2.read());
}

void bn::thread_underflow_fu_1011_p2() {
    underflow_fu_1011_p2 = (p_Result_20_fu_983_p3.read() & xor_ln786_fu_1005_p2.read());
}

void bn::thread_x_V_fu_1051_p3() {
    x_V_fu_1051_p3 = (!or_ln340_fu_1029_p2.read()[0].is_01())? sc_lv<16>(): ((or_ln340_fu_1029_p2.read()[0].to_bool())? select_ln340_1_fu_1035_p3.read(): select_ln388_1_fu_1043_p3.read());
}

void bn::thread_xor_ln340_1_fu_1023_p2() {
    xor_ln340_1_fu_1023_p2 = (p_Result_20_fu_983_p3.read() ^ ap_const_lv1_1);
}

void bn::thread_xor_ln340_fu_1017_p2() {
    xor_ln340_fu_1017_p2 = (p_Result_20_fu_983_p3.read() ^ p_Result_21_fu_997_p3.read());
}

void bn::thread_xor_ln414_1_fu_1372_p2() {
    xor_ln414_1_fu_1372_p2 = (select_ln414_fu_1348_p3.read() ^ ap_const_lv7_3F);
}

void bn::thread_xor_ln414_2_fu_1432_p2() {
    xor_ln414_2_fu_1432_p2 = (and_ln414_fu_1426_p2.read() ^ ap_const_lv64_FFFFFFFFFFFFFFFF);
}

void bn::thread_xor_ln414_fu_1342_p2() {
    xor_ln414_fu_1342_p2 = (zext_ln414_fu_1336_p1.read() ^ ap_const_lv7_3F);
}

void bn::thread_xor_ln416_fu_1155_p2() {
    xor_ln416_fu_1155_p2 = (tmp_41_fu_1147_p3.read() ^ ap_const_lv1_1);
}

void bn::thread_xor_ln647_1_fu_713_p2() {
    xor_ln647_1_fu_713_p2 = (zext_ln647_4_fu_692_p1.read() ^ ap_const_lv7_3F);
}

void bn::thread_xor_ln647_2_fu_798_p2() {
    xor_ln647_2_fu_798_p2 = (zext_ln647_8_fu_777_p1.read() ^ ap_const_lv7_3F);
}

void bn::thread_xor_ln647_3_fu_887_p2() {
    xor_ln647_3_fu_887_p2 = (zext_ln647_12_fu_866_p1.read() ^ ap_const_lv7_3F);
}

void bn::thread_xor_ln647_4_fu_552_p2() {
    xor_ln647_4_fu_552_p2 = (zext_ln647_16_fu_529_p1.read() ^ ap_const_lv7_3F);
}

void bn::thread_xor_ln647_fu_624_p2() {
    xor_ln647_fu_624_p2 = (zext_ln647_fu_603_p1.read() ^ ap_const_lv7_3F);
}

void bn::thread_xor_ln779_fu_1221_p2() {
    xor_ln779_fu_1221_p2 = (tmp_43_fu_1213_p3.read() ^ ap_const_lv1_1);
}

void bn::thread_xor_ln785_1_fu_1267_p2() {
    xor_ln785_1_fu_1267_p2 = (p_Result_22_reg_1692.read() ^ ap_const_lv1_1);
}

void bn::thread_xor_ln785_fu_1256_p2() {
    xor_ln785_fu_1256_p2 = (deleted_zeros_fu_1247_p3.read() ^ ap_const_lv1_1);
}

void bn::thread_xor_ln786_1_fu_1283_p2() {
    xor_ln786_1_fu_1283_p2 = (or_ln786_fu_1278_p2.read() ^ ap_const_lv1_1);
}

void bn::thread_xor_ln786_fu_1005_p2() {
    xor_ln786_fu_1005_p2 = (p_Result_21_fu_997_p3.read() ^ ap_const_lv1_1);
}

void bn::thread_zext_ln414_1_fu_1339_p1() {
    zext_ln414_1_fu_1339_p1 = esl_zext<7,6>(or_ln41_reg_1599.read());
}

void bn::thread_zext_ln414_2_fu_1378_p1() {
    zext_ln414_2_fu_1378_p1 = esl_zext<64,7>(select_ln414_2_fu_1364_p3.read());
}

void bn::thread_zext_ln414_3_fu_1382_p1() {
    zext_ln414_3_fu_1382_p1 = esl_zext<64,7>(select_ln414_1_fu_1356_p3.read());
}

void bn::thread_zext_ln414_4_fu_1386_p1() {
    zext_ln414_4_fu_1386_p1 = esl_zext<64,7>(xor_ln414_1_fu_1372_p2.read());
}

void bn::thread_zext_ln414_fu_1336_p1() {
    zext_ln414_fu_1336_p1 = esl_zext<7,6>(Lo_assign_reg_1589.read());
}

void bn::thread_zext_ln415_fu_1137_p1() {
    zext_ln415_fu_1137_p1 = esl_zext<16,1>(tmp_40_fu_1129_p3.read());
}

void bn::thread_zext_ln647_10_fu_836_p1() {
    zext_ln647_10_fu_836_p1 = esl_zext<64,7>(select_ln647_8_fu_823_p3.read());
}

void bn::thread_zext_ln647_11_fu_840_p1() {
    zext_ln647_11_fu_840_p1 = esl_zext<64,7>(sub_ln647_8_fu_830_p2.read());
}

void bn::thread_zext_ln647_12_fu_866_p1() {
    zext_ln647_12_fu_866_p1 = esl_zext<7,6>(Lo_assign_reg_1589.read());
}

void bn::thread_zext_ln647_13_fu_869_p1() {
    zext_ln647_13_fu_869_p1 = esl_zext<7,6>(or_ln41_reg_1599.read());
}

void bn::thread_zext_ln647_14_fu_925_p1() {
    zext_ln647_14_fu_925_p1 = esl_zext<64,7>(select_ln647_11_fu_912_p3.read());
}

void bn::thread_zext_ln647_15_fu_929_p1() {
    zext_ln647_15_fu_929_p1 = esl_zext<64,7>(sub_ln647_11_fu_919_p2.read());
}

void bn::thread_zext_ln647_16_fu_529_p1() {
    zext_ln647_16_fu_529_p1 = esl_zext<7,6>(Lo_assign_fu_489_p3.read());
}

void bn::thread_zext_ln647_17_fu_533_p1() {
    zext_ln647_17_fu_533_p1 = esl_zext<7,6>(or_ln41_fu_498_p2.read());
}

void bn::thread_zext_ln647_18_fu_593_p1() {
    zext_ln647_18_fu_593_p1 = esl_zext<64,7>(select_ln647_14_fu_579_p3.read());
}

void bn::thread_zext_ln647_19_fu_955_p1() {
    zext_ln647_19_fu_955_p1 = esl_zext<64,7>(sub_ln647_14_reg_1637.read());
}

void bn::thread_zext_ln647_1_fu_606_p1() {
    zext_ln647_1_fu_606_p1 = esl_zext<7,6>(or_ln41_reg_1599.read());
}

void bn::thread_zext_ln647_2_fu_662_p1() {
    zext_ln647_2_fu_662_p1 = esl_zext<64,7>(select_ln647_2_fu_649_p3.read());
}

void bn::thread_zext_ln647_3_fu_666_p1() {
    zext_ln647_3_fu_666_p1 = esl_zext<64,7>(sub_ln647_2_fu_656_p2.read());
}

void bn::thread_zext_ln647_4_fu_692_p1() {
    zext_ln647_4_fu_692_p1 = esl_zext<7,6>(Lo_assign_reg_1589.read());
}

void bn::thread_zext_ln647_5_fu_695_p1() {
    zext_ln647_5_fu_695_p1 = esl_zext<7,6>(or_ln41_reg_1599.read());
}

void bn::thread_zext_ln647_6_fu_751_p1() {
    zext_ln647_6_fu_751_p1 = esl_zext<64,7>(select_ln647_5_fu_738_p3.read());
}

void bn::thread_zext_ln647_7_fu_755_p1() {
    zext_ln647_7_fu_755_p1 = esl_zext<64,7>(sub_ln647_5_fu_745_p2.read());
}

void bn::thread_zext_ln647_8_fu_777_p1() {
    zext_ln647_8_fu_777_p1 = esl_zext<7,6>(Lo_assign_reg_1589.read());
}

void bn::thread_zext_ln647_9_fu_780_p1() {
    zext_ln647_9_fu_780_p1 = esl_zext<7,6>(or_ln41_reg_1599.read());
}

void bn::thread_zext_ln647_fu_603_p1() {
    zext_ln647_fu_603_p1 = esl_zext<7,6>(Lo_assign_reg_1589.read());
}

void bn::thread_ap_NS_fsm() {
    if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state1))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state1;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state2))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_block_state2_io.read(), ap_const_boolean_0))) {
            ap_NS_fsm = ap_ST_fsm_state3;
        } else {
            ap_NS_fsm = ap_ST_fsm_state2;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state3))
    {
        ap_NS_fsm = ap_ST_fsm_state4;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state4))
    {
        ap_NS_fsm = ap_ST_fsm_state5;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state5))
    {
        ap_NS_fsm = ap_ST_fsm_state6;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state6))
    {
        ap_NS_fsm = ap_ST_fsm_state7;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state7))
    {
        ap_NS_fsm = ap_ST_fsm_state8;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state8))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(OUT_r_AWREADY.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state9;
        } else {
            ap_NS_fsm = ap_ST_fsm_state8;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state9))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && !((esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IN_r_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, BETA_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, GAMMA_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, M_M_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, M_V_RVALID.read()))))) {
            ap_NS_fsm = ap_ST_fsm_state10;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && !((esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IN_r_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, BETA_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, GAMMA_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, M_M_RVALID.read())) || (esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, M_V_RVALID.read()))) && esl_seteq<1,1,1>(icmp_ln33_fu_461_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state71;
        } else {
            ap_NS_fsm = ap_ST_fsm_state9;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state10))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(icmp_ln40_fu_473_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0))) {
            ap_NS_fsm = ap_ST_fsm_state9;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln40_fu_473_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state11;
        } else {
            ap_NS_fsm = ap_ST_fsm_state10;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state11))
    {
        ap_NS_fsm = ap_ST_fsm_state12;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state12))
    {
        ap_NS_fsm = ap_ST_fsm_state13;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state13))
    {
        ap_NS_fsm = ap_ST_fsm_state14;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state14))
    {
        ap_NS_fsm = ap_ST_fsm_state15;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state15))
    {
        ap_NS_fsm = ap_ST_fsm_state16;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state16))
    {
        ap_NS_fsm = ap_ST_fsm_state17;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state17))
    {
        ap_NS_fsm = ap_ST_fsm_state18;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state18))
    {
        ap_NS_fsm = ap_ST_fsm_state19;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state19))
    {
        ap_NS_fsm = ap_ST_fsm_state20;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state20))
    {
        ap_NS_fsm = ap_ST_fsm_state21;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state21))
    {
        ap_NS_fsm = ap_ST_fsm_state22;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state22))
    {
        ap_NS_fsm = ap_ST_fsm_state23;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state23))
    {
        ap_NS_fsm = ap_ST_fsm_state24;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state24))
    {
        ap_NS_fsm = ap_ST_fsm_state25;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state25))
    {
        ap_NS_fsm = ap_ST_fsm_state26;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state26))
    {
        ap_NS_fsm = ap_ST_fsm_state27;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state27))
    {
        ap_NS_fsm = ap_ST_fsm_state28;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state28))
    {
        ap_NS_fsm = ap_ST_fsm_state29;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state29))
    {
        ap_NS_fsm = ap_ST_fsm_state30;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state30))
    {
        ap_NS_fsm = ap_ST_fsm_state31;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state31))
    {
        ap_NS_fsm = ap_ST_fsm_state32;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state32))
    {
        ap_NS_fsm = ap_ST_fsm_state33;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state33))
    {
        ap_NS_fsm = ap_ST_fsm_state34;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state34))
    {
        ap_NS_fsm = ap_ST_fsm_state35;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state35))
    {
        ap_NS_fsm = ap_ST_fsm_state36;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state36))
    {
        ap_NS_fsm = ap_ST_fsm_state37;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state37))
    {
        ap_NS_fsm = ap_ST_fsm_state38;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state38))
    {
        ap_NS_fsm = ap_ST_fsm_state39;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state39))
    {
        ap_NS_fsm = ap_ST_fsm_state40;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state40))
    {
        ap_NS_fsm = ap_ST_fsm_state41;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state41))
    {
        ap_NS_fsm = ap_ST_fsm_state42;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state42))
    {
        ap_NS_fsm = ap_ST_fsm_state43;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state43))
    {
        ap_NS_fsm = ap_ST_fsm_state44;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state44))
    {
        ap_NS_fsm = ap_ST_fsm_state45;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state45))
    {
        ap_NS_fsm = ap_ST_fsm_state46;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state46))
    {
        ap_NS_fsm = ap_ST_fsm_state47;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state47))
    {
        ap_NS_fsm = ap_ST_fsm_state48;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state48))
    {
        ap_NS_fsm = ap_ST_fsm_state49;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state49))
    {
        ap_NS_fsm = ap_ST_fsm_state50;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state50))
    {
        ap_NS_fsm = ap_ST_fsm_state51;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state51))
    {
        ap_NS_fsm = ap_ST_fsm_state52;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state52))
    {
        ap_NS_fsm = ap_ST_fsm_state53;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state53))
    {
        ap_NS_fsm = ap_ST_fsm_state54;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state54))
    {
        ap_NS_fsm = ap_ST_fsm_state55;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state55))
    {
        ap_NS_fsm = ap_ST_fsm_state56;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state56))
    {
        ap_NS_fsm = ap_ST_fsm_state57;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state57))
    {
        ap_NS_fsm = ap_ST_fsm_state58;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state58))
    {
        ap_NS_fsm = ap_ST_fsm_state59;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state59))
    {
        ap_NS_fsm = ap_ST_fsm_state60;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state60))
    {
        ap_NS_fsm = ap_ST_fsm_state61;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state61))
    {
        ap_NS_fsm = ap_ST_fsm_state62;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state62))
    {
        ap_NS_fsm = ap_ST_fsm_state63;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state63))
    {
        ap_NS_fsm = ap_ST_fsm_state64;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state64))
    {
        ap_NS_fsm = ap_ST_fsm_state65;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state65))
    {
        ap_NS_fsm = ap_ST_fsm_state66;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state66))
    {
        ap_NS_fsm = ap_ST_fsm_state67;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state67))
    {
        ap_NS_fsm = ap_ST_fsm_state68;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state68))
    {
        ap_NS_fsm = ap_ST_fsm_state69;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state69))
    {
        ap_NS_fsm = ap_ST_fsm_state70;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state70))
    {
        ap_NS_fsm = ap_ST_fsm_state10;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state71))
    {
        ap_NS_fsm = ap_ST_fsm_state72;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state72))
    {
        ap_NS_fsm = ap_ST_fsm_state73;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state73))
    {
        ap_NS_fsm = ap_ST_fsm_state74;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state74))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read()) && esl_seteq<1,1,1>(OUT_r_BVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state1;
        } else {
            ap_NS_fsm = ap_ST_fsm_state74;
        }
    }
    else
    {
        ap_NS_fsm =  (sc_lv<74>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}
void bn::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"m_axi_IN_r_AWVALID\" :  \"" << m_axi_IN_r_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_IN_r_AWREADY\" :  \"" << m_axi_IN_r_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_AWADDR\" :  \"" << m_axi_IN_r_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_AWID\" :  \"" << m_axi_IN_r_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_AWLEN\" :  \"" << m_axi_IN_r_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_AWSIZE\" :  \"" << m_axi_IN_r_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_AWBURST\" :  \"" << m_axi_IN_r_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_AWLOCK\" :  \"" << m_axi_IN_r_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_AWCACHE\" :  \"" << m_axi_IN_r_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_AWPROT\" :  \"" << m_axi_IN_r_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_AWQOS\" :  \"" << m_axi_IN_r_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_AWREGION\" :  \"" << m_axi_IN_r_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_AWUSER\" :  \"" << m_axi_IN_r_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_WVALID\" :  \"" << m_axi_IN_r_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_IN_r_WREADY\" :  \"" << m_axi_IN_r_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_WDATA\" :  \"" << m_axi_IN_r_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_WSTRB\" :  \"" << m_axi_IN_r_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_WLAST\" :  \"" << m_axi_IN_r_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_WID\" :  \"" << m_axi_IN_r_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_WUSER\" :  \"" << m_axi_IN_r_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_ARVALID\" :  \"" << m_axi_IN_r_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_IN_r_ARREADY\" :  \"" << m_axi_IN_r_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_ARADDR\" :  \"" << m_axi_IN_r_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_ARID\" :  \"" << m_axi_IN_r_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_ARLEN\" :  \"" << m_axi_IN_r_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_ARSIZE\" :  \"" << m_axi_IN_r_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_ARBURST\" :  \"" << m_axi_IN_r_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_ARLOCK\" :  \"" << m_axi_IN_r_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_ARCACHE\" :  \"" << m_axi_IN_r_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_ARPROT\" :  \"" << m_axi_IN_r_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_ARQOS\" :  \"" << m_axi_IN_r_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_ARREGION\" :  \"" << m_axi_IN_r_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_ARUSER\" :  \"" << m_axi_IN_r_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_IN_r_RVALID\" :  \"" << m_axi_IN_r_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_RREADY\" :  \"" << m_axi_IN_r_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_IN_r_RDATA\" :  \"" << m_axi_IN_r_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_IN_r_RLAST\" :  \"" << m_axi_IN_r_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_IN_r_RID\" :  \"" << m_axi_IN_r_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_IN_r_RUSER\" :  \"" << m_axi_IN_r_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_IN_r_RRESP\" :  \"" << m_axi_IN_r_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_IN_r_BVALID\" :  \"" << m_axi_IN_r_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_BREADY\" :  \"" << m_axi_IN_r_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_IN_r_BRESP\" :  \"" << m_axi_IN_r_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_IN_r_BID\" :  \"" << m_axi_IN_r_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_IN_r_BUSER\" :  \"" << m_axi_IN_r_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_BETA_AWVALID\" :  \"" << m_axi_BETA_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_BETA_AWREADY\" :  \"" << m_axi_BETA_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_BETA_AWADDR\" :  \"" << m_axi_BETA_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_BETA_AWID\" :  \"" << m_axi_BETA_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_BETA_AWLEN\" :  \"" << m_axi_BETA_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_BETA_AWSIZE\" :  \"" << m_axi_BETA_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_BETA_AWBURST\" :  \"" << m_axi_BETA_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_BETA_AWLOCK\" :  \"" << m_axi_BETA_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_BETA_AWCACHE\" :  \"" << m_axi_BETA_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_BETA_AWPROT\" :  \"" << m_axi_BETA_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_BETA_AWQOS\" :  \"" << m_axi_BETA_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_BETA_AWREGION\" :  \"" << m_axi_BETA_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_BETA_AWUSER\" :  \"" << m_axi_BETA_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_BETA_WVALID\" :  \"" << m_axi_BETA_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_BETA_WREADY\" :  \"" << m_axi_BETA_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_BETA_WDATA\" :  \"" << m_axi_BETA_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_BETA_WSTRB\" :  \"" << m_axi_BETA_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_BETA_WLAST\" :  \"" << m_axi_BETA_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_BETA_WID\" :  \"" << m_axi_BETA_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_BETA_WUSER\" :  \"" << m_axi_BETA_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_BETA_ARVALID\" :  \"" << m_axi_BETA_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_BETA_ARREADY\" :  \"" << m_axi_BETA_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_BETA_ARADDR\" :  \"" << m_axi_BETA_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_BETA_ARID\" :  \"" << m_axi_BETA_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_BETA_ARLEN\" :  \"" << m_axi_BETA_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_BETA_ARSIZE\" :  \"" << m_axi_BETA_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_BETA_ARBURST\" :  \"" << m_axi_BETA_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_BETA_ARLOCK\" :  \"" << m_axi_BETA_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_BETA_ARCACHE\" :  \"" << m_axi_BETA_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_BETA_ARPROT\" :  \"" << m_axi_BETA_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_BETA_ARQOS\" :  \"" << m_axi_BETA_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_BETA_ARREGION\" :  \"" << m_axi_BETA_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_BETA_ARUSER\" :  \"" << m_axi_BETA_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_BETA_RVALID\" :  \"" << m_axi_BETA_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_BETA_RREADY\" :  \"" << m_axi_BETA_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_BETA_RDATA\" :  \"" << m_axi_BETA_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_BETA_RLAST\" :  \"" << m_axi_BETA_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_BETA_RID\" :  \"" << m_axi_BETA_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_BETA_RUSER\" :  \"" << m_axi_BETA_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_BETA_RRESP\" :  \"" << m_axi_BETA_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_BETA_BVALID\" :  \"" << m_axi_BETA_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_BETA_BREADY\" :  \"" << m_axi_BETA_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_BETA_BRESP\" :  \"" << m_axi_BETA_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_BETA_BID\" :  \"" << m_axi_BETA_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_BETA_BUSER\" :  \"" << m_axi_BETA_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_GAMMA_AWVALID\" :  \"" << m_axi_GAMMA_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_GAMMA_AWREADY\" :  \"" << m_axi_GAMMA_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_GAMMA_AWADDR\" :  \"" << m_axi_GAMMA_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_GAMMA_AWID\" :  \"" << m_axi_GAMMA_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_GAMMA_AWLEN\" :  \"" << m_axi_GAMMA_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_GAMMA_AWSIZE\" :  \"" << m_axi_GAMMA_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_GAMMA_AWBURST\" :  \"" << m_axi_GAMMA_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_GAMMA_AWLOCK\" :  \"" << m_axi_GAMMA_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_GAMMA_AWCACHE\" :  \"" << m_axi_GAMMA_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_GAMMA_AWPROT\" :  \"" << m_axi_GAMMA_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_GAMMA_AWQOS\" :  \"" << m_axi_GAMMA_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_GAMMA_AWREGION\" :  \"" << m_axi_GAMMA_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_GAMMA_AWUSER\" :  \"" << m_axi_GAMMA_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_GAMMA_WVALID\" :  \"" << m_axi_GAMMA_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_GAMMA_WREADY\" :  \"" << m_axi_GAMMA_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_GAMMA_WDATA\" :  \"" << m_axi_GAMMA_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_GAMMA_WSTRB\" :  \"" << m_axi_GAMMA_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_GAMMA_WLAST\" :  \"" << m_axi_GAMMA_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_GAMMA_WID\" :  \"" << m_axi_GAMMA_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_GAMMA_WUSER\" :  \"" << m_axi_GAMMA_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_GAMMA_ARVALID\" :  \"" << m_axi_GAMMA_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_GAMMA_ARREADY\" :  \"" << m_axi_GAMMA_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_GAMMA_ARADDR\" :  \"" << m_axi_GAMMA_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_GAMMA_ARID\" :  \"" << m_axi_GAMMA_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_GAMMA_ARLEN\" :  \"" << m_axi_GAMMA_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_GAMMA_ARSIZE\" :  \"" << m_axi_GAMMA_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_GAMMA_ARBURST\" :  \"" << m_axi_GAMMA_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_GAMMA_ARLOCK\" :  \"" << m_axi_GAMMA_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_GAMMA_ARCACHE\" :  \"" << m_axi_GAMMA_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_GAMMA_ARPROT\" :  \"" << m_axi_GAMMA_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_GAMMA_ARQOS\" :  \"" << m_axi_GAMMA_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_GAMMA_ARREGION\" :  \"" << m_axi_GAMMA_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_GAMMA_ARUSER\" :  \"" << m_axi_GAMMA_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_GAMMA_RVALID\" :  \"" << m_axi_GAMMA_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_GAMMA_RREADY\" :  \"" << m_axi_GAMMA_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_GAMMA_RDATA\" :  \"" << m_axi_GAMMA_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_GAMMA_RLAST\" :  \"" << m_axi_GAMMA_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_GAMMA_RID\" :  \"" << m_axi_GAMMA_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_GAMMA_RUSER\" :  \"" << m_axi_GAMMA_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_GAMMA_RRESP\" :  \"" << m_axi_GAMMA_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_GAMMA_BVALID\" :  \"" << m_axi_GAMMA_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_GAMMA_BREADY\" :  \"" << m_axi_GAMMA_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_GAMMA_BRESP\" :  \"" << m_axi_GAMMA_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_GAMMA_BID\" :  \"" << m_axi_GAMMA_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_GAMMA_BUSER\" :  \"" << m_axi_GAMMA_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_M_AWVALID\" :  \"" << m_axi_M_M_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_M_M_AWREADY\" :  \"" << m_axi_M_M_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_M_AWADDR\" :  \"" << m_axi_M_M_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_M_AWID\" :  \"" << m_axi_M_M_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_M_AWLEN\" :  \"" << m_axi_M_M_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_M_AWSIZE\" :  \"" << m_axi_M_M_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_M_AWBURST\" :  \"" << m_axi_M_M_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_M_AWLOCK\" :  \"" << m_axi_M_M_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_M_AWCACHE\" :  \"" << m_axi_M_M_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_M_AWPROT\" :  \"" << m_axi_M_M_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_M_AWQOS\" :  \"" << m_axi_M_M_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_M_AWREGION\" :  \"" << m_axi_M_M_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_M_AWUSER\" :  \"" << m_axi_M_M_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_M_WVALID\" :  \"" << m_axi_M_M_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_M_M_WREADY\" :  \"" << m_axi_M_M_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_M_WDATA\" :  \"" << m_axi_M_M_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_M_WSTRB\" :  \"" << m_axi_M_M_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_M_WLAST\" :  \"" << m_axi_M_M_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_M_WID\" :  \"" << m_axi_M_M_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_M_WUSER\" :  \"" << m_axi_M_M_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_M_ARVALID\" :  \"" << m_axi_M_M_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_M_M_ARREADY\" :  \"" << m_axi_M_M_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_M_ARADDR\" :  \"" << m_axi_M_M_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_M_ARID\" :  \"" << m_axi_M_M_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_M_ARLEN\" :  \"" << m_axi_M_M_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_M_ARSIZE\" :  \"" << m_axi_M_M_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_M_ARBURST\" :  \"" << m_axi_M_M_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_M_ARLOCK\" :  \"" << m_axi_M_M_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_M_ARCACHE\" :  \"" << m_axi_M_M_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_M_ARPROT\" :  \"" << m_axi_M_M_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_M_ARQOS\" :  \"" << m_axi_M_M_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_M_ARREGION\" :  \"" << m_axi_M_M_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_M_ARUSER\" :  \"" << m_axi_M_M_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_M_M_RVALID\" :  \"" << m_axi_M_M_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_M_RREADY\" :  \"" << m_axi_M_M_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_M_M_RDATA\" :  \"" << m_axi_M_M_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_M_M_RLAST\" :  \"" << m_axi_M_M_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_M_M_RID\" :  \"" << m_axi_M_M_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_M_M_RUSER\" :  \"" << m_axi_M_M_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_M_M_RRESP\" :  \"" << m_axi_M_M_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_M_M_BVALID\" :  \"" << m_axi_M_M_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_M_BREADY\" :  \"" << m_axi_M_M_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_M_M_BRESP\" :  \"" << m_axi_M_M_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_M_M_BID\" :  \"" << m_axi_M_M_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_M_M_BUSER\" :  \"" << m_axi_M_M_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_V_AWVALID\" :  \"" << m_axi_M_V_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_M_V_AWREADY\" :  \"" << m_axi_M_V_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_V_AWADDR\" :  \"" << m_axi_M_V_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_V_AWID\" :  \"" << m_axi_M_V_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_V_AWLEN\" :  \"" << m_axi_M_V_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_V_AWSIZE\" :  \"" << m_axi_M_V_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_V_AWBURST\" :  \"" << m_axi_M_V_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_V_AWLOCK\" :  \"" << m_axi_M_V_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_V_AWCACHE\" :  \"" << m_axi_M_V_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_V_AWPROT\" :  \"" << m_axi_M_V_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_V_AWQOS\" :  \"" << m_axi_M_V_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_V_AWREGION\" :  \"" << m_axi_M_V_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_V_AWUSER\" :  \"" << m_axi_M_V_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_V_WVALID\" :  \"" << m_axi_M_V_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_M_V_WREADY\" :  \"" << m_axi_M_V_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_V_WDATA\" :  \"" << m_axi_M_V_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_V_WSTRB\" :  \"" << m_axi_M_V_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_V_WLAST\" :  \"" << m_axi_M_V_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_V_WID\" :  \"" << m_axi_M_V_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_V_WUSER\" :  \"" << m_axi_M_V_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_V_ARVALID\" :  \"" << m_axi_M_V_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_M_V_ARREADY\" :  \"" << m_axi_M_V_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_V_ARADDR\" :  \"" << m_axi_M_V_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_V_ARID\" :  \"" << m_axi_M_V_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_V_ARLEN\" :  \"" << m_axi_M_V_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_V_ARSIZE\" :  \"" << m_axi_M_V_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_V_ARBURST\" :  \"" << m_axi_M_V_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_V_ARLOCK\" :  \"" << m_axi_M_V_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_V_ARCACHE\" :  \"" << m_axi_M_V_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_V_ARPROT\" :  \"" << m_axi_M_V_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_V_ARQOS\" :  \"" << m_axi_M_V_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_V_ARREGION\" :  \"" << m_axi_M_V_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_V_ARUSER\" :  \"" << m_axi_M_V_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_M_V_RVALID\" :  \"" << m_axi_M_V_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_V_RREADY\" :  \"" << m_axi_M_V_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_M_V_RDATA\" :  \"" << m_axi_M_V_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_M_V_RLAST\" :  \"" << m_axi_M_V_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_M_V_RID\" :  \"" << m_axi_M_V_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_M_V_RUSER\" :  \"" << m_axi_M_V_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_M_V_RRESP\" :  \"" << m_axi_M_V_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_M_V_BVALID\" :  \"" << m_axi_M_V_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_M_V_BREADY\" :  \"" << m_axi_M_V_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_M_V_BRESP\" :  \"" << m_axi_M_V_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_M_V_BID\" :  \"" << m_axi_M_V_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_M_V_BUSER\" :  \"" << m_axi_M_V_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_AWVALID\" :  \"" << m_axi_OUT_r_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_AWREADY\" :  \"" << m_axi_OUT_r_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_AWADDR\" :  \"" << m_axi_OUT_r_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_AWID\" :  \"" << m_axi_OUT_r_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_AWLEN\" :  \"" << m_axi_OUT_r_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_AWSIZE\" :  \"" << m_axi_OUT_r_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_AWBURST\" :  \"" << m_axi_OUT_r_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_AWLOCK\" :  \"" << m_axi_OUT_r_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_AWCACHE\" :  \"" << m_axi_OUT_r_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_AWPROT\" :  \"" << m_axi_OUT_r_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_AWQOS\" :  \"" << m_axi_OUT_r_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_AWREGION\" :  \"" << m_axi_OUT_r_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_AWUSER\" :  \"" << m_axi_OUT_r_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_WVALID\" :  \"" << m_axi_OUT_r_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_WREADY\" :  \"" << m_axi_OUT_r_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_WDATA\" :  \"" << m_axi_OUT_r_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_WSTRB\" :  \"" << m_axi_OUT_r_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_WLAST\" :  \"" << m_axi_OUT_r_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_WID\" :  \"" << m_axi_OUT_r_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_WUSER\" :  \"" << m_axi_OUT_r_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_ARVALID\" :  \"" << m_axi_OUT_r_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_ARREADY\" :  \"" << m_axi_OUT_r_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_ARADDR\" :  \"" << m_axi_OUT_r_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_ARID\" :  \"" << m_axi_OUT_r_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_ARLEN\" :  \"" << m_axi_OUT_r_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_ARSIZE\" :  \"" << m_axi_OUT_r_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_ARBURST\" :  \"" << m_axi_OUT_r_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_ARLOCK\" :  \"" << m_axi_OUT_r_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_ARCACHE\" :  \"" << m_axi_OUT_r_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_ARPROT\" :  \"" << m_axi_OUT_r_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_ARQOS\" :  \"" << m_axi_OUT_r_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_ARREGION\" :  \"" << m_axi_OUT_r_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_ARUSER\" :  \"" << m_axi_OUT_r_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_RVALID\" :  \"" << m_axi_OUT_r_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_RREADY\" :  \"" << m_axi_OUT_r_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_RDATA\" :  \"" << m_axi_OUT_r_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_RLAST\" :  \"" << m_axi_OUT_r_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_RID\" :  \"" << m_axi_OUT_r_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_RUSER\" :  \"" << m_axi_OUT_r_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_RRESP\" :  \"" << m_axi_OUT_r_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_BVALID\" :  \"" << m_axi_OUT_r_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_BREADY\" :  \"" << m_axi_OUT_r_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_BRESP\" :  \"" << m_axi_OUT_r_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_BID\" :  \"" << m_axi_OUT_r_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_BUSER\" :  \"" << m_axi_OUT_r_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_AWVALID\" :  \"" << s_axi_CTRL_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_AWREADY\" :  \"" << s_axi_CTRL_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_AWADDR\" :  \"" << s_axi_CTRL_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_WVALID\" :  \"" << s_axi_CTRL_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_WREADY\" :  \"" << s_axi_CTRL_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_WDATA\" :  \"" << s_axi_CTRL_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_WSTRB\" :  \"" << s_axi_CTRL_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_ARVALID\" :  \"" << s_axi_CTRL_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_ARREADY\" :  \"" << s_axi_CTRL_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_ARADDR\" :  \"" << s_axi_CTRL_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_RVALID\" :  \"" << s_axi_CTRL_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_RREADY\" :  \"" << s_axi_CTRL_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_RDATA\" :  \"" << s_axi_CTRL_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_RRESP\" :  \"" << s_axi_CTRL_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BVALID\" :  \"" << s_axi_CTRL_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BREADY\" :  \"" << s_axi_CTRL_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BRESP\" :  \"" << s_axi_CTRL_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

