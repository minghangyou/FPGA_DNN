

================================================================
== Vivado HLS Report for 'bn'
================================================================
* Date:           Wed Mar  1 19:34:33 2023

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        BN
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.750|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  7884|  7884|  7884|  7884|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+------+------+----------+-----------+-----------+------+----------+
        |             |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  |  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+------+------+----------+-----------+-----------+------+----------+
        |- Loop 1     |  7872|  7872|       246|          -|          -|    32|    no    |
        | + Loop 1.1  |   244|   244|        61|          -|          -|     4|    no    |
        +-------------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 74
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 71 10 
10 --> 11 9 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 41 
41 --> 42 
42 --> 43 
43 --> 44 
44 --> 45 
45 --> 46 
46 --> 47 
47 --> 48 
48 --> 49 
49 --> 50 
50 --> 51 
51 --> 52 
52 --> 53 
53 --> 54 
54 --> 55 
55 --> 56 
56 --> 57 
57 --> 58 
58 --> 59 
59 --> 60 
60 --> 61 
61 --> 62 
62 --> 63 
63 --> 64 
64 --> 65 
65 --> 66 
66 --> 67 
67 --> 68 
68 --> 69 
69 --> 70 
70 --> 10 
71 --> 72 
72 --> 73 
73 --> 74 
74 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 75 [1/1] (0.00ns)   --->   "%p_Val2_s = alloca i64"   --->   Operation 75 'alloca' 'p_Val2_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 76 [1/1] (1.00ns)   --->   "%out_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %out_V)"   --->   Operation 76 'read' 'out_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 77 [1/1] (1.00ns)   --->   "%moving_variance_V_re = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %moving_variance_V)"   --->   Operation 77 'read' 'moving_variance_V_re' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 78 [1/1] (1.00ns)   --->   "%moving_mean_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %moving_mean_V)"   --->   Operation 78 'read' 'moving_mean_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 79 [1/1] (1.00ns)   --->   "%gamma_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %gamma_V)"   --->   Operation 79 'read' 'gamma_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 80 [1/1] (1.00ns)   --->   "%beta_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %beta_V)"   --->   Operation 80 'read' 'beta_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 81 [1/1] (1.00ns)   --->   "%in_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %in_V)"   --->   Operation 81 'read' 'in_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 82 [1/1] (0.00ns)   --->   "%out_V1 = call i29 @_ssdm_op_PartSelect.i29.i32.i32.i32(i32 %out_V_read, i32 3, i32 31)"   --->   Operation 82 'partselect' 'out_V1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 83 [1/1] (0.00ns)   --->   "%moving_variance_V9 = call i29 @_ssdm_op_PartSelect.i29.i32.i32.i32(i32 %moving_variance_V_re, i32 3, i32 31)"   --->   Operation 83 'partselect' 'moving_variance_V9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 84 [1/1] (0.00ns)   --->   "%moving_mean_V7 = call i29 @_ssdm_op_PartSelect.i29.i32.i32.i32(i32 %moving_mean_V_read, i32 3, i32 31)"   --->   Operation 84 'partselect' 'moving_mean_V7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 85 [1/1] (0.00ns)   --->   "%gamma_V5 = call i29 @_ssdm_op_PartSelect.i29.i32.i32.i32(i32 %gamma_V_read, i32 3, i32 31)"   --->   Operation 85 'partselect' 'gamma_V5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 86 [1/1] (0.00ns)   --->   "%beta_V3 = call i29 @_ssdm_op_PartSelect.i29.i32.i32.i32(i32 %beta_V_read, i32 3, i32 31)"   --->   Operation 86 'partselect' 'beta_V3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 87 [1/1] (0.00ns)   --->   "%in_V1 = call i29 @_ssdm_op_PartSelect.i29.i32.i32.i32(i32 %in_V_read, i32 3, i32 31)"   --->   Operation 87 'partselect' 'in_V1' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 8.75>
ST_2 : Operation 88 [1/1] (0.00ns)   --->   "%empty_27 = zext i29 %moving_variance_V9 to i64"   --->   Operation 88 'zext' 'empty_27' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 89 [1/1] (0.00ns)   --->   "%M_V_addr = getelementptr i64* %M_V, i64 %empty_27"   --->   Operation 89 'getelementptr' 'M_V_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 90 [1/1] (0.00ns)   --->   "%empty_28 = zext i29 %moving_mean_V7 to i64"   --->   Operation 90 'zext' 'empty_28' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 91 [1/1] (0.00ns)   --->   "%M_M_addr = getelementptr i64* %M_M, i64 %empty_28"   --->   Operation 91 'getelementptr' 'M_M_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 92 [1/1] (0.00ns)   --->   "%empty_29 = zext i29 %gamma_V5 to i64"   --->   Operation 92 'zext' 'empty_29' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 93 [1/1] (0.00ns)   --->   "%GAMMA_addr = getelementptr i64* %GAMMA, i64 %empty_29"   --->   Operation 93 'getelementptr' 'GAMMA_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 94 [1/1] (0.00ns)   --->   "%empty_30 = zext i29 %beta_V3 to i64"   --->   Operation 94 'zext' 'empty_30' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 95 [1/1] (0.00ns)   --->   "%BETA_addr = getelementptr i64* %BETA, i64 %empty_30"   --->   Operation 95 'getelementptr' 'BETA_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 96 [1/1] (0.00ns)   --->   "%empty_31 = zext i29 %in_V1 to i64"   --->   Operation 96 'zext' 'empty_31' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 97 [1/1] (0.00ns)   --->   "%IN_addr = getelementptr i64* %IN_r, i64 %empty_31"   --->   Operation 97 'getelementptr' 'IN_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 98 [7/7] (8.75ns)   --->   "%IN_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %IN_addr, i32 32)" [BN/bn.cpp:34]   --->   Operation 98 'readreq' 'IN_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_2 : Operation 99 [7/7] (8.75ns)   --->   "%BETA_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %BETA_addr, i32 32)" [BN/bn.cpp:35]   --->   Operation 99 'readreq' 'BETA_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_2 : Operation 100 [7/7] (8.75ns)   --->   "%GAMMA_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %GAMMA_addr, i32 32)" [BN/bn.cpp:36]   --->   Operation 100 'readreq' 'GAMMA_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_2 : Operation 101 [7/7] (8.75ns)   --->   "%M_M_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_M_addr, i32 32)" [BN/bn.cpp:37]   --->   Operation 101 'readreq' 'M_M_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_2 : Operation 102 [7/7] (8.75ns)   --->   "%M_V_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_V_addr, i32 32)" [BN/bn.cpp:38]   --->   Operation 102 'readreq' 'M_V_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 8.75>
ST_3 : Operation 103 [6/7] (8.75ns)   --->   "%IN_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %IN_addr, i32 32)" [BN/bn.cpp:34]   --->   Operation 103 'readreq' 'IN_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 104 [6/7] (8.75ns)   --->   "%BETA_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %BETA_addr, i32 32)" [BN/bn.cpp:35]   --->   Operation 104 'readreq' 'BETA_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 105 [6/7] (8.75ns)   --->   "%GAMMA_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %GAMMA_addr, i32 32)" [BN/bn.cpp:36]   --->   Operation 105 'readreq' 'GAMMA_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 106 [6/7] (8.75ns)   --->   "%M_M_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_M_addr, i32 32)" [BN/bn.cpp:37]   --->   Operation 106 'readreq' 'M_M_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 107 [6/7] (8.75ns)   --->   "%M_V_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_V_addr, i32 32)" [BN/bn.cpp:38]   --->   Operation 107 'readreq' 'M_V_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 8.75>
ST_4 : Operation 108 [5/7] (8.75ns)   --->   "%IN_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %IN_addr, i32 32)" [BN/bn.cpp:34]   --->   Operation 108 'readreq' 'IN_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 109 [5/7] (8.75ns)   --->   "%BETA_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %BETA_addr, i32 32)" [BN/bn.cpp:35]   --->   Operation 109 'readreq' 'BETA_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 110 [5/7] (8.75ns)   --->   "%GAMMA_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %GAMMA_addr, i32 32)" [BN/bn.cpp:36]   --->   Operation 110 'readreq' 'GAMMA_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 111 [5/7] (8.75ns)   --->   "%M_M_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_M_addr, i32 32)" [BN/bn.cpp:37]   --->   Operation 111 'readreq' 'M_M_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 112 [5/7] (8.75ns)   --->   "%M_V_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_V_addr, i32 32)" [BN/bn.cpp:38]   --->   Operation 112 'readreq' 'M_V_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 8.75>
ST_5 : Operation 113 [4/7] (8.75ns)   --->   "%IN_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %IN_addr, i32 32)" [BN/bn.cpp:34]   --->   Operation 113 'readreq' 'IN_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 114 [4/7] (8.75ns)   --->   "%BETA_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %BETA_addr, i32 32)" [BN/bn.cpp:35]   --->   Operation 114 'readreq' 'BETA_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 115 [4/7] (8.75ns)   --->   "%GAMMA_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %GAMMA_addr, i32 32)" [BN/bn.cpp:36]   --->   Operation 115 'readreq' 'GAMMA_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 116 [4/7] (8.75ns)   --->   "%M_M_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_M_addr, i32 32)" [BN/bn.cpp:37]   --->   Operation 116 'readreq' 'M_M_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 117 [4/7] (8.75ns)   --->   "%M_V_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_V_addr, i32 32)" [BN/bn.cpp:38]   --->   Operation 117 'readreq' 'M_V_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 8.75>
ST_6 : Operation 118 [3/7] (8.75ns)   --->   "%IN_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %IN_addr, i32 32)" [BN/bn.cpp:34]   --->   Operation 118 'readreq' 'IN_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 119 [3/7] (8.75ns)   --->   "%BETA_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %BETA_addr, i32 32)" [BN/bn.cpp:35]   --->   Operation 119 'readreq' 'BETA_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 120 [3/7] (8.75ns)   --->   "%GAMMA_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %GAMMA_addr, i32 32)" [BN/bn.cpp:36]   --->   Operation 120 'readreq' 'GAMMA_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 121 [3/7] (8.75ns)   --->   "%M_M_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_M_addr, i32 32)" [BN/bn.cpp:37]   --->   Operation 121 'readreq' 'M_M_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 122 [3/7] (8.75ns)   --->   "%M_V_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_V_addr, i32 32)" [BN/bn.cpp:38]   --->   Operation 122 'readreq' 'M_V_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 8.75>
ST_7 : Operation 123 [2/7] (8.75ns)   --->   "%IN_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %IN_addr, i32 32)" [BN/bn.cpp:34]   --->   Operation 123 'readreq' 'IN_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 124 [2/7] (8.75ns)   --->   "%BETA_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %BETA_addr, i32 32)" [BN/bn.cpp:35]   --->   Operation 124 'readreq' 'BETA_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 125 [2/7] (8.75ns)   --->   "%GAMMA_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %GAMMA_addr, i32 32)" [BN/bn.cpp:36]   --->   Operation 125 'readreq' 'GAMMA_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 126 [2/7] (8.75ns)   --->   "%M_M_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_M_addr, i32 32)" [BN/bn.cpp:37]   --->   Operation 126 'readreq' 'M_M_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 127 [2/7] (8.75ns)   --->   "%M_V_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_V_addr, i32 32)" [BN/bn.cpp:38]   --->   Operation 127 'readreq' 'M_V_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 8.75>
ST_8 : Operation 128 [1/1] (0.00ns)   --->   "%empty = zext i29 %out_V1 to i64"   --->   Operation 128 'zext' 'empty' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 129 [1/1] (0.00ns)   --->   "%OUT_addr = getelementptr i64* %OUT_r, i64 %empty"   --->   Operation 129 'getelementptr' 'OUT_addr' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 130 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %OUT_r), !map !223"   --->   Operation 130 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 131 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %M_V), !map !229"   --->   Operation 131 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 132 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %M_M), !map !233"   --->   Operation 132 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 133 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %GAMMA), !map !237"   --->   Operation 133 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 134 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %BETA), !map !241"   --->   Operation 134 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 135 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %IN_r), !map !245"   --->   Operation 135 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 136 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([3 x i8]* @bn_str) nounwind"   --->   Operation 136 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 137 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [5 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [BN/bn.cpp:16]   --->   Operation 137 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 138 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %IN_r, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 99999, [3 x i8]* @p_str4, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [BN/bn.cpp:18]   --->   Operation 138 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 139 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %in_V, [10 x i8]* @mode, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 99999, [1 x i8]* @bundle, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [BN/bn.cpp:18]   --->   Operation 139 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 140 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %BETA, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 99999, [5 x i8]* @p_str6, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [BN/bn.cpp:19]   --->   Operation 140 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 141 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %beta_V, [10 x i8]* @mode1, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 99999, [1 x i8]* @bundle2, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [BN/bn.cpp:19]   --->   Operation 141 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 142 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %GAMMA, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 99999, [6 x i8]* @p_str7, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [BN/bn.cpp:20]   --->   Operation 142 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 143 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %gamma_V, [10 x i8]* @mode3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 99999, [1 x i8]* @bundle4, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [BN/bn.cpp:20]   --->   Operation 143 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 144 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %M_M, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 99999, [4 x i8]* @p_str8, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [BN/bn.cpp:21]   --->   Operation 144 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 145 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %moving_mean_V, [10 x i8]* @mode5, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 99999, [1 x i8]* @bundle6, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [BN/bn.cpp:21]   --->   Operation 145 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 146 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %M_V, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 99999, [4 x i8]* @p_str9, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [BN/bn.cpp:22]   --->   Operation 146 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 147 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %moving_variance_V, [10 x i8]* @mode7, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 99999, [1 x i8]* @bundle8, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [BN/bn.cpp:22]   --->   Operation 147 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 148 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %OUT_r, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 99999, [4 x i8]* @p_str10, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [BN/bn.cpp:23]   --->   Operation 148 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 149 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %out_V, [10 x i8]* @mode9, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 99999, [1 x i8]* @bundle10, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [BN/bn.cpp:23]   --->   Operation 149 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 150 [1/7] (8.75ns)   --->   "%IN_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %IN_addr, i32 32)" [BN/bn.cpp:34]   --->   Operation 150 'readreq' 'IN_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 151 [1/7] (8.75ns)   --->   "%BETA_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %BETA_addr, i32 32)" [BN/bn.cpp:35]   --->   Operation 151 'readreq' 'BETA_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 152 [1/7] (8.75ns)   --->   "%GAMMA_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %GAMMA_addr, i32 32)" [BN/bn.cpp:36]   --->   Operation 152 'readreq' 'GAMMA_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 153 [1/7] (8.75ns)   --->   "%M_M_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_M_addr, i32 32)" [BN/bn.cpp:37]   --->   Operation 153 'readreq' 'M_M_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 154 [1/7] (8.75ns)   --->   "%M_V_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %M_V_addr, i32 32)" [BN/bn.cpp:38]   --->   Operation 154 'readreq' 'M_V_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 155 [1/1] (8.75ns)   --->   "%OUT_addr_wr_req = call i1 @_ssdm_op_WriteReq.m_axi.i64P(i64* %OUT_addr, i32 32)" [BN/bn.cpp:57]   --->   Operation 155 'writereq' 'OUT_addr_wr_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 156 [1/1] (1.76ns)   --->   "br label %.preheader" [BN/bn.cpp:33]   --->   Operation 156 'br' <Predicate = true> <Delay = 1.76>

State 9 <SV = 8> <Delay = 8.75>
ST_9 : Operation 157 [1/1] (0.00ns)   --->   "%i_0 = phi i6 [ 0, %arrayctor.loop1.preheader ], [ %i, %2 ]"   --->   Operation 157 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 158 [1/1] (1.42ns)   --->   "%icmp_ln33 = icmp eq i6 %i_0, -32" [BN/bn.cpp:33]   --->   Operation 158 'icmp' 'icmp_ln33' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 159 [1/1] (0.00ns)   --->   "%empty_32 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32)"   --->   Operation 159 'speclooptripcount' 'empty_32' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 160 [1/1] (1.82ns)   --->   "%i = add i6 %i_0, 1" [BN/bn.cpp:33]   --->   Operation 160 'add' 'i' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 161 [1/1] (0.00ns)   --->   "br i1 %icmp_ln33, label %3, label %0" [BN/bn.cpp:33]   --->   Operation 161 'br' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 162 [1/1] (8.75ns)   --->   "%in_pack_V = call i64 @_ssdm_op_Read.m_axi.i64P(i64* %IN_addr)" [BN/bn.cpp:34]   --->   Operation 162 'read' 'in_pack_V' <Predicate = (!icmp_ln33)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 163 [1/1] (8.75ns)   --->   "%beta_pack_V = call i64 @_ssdm_op_Read.m_axi.i64P(i64* %BETA_addr)" [BN/bn.cpp:35]   --->   Operation 163 'read' 'beta_pack_V' <Predicate = (!icmp_ln33)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 164 [1/1] (8.75ns)   --->   "%gamma_pack_V = call i64 @_ssdm_op_Read.m_axi.i64P(i64* %GAMMA_addr)" [BN/bn.cpp:36]   --->   Operation 164 'read' 'gamma_pack_V' <Predicate = (!icmp_ln33)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 165 [1/1] (8.75ns)   --->   "%moving_mean_pack_V = call i64 @_ssdm_op_Read.m_axi.i64P(i64* %M_M_addr)" [BN/bn.cpp:37]   --->   Operation 165 'read' 'moving_mean_pack_V' <Predicate = (!icmp_ln33)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 166 [1/1] (8.75ns)   --->   "%moving_variance_pack = call i64 @_ssdm_op_Read.m_axi.i64P(i64* %M_V_addr)" [BN/bn.cpp:38]   --->   Operation 166 'read' 'moving_variance_pack' <Predicate = (!icmp_ln33)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 167 [1/1] (1.76ns)   --->   "br label %1" [BN/bn.cpp:40]   --->   Operation 167 'br' <Predicate = (!icmp_ln33)> <Delay = 1.76>
ST_9 : Operation 168 [5/5] (8.75ns)   --->   "%OUT_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %OUT_addr)" [BN/bn.cpp:57]   --->   Operation 168 'writeresp' 'OUT_addr_wr_resp' <Predicate = (icmp_ln33)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 8.75>
ST_10 : Operation 169 [1/1] (0.00ns)   --->   "%k_0 = phi i3 [ 0, %0 ], [ %k, %_ZN13ap_fixed_baseILi17ELi7ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi16ELi6ELb1ELS0_0ELS1_0ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit9.i83 ]"   --->   Operation 169 'phi' 'k_0' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 170 [1/1] (1.13ns)   --->   "%icmp_ln40 = icmp eq i3 %k_0, -4" [BN/bn.cpp:40]   --->   Operation 170 'icmp' 'icmp_ln40' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 171 [1/1] (0.00ns)   --->   "%empty_33 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)"   --->   Operation 171 'speclooptripcount' 'empty_33' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 172 [1/1] (1.65ns)   --->   "%k = add i3 %k_0, 1" [BN/bn.cpp:40]   --->   Operation 172 'add' 'k' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 173 [1/1] (0.00ns)   --->   "br i1 %icmp_ln40, label %2, label %_ZN13ap_fixed_baseILi17ELi7ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi16ELi6ELb1ELS0_0ELS1_0ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit9.i83" [BN/bn.cpp:40]   --->   Operation 173 'br' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 174 [1/1] (0.00ns)   --->   "%trunc_ln41 = trunc i3 %k_0 to i2" [BN/bn.cpp:41]   --->   Operation 174 'trunc' 'trunc_ln41' <Predicate = (!icmp_ln40)> <Delay = 0.00>
ST_10 : Operation 175 [1/1] (0.00ns)   --->   "%Lo_assign = call i6 @_ssdm_op_BitConcatenate.i6.i2.i4(i2 %trunc_ln41, i4 0)" [BN/bn.cpp:41]   --->   Operation 175 'bitconcatenate' 'Lo_assign' <Predicate = (!icmp_ln40)> <Delay = 0.00>
ST_10 : Operation 176 [1/1] (0.00ns)   --->   "%or_ln41 = or i6 %Lo_assign, 15" [BN/bn.cpp:41]   --->   Operation 176 'or' 'or_ln41' <Predicate = (!icmp_ln40)> <Delay = 0.00>
ST_10 : Operation 177 [1/1] (1.42ns)   --->   "%icmp_ln647 = icmp ugt i6 %Lo_assign, %or_ln41" [BN/bn.cpp:41]   --->   Operation 177 'icmp' 'icmp_ln647' <Predicate = (!icmp_ln40)> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 178 [1/1] (1.42ns)   --->   "%icmp_ln647_1 = icmp ugt i6 %Lo_assign, %or_ln41" [BN/bn.cpp:42]   --->   Operation 178 'icmp' 'icmp_ln647_1' <Predicate = (!icmp_ln40)> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 179 [1/1] (1.42ns)   --->   "%icmp_ln647_2 = icmp ugt i6 %Lo_assign, %or_ln41" [BN/bn.cpp:43]   --->   Operation 179 'icmp' 'icmp_ln647_2' <Predicate = (!icmp_ln40)> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 180 [1/1] (1.42ns)   --->   "%icmp_ln647_3 = icmp ugt i6 %Lo_assign, %or_ln41" [BN/bn.cpp:44]   --->   Operation 180 'icmp' 'icmp_ln647_3' <Predicate = (!icmp_ln40)> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 181 [1/1] (1.42ns)   --->   "%icmp_ln647_4 = icmp ugt i6 %Lo_assign, %or_ln41" [BN/bn.cpp:45]   --->   Operation 181 'icmp' 'icmp_ln647_4' <Predicate = (!icmp_ln40)> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 182 [1/1] (0.00ns)   --->   "%zext_ln647_16 = zext i6 %Lo_assign to i7" [BN/bn.cpp:45]   --->   Operation 182 'zext' 'zext_ln647_16' <Predicate = (!icmp_ln40)> <Delay = 0.00>
ST_10 : Operation 183 [1/1] (0.00ns)   --->   "%zext_ln647_17 = zext i6 %or_ln41 to i7" [BN/bn.cpp:45]   --->   Operation 183 'zext' 'zext_ln647_17' <Predicate = (!icmp_ln40)> <Delay = 0.00>
ST_10 : Operation 184 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln647_8)   --->   "%tmp_35 = call i64 @llvm.part.select.i64(i64 %moving_variance_pack, i32 63, i32 0)" [BN/bn.cpp:45]   --->   Operation 184 'partselect' 'tmp_35' <Predicate = (!icmp_ln40)> <Delay = 0.00>
ST_10 : Operation 185 [1/1] (1.82ns)   --->   "%sub_ln647_12 = sub i7 %zext_ln647_16, %zext_ln647_17" [BN/bn.cpp:45]   --->   Operation 185 'sub' 'sub_ln647_12' <Predicate = (!icmp_ln40)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 186 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln647_8)   --->   "%xor_ln647_4 = xor i7 %zext_ln647_16, 63" [BN/bn.cpp:45]   --->   Operation 186 'xor' 'xor_ln647_4' <Predicate = (!icmp_ln40)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 187 [1/1] (1.82ns)   --->   "%sub_ln647_13 = sub i7 %zext_ln647_17, %zext_ln647_16" [BN/bn.cpp:45]   --->   Operation 187 'sub' 'sub_ln647_13' <Predicate = (!icmp_ln40)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 188 [1/1] (0.00ns) (grouped into LUT with out node sub_ln647_14)   --->   "%select_ln647_12 = select i1 %icmp_ln647_4, i7 %sub_ln647_12, i7 %sub_ln647_13" [BN/bn.cpp:45]   --->   Operation 188 'select' 'select_ln647_12' <Predicate = (!icmp_ln40)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 189 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln647_8)   --->   "%select_ln647_13 = select i1 %icmp_ln647_4, i64 %tmp_35, i64 %moving_variance_pack" [BN/bn.cpp:45]   --->   Operation 189 'select' 'select_ln647_13' <Predicate = (!icmp_ln40)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 190 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln647_8)   --->   "%select_ln647_14 = select i1 %icmp_ln647_4, i7 %xor_ln647_4, i7 %zext_ln647_16" [BN/bn.cpp:45]   --->   Operation 190 'select' 'select_ln647_14' <Predicate = (!icmp_ln40)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 191 [1/1] (1.87ns) (out node of the LUT)   --->   "%sub_ln647_14 = sub i7 63, %select_ln647_12" [BN/bn.cpp:45]   --->   Operation 191 'sub' 'sub_ln647_14' <Predicate = (!icmp_ln40)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 192 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln647_8)   --->   "%zext_ln647_18 = zext i7 %select_ln647_14 to i64" [BN/bn.cpp:45]   --->   Operation 192 'zext' 'zext_ln647_18' <Predicate = (!icmp_ln40)> <Delay = 0.00>
ST_10 : Operation 193 [1/1] (4.59ns) (out node of the LUT)   --->   "%lshr_ln647_8 = lshr i64 %select_ln647_13, %zext_ln647_18" [BN/bn.cpp:45]   --->   Operation 193 'lshr' 'lshr_ln647_8' <Predicate = (!icmp_ln40)> <Delay = 4.59> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.04> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 194 [1/1] (0.00ns)   --->   "%p_Val2_load = load i64* %p_Val2_s" [BN/bn.cpp:57]   --->   Operation 194 'load' 'p_Val2_load' <Predicate = (icmp_ln40)> <Delay = 0.00>
ST_10 : Operation 195 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i64P(i64* %OUT_addr, i64 %p_Val2_load, i8 -1)" [BN/bn.cpp:57]   --->   Operation 195 'write' <Predicate = (icmp_ln40)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 196 [1/1] (0.00ns)   --->   "br label %.preheader" [BN/bn.cpp:33]   --->   Operation 196 'br' <Predicate = (icmp_ln40)> <Delay = 0.00>

State 11 <SV = 10> <Delay = 7.63>
ST_11 : Operation 197 [1/1] (0.00ns)   --->   "%zext_ln647 = zext i6 %Lo_assign to i7" [BN/bn.cpp:41]   --->   Operation 197 'zext' 'zext_ln647' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 198 [1/1] (0.00ns)   --->   "%zext_ln647_1 = zext i6 %or_ln41 to i7" [BN/bn.cpp:41]   --->   Operation 198 'zext' 'zext_ln647_1' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 199 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln647)   --->   "%tmp_31 = call i64 @llvm.part.select.i64(i64 %in_pack_V, i32 63, i32 0)" [BN/bn.cpp:41]   --->   Operation 199 'partselect' 'tmp_31' <Predicate = (icmp_ln647)> <Delay = 0.00>
ST_11 : Operation 200 [1/1] (1.82ns)   --->   "%sub_ln647 = sub i7 %zext_ln647, %zext_ln647_1" [BN/bn.cpp:41]   --->   Operation 200 'sub' 'sub_ln647' <Predicate = (icmp_ln647)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 201 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln647)   --->   "%xor_ln647 = xor i7 %zext_ln647, 63" [BN/bn.cpp:41]   --->   Operation 201 'xor' 'xor_ln647' <Predicate = (icmp_ln647)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 202 [1/1] (1.82ns)   --->   "%sub_ln647_1 = sub i7 %zext_ln647_1, %zext_ln647" [BN/bn.cpp:41]   --->   Operation 202 'sub' 'sub_ln647_1' <Predicate = (!icmp_ln647)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 203 [1/1] (0.00ns) (grouped into LUT with out node sub_ln647_2)   --->   "%select_ln647 = select i1 %icmp_ln647, i7 %sub_ln647, i7 %sub_ln647_1" [BN/bn.cpp:41]   --->   Operation 203 'select' 'select_ln647' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 204 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln647)   --->   "%select_ln647_1 = select i1 %icmp_ln647, i64 %tmp_31, i64 %in_pack_V" [BN/bn.cpp:41]   --->   Operation 204 'select' 'select_ln647_1' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 205 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln647)   --->   "%select_ln647_2 = select i1 %icmp_ln647, i7 %xor_ln647, i7 %zext_ln647" [BN/bn.cpp:41]   --->   Operation 205 'select' 'select_ln647_2' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 206 [1/1] (1.87ns) (out node of the LUT)   --->   "%sub_ln647_2 = sub i7 63, %select_ln647" [BN/bn.cpp:41]   --->   Operation 206 'sub' 'sub_ln647_2' <Predicate = true> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 207 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln647)   --->   "%zext_ln647_2 = zext i7 %select_ln647_2 to i64" [BN/bn.cpp:41]   --->   Operation 207 'zext' 'zext_ln647_2' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 208 [1/1] (0.00ns) (grouped into LUT with out node p_Result_s)   --->   "%zext_ln647_3 = zext i7 %sub_ln647_2 to i64" [BN/bn.cpp:41]   --->   Operation 208 'zext' 'zext_ln647_3' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 209 [1/1] (4.59ns) (out node of the LUT)   --->   "%lshr_ln647 = lshr i64 %select_ln647_1, %zext_ln647_2" [BN/bn.cpp:41]   --->   Operation 209 'lshr' 'lshr_ln647' <Predicate = true> <Delay = 4.59> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.04> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 210 [1/1] (0.00ns) (grouped into LUT with out node p_Result_s)   --->   "%lshr_ln647_1 = lshr i64 -1, %zext_ln647_3" [BN/bn.cpp:41]   --->   Operation 210 'lshr' 'lshr_ln647_1' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.04> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 211 [1/1] (3.04ns) (out node of the LUT)   --->   "%p_Result_s = and i64 %lshr_ln647, %lshr_ln647_1" [BN/bn.cpp:41]   --->   Operation 211 'and' 'p_Result_s' <Predicate = true> <Delay = 3.04> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 212 [1/1] (0.00ns)   --->   "%in_m_3_V = trunc i64 %p_Result_s to i16" [BN/bn.cpp:41]   --->   Operation 212 'trunc' 'in_m_3_V' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 213 [1/1] (0.00ns)   --->   "%zext_ln647_4 = zext i6 %Lo_assign to i7" [BN/bn.cpp:42]   --->   Operation 213 'zext' 'zext_ln647_4' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 214 [1/1] (0.00ns)   --->   "%zext_ln647_5 = zext i6 %or_ln41 to i7" [BN/bn.cpp:42]   --->   Operation 214 'zext' 'zext_ln647_5' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 215 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln647_2)   --->   "%tmp_32 = call i64 @llvm.part.select.i64(i64 %beta_pack_V, i32 63, i32 0)" [BN/bn.cpp:42]   --->   Operation 215 'partselect' 'tmp_32' <Predicate = (icmp_ln647_1)> <Delay = 0.00>
ST_11 : Operation 216 [1/1] (1.82ns)   --->   "%sub_ln647_3 = sub i7 %zext_ln647_4, %zext_ln647_5" [BN/bn.cpp:42]   --->   Operation 216 'sub' 'sub_ln647_3' <Predicate = (icmp_ln647_1)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 217 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln647_2)   --->   "%xor_ln647_1 = xor i7 %zext_ln647_4, 63" [BN/bn.cpp:42]   --->   Operation 217 'xor' 'xor_ln647_1' <Predicate = (icmp_ln647_1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 218 [1/1] (1.82ns)   --->   "%sub_ln647_4 = sub i7 %zext_ln647_5, %zext_ln647_4" [BN/bn.cpp:42]   --->   Operation 218 'sub' 'sub_ln647_4' <Predicate = (!icmp_ln647_1)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 219 [1/1] (0.00ns) (grouped into LUT with out node sub_ln647_5)   --->   "%select_ln647_3 = select i1 %icmp_ln647_1, i7 %sub_ln647_3, i7 %sub_ln647_4" [BN/bn.cpp:42]   --->   Operation 219 'select' 'select_ln647_3' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 220 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln647_2)   --->   "%select_ln647_4 = select i1 %icmp_ln647_1, i64 %tmp_32, i64 %beta_pack_V" [BN/bn.cpp:42]   --->   Operation 220 'select' 'select_ln647_4' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 221 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln647_2)   --->   "%select_ln647_5 = select i1 %icmp_ln647_1, i7 %xor_ln647_1, i7 %zext_ln647_4" [BN/bn.cpp:42]   --->   Operation 221 'select' 'select_ln647_5' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 222 [1/1] (1.87ns) (out node of the LUT)   --->   "%sub_ln647_5 = sub i7 63, %select_ln647_3" [BN/bn.cpp:42]   --->   Operation 222 'sub' 'sub_ln647_5' <Predicate = true> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 223 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln647_2)   --->   "%zext_ln647_6 = zext i7 %select_ln647_5 to i64" [BN/bn.cpp:42]   --->   Operation 223 'zext' 'zext_ln647_6' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 224 [1/1] (0.00ns) (grouped into LUT with out node p_Result_16)   --->   "%zext_ln647_7 = zext i7 %sub_ln647_5 to i64" [BN/bn.cpp:42]   --->   Operation 224 'zext' 'zext_ln647_7' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 225 [1/1] (4.59ns) (out node of the LUT)   --->   "%lshr_ln647_2 = lshr i64 %select_ln647_4, %zext_ln647_6" [BN/bn.cpp:42]   --->   Operation 225 'lshr' 'lshr_ln647_2' <Predicate = true> <Delay = 4.59> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.04> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 226 [1/1] (0.00ns) (grouped into LUT with out node p_Result_16)   --->   "%lshr_ln647_3 = lshr i64 -1, %zext_ln647_7" [BN/bn.cpp:42]   --->   Operation 226 'lshr' 'lshr_ln647_3' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.04> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 227 [1/1] (3.04ns) (out node of the LUT)   --->   "%p_Result_16 = and i64 %lshr_ln647_2, %lshr_ln647_3" [BN/bn.cpp:42]   --->   Operation 227 'and' 'p_Result_16' <Predicate = true> <Delay = 3.04> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 228 [1/1] (0.00ns)   --->   "%zext_ln647_8 = zext i6 %Lo_assign to i7" [BN/bn.cpp:43]   --->   Operation 228 'zext' 'zext_ln647_8' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 229 [1/1] (0.00ns)   --->   "%zext_ln647_9 = zext i6 %or_ln41 to i7" [BN/bn.cpp:43]   --->   Operation 229 'zext' 'zext_ln647_9' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 230 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln647_4)   --->   "%tmp_33 = call i64 @llvm.part.select.i64(i64 %gamma_pack_V, i32 63, i32 0)" [BN/bn.cpp:43]   --->   Operation 230 'partselect' 'tmp_33' <Predicate = (icmp_ln647_2)> <Delay = 0.00>
ST_11 : Operation 231 [1/1] (1.82ns)   --->   "%sub_ln647_6 = sub i7 %zext_ln647_8, %zext_ln647_9" [BN/bn.cpp:43]   --->   Operation 231 'sub' 'sub_ln647_6' <Predicate = (icmp_ln647_2)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 232 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln647_4)   --->   "%xor_ln647_2 = xor i7 %zext_ln647_8, 63" [BN/bn.cpp:43]   --->   Operation 232 'xor' 'xor_ln647_2' <Predicate = (icmp_ln647_2)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 233 [1/1] (1.82ns)   --->   "%sub_ln647_7 = sub i7 %zext_ln647_9, %zext_ln647_8" [BN/bn.cpp:43]   --->   Operation 233 'sub' 'sub_ln647_7' <Predicate = (!icmp_ln647_2)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 234 [1/1] (0.00ns) (grouped into LUT with out node sub_ln647_8)   --->   "%select_ln647_6 = select i1 %icmp_ln647_2, i7 %sub_ln647_6, i7 %sub_ln647_7" [BN/bn.cpp:43]   --->   Operation 234 'select' 'select_ln647_6' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 235 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln647_4)   --->   "%select_ln647_7 = select i1 %icmp_ln647_2, i64 %tmp_33, i64 %gamma_pack_V" [BN/bn.cpp:43]   --->   Operation 235 'select' 'select_ln647_7' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 236 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln647_4)   --->   "%select_ln647_8 = select i1 %icmp_ln647_2, i7 %xor_ln647_2, i7 %zext_ln647_8" [BN/bn.cpp:43]   --->   Operation 236 'select' 'select_ln647_8' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 237 [1/1] (1.87ns) (out node of the LUT)   --->   "%sub_ln647_8 = sub i7 63, %select_ln647_6" [BN/bn.cpp:43]   --->   Operation 237 'sub' 'sub_ln647_8' <Predicate = true> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 238 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln647_4)   --->   "%zext_ln647_10 = zext i7 %select_ln647_8 to i64" [BN/bn.cpp:43]   --->   Operation 238 'zext' 'zext_ln647_10' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 239 [1/1] (0.00ns) (grouped into LUT with out node p_Result_17)   --->   "%zext_ln647_11 = zext i7 %sub_ln647_8 to i64" [BN/bn.cpp:43]   --->   Operation 239 'zext' 'zext_ln647_11' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 240 [1/1] (4.59ns) (out node of the LUT)   --->   "%lshr_ln647_4 = lshr i64 %select_ln647_7, %zext_ln647_10" [BN/bn.cpp:43]   --->   Operation 240 'lshr' 'lshr_ln647_4' <Predicate = true> <Delay = 4.59> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.04> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 241 [1/1] (0.00ns) (grouped into LUT with out node p_Result_17)   --->   "%lshr_ln647_5 = lshr i64 -1, %zext_ln647_11" [BN/bn.cpp:43]   --->   Operation 241 'lshr' 'lshr_ln647_5' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.04> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 242 [1/1] (3.04ns) (out node of the LUT)   --->   "%p_Result_17 = and i64 %lshr_ln647_4, %lshr_ln647_5" [BN/bn.cpp:43]   --->   Operation 242 'and' 'p_Result_17' <Predicate = true> <Delay = 3.04> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 243 [1/1] (0.00ns)   --->   "%gamma_m_3_V = trunc i64 %p_Result_17 to i16" [BN/bn.cpp:43]   --->   Operation 243 'trunc' 'gamma_m_3_V' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 244 [1/1] (0.00ns)   --->   "%zext_ln647_12 = zext i6 %Lo_assign to i7" [BN/bn.cpp:44]   --->   Operation 244 'zext' 'zext_ln647_12' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 245 [1/1] (0.00ns)   --->   "%zext_ln647_13 = zext i6 %or_ln41 to i7" [BN/bn.cpp:44]   --->   Operation 245 'zext' 'zext_ln647_13' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 246 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln647_6)   --->   "%tmp_34 = call i64 @llvm.part.select.i64(i64 %moving_mean_pack_V, i32 63, i32 0)" [BN/bn.cpp:44]   --->   Operation 246 'partselect' 'tmp_34' <Predicate = (icmp_ln647_3)> <Delay = 0.00>
ST_11 : Operation 247 [1/1] (1.82ns)   --->   "%sub_ln647_9 = sub i7 %zext_ln647_12, %zext_ln647_13" [BN/bn.cpp:44]   --->   Operation 247 'sub' 'sub_ln647_9' <Predicate = (icmp_ln647_3)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 248 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln647_6)   --->   "%xor_ln647_3 = xor i7 %zext_ln647_12, 63" [BN/bn.cpp:44]   --->   Operation 248 'xor' 'xor_ln647_3' <Predicate = (icmp_ln647_3)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 249 [1/1] (1.82ns)   --->   "%sub_ln647_10 = sub i7 %zext_ln647_13, %zext_ln647_12" [BN/bn.cpp:44]   --->   Operation 249 'sub' 'sub_ln647_10' <Predicate = (!icmp_ln647_3)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 250 [1/1] (0.00ns) (grouped into LUT with out node sub_ln647_11)   --->   "%select_ln647_9 = select i1 %icmp_ln647_3, i7 %sub_ln647_9, i7 %sub_ln647_10" [BN/bn.cpp:44]   --->   Operation 250 'select' 'select_ln647_9' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 251 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln647_6)   --->   "%select_ln647_10 = select i1 %icmp_ln647_3, i64 %tmp_34, i64 %moving_mean_pack_V" [BN/bn.cpp:44]   --->   Operation 251 'select' 'select_ln647_10' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 252 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln647_6)   --->   "%select_ln647_11 = select i1 %icmp_ln647_3, i7 %xor_ln647_3, i7 %zext_ln647_12" [BN/bn.cpp:44]   --->   Operation 252 'select' 'select_ln647_11' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 253 [1/1] (1.87ns) (out node of the LUT)   --->   "%sub_ln647_11 = sub i7 63, %select_ln647_9" [BN/bn.cpp:44]   --->   Operation 253 'sub' 'sub_ln647_11' <Predicate = true> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 254 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln647_6)   --->   "%zext_ln647_14 = zext i7 %select_ln647_11 to i64" [BN/bn.cpp:44]   --->   Operation 254 'zext' 'zext_ln647_14' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 255 [1/1] (0.00ns) (grouped into LUT with out node p_Result_18)   --->   "%zext_ln647_15 = zext i7 %sub_ln647_11 to i64" [BN/bn.cpp:44]   --->   Operation 255 'zext' 'zext_ln647_15' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 256 [1/1] (4.59ns) (out node of the LUT)   --->   "%lshr_ln647_6 = lshr i64 %select_ln647_10, %zext_ln647_14" [BN/bn.cpp:44]   --->   Operation 256 'lshr' 'lshr_ln647_6' <Predicate = true> <Delay = 4.59> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.04> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 257 [1/1] (0.00ns) (grouped into LUT with out node p_Result_18)   --->   "%lshr_ln647_7 = lshr i64 -1, %zext_ln647_15" [BN/bn.cpp:44]   --->   Operation 257 'lshr' 'lshr_ln647_7' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.04> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 258 [1/1] (3.04ns) (out node of the LUT)   --->   "%p_Result_18 = and i64 %lshr_ln647_6, %lshr_ln647_7" [BN/bn.cpp:44]   --->   Operation 258 'and' 'p_Result_18' <Predicate = true> <Delay = 3.04> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 259 [1/1] (0.00ns)   --->   "%moving_mean_m_3_V = trunc i64 %p_Result_18 to i16" [BN/bn.cpp:44]   --->   Operation 259 'trunc' 'moving_mean_m_3_V' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 260 [1/1] (0.00ns) (grouped into LUT with out node p_Result_19)   --->   "%zext_ln647_19 = zext i7 %sub_ln647_14 to i64" [BN/bn.cpp:45]   --->   Operation 260 'zext' 'zext_ln647_19' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 261 [1/1] (0.00ns) (grouped into LUT with out node p_Result_19)   --->   "%lshr_ln647_9 = lshr i64 -1, %zext_ln647_19" [BN/bn.cpp:45]   --->   Operation 261 'lshr' 'lshr_ln647_9' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.04> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 262 [1/1] (3.04ns) (out node of the LUT)   --->   "%p_Result_19 = and i64 %lshr_ln647_8, %lshr_ln647_9" [BN/bn.cpp:45]   --->   Operation 262 'and' 'p_Result_19' <Predicate = true> <Delay = 3.04> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 263 [1/1] (0.00ns)   --->   "%moving_variance_m_3 = trunc i64 %p_Result_19 to i16" [BN/bn.cpp:45]   --->   Operation 263 'trunc' 'moving_variance_m_3' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 264 [1/1] (0.00ns)   --->   "%lhs_V = sext i16 %moving_variance_m_3 to i17" [BN/bn.cpp:46]   --->   Operation 264 'sext' 'lhs_V' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 265 [1/1] (2.07ns)   --->   "%ret_V_10 = add nsw i17 1, %lhs_V" [BN/bn.cpp:46]   --->   Operation 265 'add' 'ret_V_10' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 266 [1/1] (0.00ns)   --->   "%p_Result_20 = call i1 @_ssdm_op_BitSelect.i1.i17.i32(i17 %ret_V_10, i32 16)" [BN/bn.cpp:46]   --->   Operation 266 'bitselect' 'p_Result_20' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 267 [1/1] (2.07ns)   --->   "%tmp_num_V = add i16 1, %moving_variance_m_3" [BN/bn.cpp:46]   --->   Operation 267 'add' 'tmp_num_V' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 268 [1/1] (0.00ns)   --->   "%p_Result_21 = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 %tmp_num_V, i32 15)" [BN/bn.cpp:46]   --->   Operation 268 'bitselect' 'p_Result_21' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 269 [1/1] (0.00ns) (grouped into LUT with out node select_ln388_1)   --->   "%xor_ln786 = xor i1 %p_Result_21, true" [BN/bn.cpp:46]   --->   Operation 269 'xor' 'xor_ln786' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 270 [1/1] (0.00ns) (grouped into LUT with out node select_ln388_1)   --->   "%underflow = and i1 %p_Result_20, %xor_ln786" [BN/bn.cpp:46]   --->   Operation 270 'and' 'underflow' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 271 [1/1] (0.00ns) (grouped into LUT with out node x_V)   --->   "%xor_ln340 = xor i1 %p_Result_20, %p_Result_21" [BN/bn.cpp:46]   --->   Operation 271 'xor' 'xor_ln340' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 272 [1/1] (0.00ns) (grouped into LUT with out node x_V)   --->   "%xor_ln340_1 = xor i1 %p_Result_20, true" [BN/bn.cpp:46]   --->   Operation 272 'xor' 'xor_ln340_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 273 [1/1] (0.00ns) (grouped into LUT with out node x_V)   --->   "%or_ln340 = or i1 %p_Result_21, %xor_ln340_1" [BN/bn.cpp:46]   --->   Operation 273 'or' 'or_ln340' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 274 [1/1] (0.00ns) (grouped into LUT with out node x_V)   --->   "%select_ln340_1 = select i1 %xor_ln340, i16 32767, i16 %tmp_num_V" [BN/bn.cpp:46]   --->   Operation 274 'select' 'select_ln340_1' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 275 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln388_1 = select i1 %underflow, i16 -32768, i16 %tmp_num_V" [BN/bn.cpp:46]   --->   Operation 275 'select' 'select_ln388_1' <Predicate = true> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 276 [1/1] (0.97ns) (out node of the LUT)   --->   "%x_V = select i1 %or_ln340, i16 %select_ln340_1, i16 %select_ln388_1" [BN/bn.cpp:46]   --->   Operation 276 'select' 'x_V' <Predicate = true> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 277 [1/1] (0.00ns)   --->   "%trunc_ln728 = trunc i64 %p_Result_16 to i16" [BN/bn.cpp:49]   --->   Operation 277 'trunc' 'trunc_ln728' <Predicate = true> <Delay = 0.00>

State 12 <SV = 11> <Delay = 7.98>
ST_12 : Operation 278 [9/9] (7.98ns)   --->   "%x_sqrt_V = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:48]   --->   Operation 278 'call' 'x_sqrt_V' <Predicate = true> <Delay = 7.98> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_12 : Operation 279 [1/1] (0.00ns)   --->   "%lhs_V_1 = sext i16 %in_m_3_V to i17" [BN/bn.cpp:49]   --->   Operation 279 'sext' 'lhs_V_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 280 [1/1] (0.00ns)   --->   "%rhs_V = sext i16 %moving_mean_m_3_V to i17" [BN/bn.cpp:49]   --->   Operation 280 'sext' 'rhs_V' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 281 [1/1] (0.00ns) (grouped into DSP with root node ret_V_11)   --->   "%ret_V = sub i17 %lhs_V_1, %rhs_V" [BN/bn.cpp:49]   --->   Operation 281 'sub' 'ret_V' <Predicate = true> <Delay = 0.00> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_12 : Operation 282 [1/1] (0.00ns)   --->   "%r_V = sext i16 %gamma_m_3_V to i33" [BN/bn.cpp:49]   --->   Operation 282 'sext' 'r_V' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 283 [1/1] (0.00ns) (grouped into DSP with root node ret_V_11)   --->   "%sext_ln1118 = sext i17 %ret_V to i33" [BN/bn.cpp:49]   --->   Operation 283 'sext' 'sext_ln1118' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 284 [1/1] (3.36ns) (grouped into DSP with root node ret_V_11)   --->   "%r_V_2 = mul nsw i33 %r_V, %sext_ln1118" [BN/bn.cpp:49]   --->   Operation 284 'mul' 'r_V_2' <Predicate = true> <Delay = 3.36> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_12 : Operation 285 [1/1] (0.00ns)   --->   "%rhs_V_1 = call i26 @_ssdm_op_BitConcatenate.i26.i16.i10(i16 %trunc_ln728, i10 0)" [BN/bn.cpp:49]   --->   Operation 285 'bitconcatenate' 'rhs_V_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 286 [1/1] (0.00ns)   --->   "%sext_ln728 = sext i26 %rhs_V_1 to i33" [BN/bn.cpp:49]   --->   Operation 286 'sext' 'sext_ln728' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 287 [1/1] (3.02ns) (root node of the DSP)   --->   "%ret_V_11 = add i33 %r_V_2, %sext_ln728" [BN/bn.cpp:49]   --->   Operation 287 'add' 'ret_V_11' <Predicate = true> <Delay = 3.02> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 13 <SV = 12> <Delay = 8.27>
ST_13 : Operation 288 [8/9] (8.27ns)   --->   "%x_sqrt_V = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:48]   --->   Operation 288 'call' 'x_sqrt_V' <Predicate = true> <Delay = 8.27> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 14 <SV = 13> <Delay = 8.27>
ST_14 : Operation 289 [7/9] (8.27ns)   --->   "%x_sqrt_V = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:48]   --->   Operation 289 'call' 'x_sqrt_V' <Predicate = true> <Delay = 8.27> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 15 <SV = 14> <Delay = 8.27>
ST_15 : Operation 290 [6/9] (8.27ns)   --->   "%x_sqrt_V = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:48]   --->   Operation 290 'call' 'x_sqrt_V' <Predicate = true> <Delay = 8.27> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 16 <SV = 15> <Delay = 8.27>
ST_16 : Operation 291 [5/9] (8.27ns)   --->   "%x_sqrt_V = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:48]   --->   Operation 291 'call' 'x_sqrt_V' <Predicate = true> <Delay = 8.27> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 17 <SV = 16> <Delay = 8.27>
ST_17 : Operation 292 [4/9] (8.27ns)   --->   "%x_sqrt_V = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:48]   --->   Operation 292 'call' 'x_sqrt_V' <Predicate = true> <Delay = 8.27> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 18 <SV = 17> <Delay = 8.27>
ST_18 : Operation 293 [3/9] (8.27ns)   --->   "%x_sqrt_V = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:48]   --->   Operation 293 'call' 'x_sqrt_V' <Predicate = true> <Delay = 8.27> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 19 <SV = 18> <Delay = 8.27>
ST_19 : Operation 294 [2/9] (8.27ns)   --->   "%x_sqrt_V = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:48]   --->   Operation 294 'call' 'x_sqrt_V' <Predicate = true> <Delay = 8.27> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 20 <SV = 19> <Delay = 7.80>
ST_20 : Operation 295 [1/9] (7.80ns)   --->   "%x_sqrt_V = call fastcc i13 @"sqrt_fixed<16, 6>"(i16 %x_V)" [E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:48]   --->   Operation 295 'call' 'x_sqrt_V' <Predicate = true> <Delay = 7.80> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 21 <SV = 20> <Delay = 4.46>
ST_21 : Operation 296 [1/1] (0.00ns)   --->   "%tmp_s = call i43 @_ssdm_op_BitConcatenate.i43.i33.i10(i33 %ret_V_11, i10 0)" [BN/bn.cpp:49]   --->   Operation 296 'bitconcatenate' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 297 [1/1] (0.00ns)   --->   "%t_V = sext i43 %tmp_s to i44" [BN/bn.cpp:49]   --->   Operation 297 'sext' 't_V' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 298 [1/1] (0.00ns)   --->   "%zext_ln1148 = zext i13 %x_sqrt_V to i44" [BN/bn.cpp:49]   --->   Operation 298 'zext' 'zext_ln1148' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 299 [48/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 299 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 21> <Delay = 4.46>
ST_22 : Operation 300 [47/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 300 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 22> <Delay = 4.46>
ST_23 : Operation 301 [46/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 301 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 23> <Delay = 4.46>
ST_24 : Operation 302 [45/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 302 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 24> <Delay = 4.46>
ST_25 : Operation 303 [44/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 303 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 26 <SV = 25> <Delay = 4.46>
ST_26 : Operation 304 [43/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 304 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 27 <SV = 26> <Delay = 4.46>
ST_27 : Operation 305 [42/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 305 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 28 <SV = 27> <Delay = 4.46>
ST_28 : Operation 306 [41/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 306 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 29 <SV = 28> <Delay = 4.46>
ST_29 : Operation 307 [40/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 307 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 30 <SV = 29> <Delay = 4.46>
ST_30 : Operation 308 [39/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 308 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 31 <SV = 30> <Delay = 4.46>
ST_31 : Operation 309 [38/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 309 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 32 <SV = 31> <Delay = 4.46>
ST_32 : Operation 310 [37/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 310 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 33 <SV = 32> <Delay = 4.46>
ST_33 : Operation 311 [36/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 311 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 34 <SV = 33> <Delay = 4.46>
ST_34 : Operation 312 [35/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 312 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 35 <SV = 34> <Delay = 4.46>
ST_35 : Operation 313 [34/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 313 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 36 <SV = 35> <Delay = 4.46>
ST_36 : Operation 314 [33/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 314 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 37 <SV = 36> <Delay = 4.46>
ST_37 : Operation 315 [32/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 315 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 38 <SV = 37> <Delay = 4.46>
ST_38 : Operation 316 [31/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 316 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 39 <SV = 38> <Delay = 4.46>
ST_39 : Operation 317 [30/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 317 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 40 <SV = 39> <Delay = 4.46>
ST_40 : Operation 318 [29/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 318 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 41 <SV = 40> <Delay = 4.46>
ST_41 : Operation 319 [28/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 319 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 42 <SV = 41> <Delay = 4.46>
ST_42 : Operation 320 [27/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 320 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 43 <SV = 42> <Delay = 4.46>
ST_43 : Operation 321 [26/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 321 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 44 <SV = 43> <Delay = 4.46>
ST_44 : Operation 322 [25/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 322 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 45 <SV = 44> <Delay = 4.46>
ST_45 : Operation 323 [24/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 323 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 46 <SV = 45> <Delay = 4.46>
ST_46 : Operation 324 [23/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 324 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 47 <SV = 46> <Delay = 4.46>
ST_47 : Operation 325 [22/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 325 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 48 <SV = 47> <Delay = 4.46>
ST_48 : Operation 326 [21/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 326 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 49 <SV = 48> <Delay = 4.46>
ST_49 : Operation 327 [20/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 327 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 50 <SV = 49> <Delay = 4.46>
ST_50 : Operation 328 [19/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 328 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 51 <SV = 50> <Delay = 4.46>
ST_51 : Operation 329 [18/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 329 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 52 <SV = 51> <Delay = 4.46>
ST_52 : Operation 330 [17/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 330 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 53 <SV = 52> <Delay = 4.46>
ST_53 : Operation 331 [16/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 331 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 54 <SV = 53> <Delay = 4.46>
ST_54 : Operation 332 [15/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 332 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 55 <SV = 54> <Delay = 4.46>
ST_55 : Operation 333 [14/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 333 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 56 <SV = 55> <Delay = 4.46>
ST_56 : Operation 334 [13/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 334 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 57 <SV = 56> <Delay = 4.46>
ST_57 : Operation 335 [12/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 335 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 58 <SV = 57> <Delay = 4.46>
ST_58 : Operation 336 [11/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 336 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 59 <SV = 58> <Delay = 4.46>
ST_59 : Operation 337 [10/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 337 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 60 <SV = 59> <Delay = 4.46>
ST_60 : Operation 338 [9/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 338 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 61 <SV = 60> <Delay = 4.46>
ST_61 : Operation 339 [8/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 339 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 62 <SV = 61> <Delay = 4.46>
ST_62 : Operation 340 [7/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 340 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 63 <SV = 62> <Delay = 4.46>
ST_63 : Operation 341 [6/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 341 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 64 <SV = 63> <Delay = 4.46>
ST_64 : Operation 342 [5/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 342 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 65 <SV = 64> <Delay = 4.46>
ST_65 : Operation 343 [4/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 343 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 66 <SV = 65> <Delay = 4.46>
ST_66 : Operation 344 [3/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 344 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 67 <SV = 66> <Delay = 4.46>
ST_67 : Operation 345 [2/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 345 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 68 <SV = 67> <Delay = 8.51>
ST_68 : Operation 346 [1/48] (4.46ns)   --->   "%sdiv_ln1148 = sdiv i44 %t_V, %zext_ln1148" [BN/bn.cpp:49]   --->   Operation 346 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 4.46> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 47> <II = 44> <Delay = 4.46> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 347 [1/1] (0.00ns)   --->   "%p_Result_22 = call i1 @_ssdm_op_BitSelect.i1.i44.i32(i44 %sdiv_ln1148, i32 43)" [BN/bn.cpp:49]   --->   Operation 347 'bitselect' 'p_Result_22' <Predicate = true> <Delay = 0.00>
ST_68 : Operation 348 [1/1] (0.00ns)   --->   "%tmp_V = call i16 @_ssdm_op_PartSelect.i16.i44.i32.i32(i44 %sdiv_ln1148, i32 10, i32 25)" [BN/bn.cpp:49]   --->   Operation 348 'partselect' 'tmp_V' <Predicate = true> <Delay = 0.00>
ST_68 : Operation 349 [1/1] (0.00ns) (grouped into LUT with out node carry_1)   --->   "%p_Result_23 = call i1 @_ssdm_op_BitSelect.i1.i44.i32(i44 %sdiv_ln1148, i32 25)" [BN/bn.cpp:49]   --->   Operation 349 'bitselect' 'p_Result_23' <Predicate = true> <Delay = 0.00>
ST_68 : Operation 350 [1/1] (0.00ns)   --->   "%tmp_40 = call i1 @_ssdm_op_BitSelect.i1.i44.i32(i44 %sdiv_ln1148, i32 9)" [BN/bn.cpp:49]   --->   Operation 350 'bitselect' 'tmp_40' <Predicate = true> <Delay = 0.00>
ST_68 : Operation 351 [1/1] (0.00ns)   --->   "%zext_ln415 = zext i1 %tmp_40 to i16" [BN/bn.cpp:49]   --->   Operation 351 'zext' 'zext_ln415' <Predicate = true> <Delay = 0.00>
ST_68 : Operation 352 [1/1] (2.07ns)   --->   "%tmp_V_7 = add i16 %tmp_V, %zext_ln415" [BN/bn.cpp:49]   --->   Operation 352 'add' 'tmp_V_7' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 353 [1/1] (0.00ns) (grouped into LUT with out node carry_1)   --->   "%tmp_41 = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 %tmp_V_7, i32 15)" [BN/bn.cpp:49]   --->   Operation 353 'bitselect' 'tmp_41' <Predicate = true> <Delay = 0.00>
ST_68 : Operation 354 [1/1] (0.00ns) (grouped into LUT with out node carry_1)   --->   "%xor_ln416 = xor i1 %tmp_41, true" [BN/bn.cpp:49]   --->   Operation 354 'xor' 'xor_ln416' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 355 [1/1] (0.97ns) (out node of the LUT)   --->   "%carry_1 = and i1 %p_Result_23, %xor_ln416" [BN/bn.cpp:49]   --->   Operation 355 'and' 'carry_1' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 356 [1/1] (0.00ns)   --->   "%p_Result_24 = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 %tmp_V_7, i32 15)" [BN/bn.cpp:49]   --->   Operation 356 'bitselect' 'p_Result_24' <Predicate = true> <Delay = 0.00>
ST_68 : Operation 357 [1/1] (0.00ns)   --->   "%tmp = call i17 @_ssdm_op_PartSelect.i17.i44.i32.i32(i44 %sdiv_ln1148, i32 27, i32 43)" [BN/bn.cpp:49]   --->   Operation 357 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_68 : Operation 358 [1/1] (2.43ns)   --->   "%Range2_all_ones = icmp eq i17 %tmp, -1" [BN/bn.cpp:49]   --->   Operation 358 'icmp' 'Range2_all_ones' <Predicate = true> <Delay = 2.43> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 359 [1/1] (0.00ns)   --->   "%tmp_7 = call i18 @_ssdm_op_PartSelect.i18.i44.i32.i32(i44 %sdiv_ln1148, i32 26, i32 43)" [BN/bn.cpp:49]   --->   Operation 359 'partselect' 'tmp_7' <Predicate = true> <Delay = 0.00>
ST_68 : Operation 360 [1/1] (2.43ns)   --->   "%Range1_all_ones = icmp eq i18 %tmp_7, -1" [BN/bn.cpp:49]   --->   Operation 360 'icmp' 'Range1_all_ones' <Predicate = true> <Delay = 2.43> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 361 [1/1] (2.43ns)   --->   "%Range1_all_zeros = icmp eq i18 %tmp_7, 0" [BN/bn.cpp:49]   --->   Operation 361 'icmp' 'Range1_all_zeros' <Predicate = true> <Delay = 2.43> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 362 [1/1] (0.00ns) (grouped into LUT with out node and_ln786)   --->   "%tmp_43 = call i1 @_ssdm_op_BitSelect.i1.i44.i32(i44 %sdiv_ln1148, i32 26)" [BN/bn.cpp:49]   --->   Operation 362 'bitselect' 'tmp_43' <Predicate = true> <Delay = 0.00>
ST_68 : Operation 363 [1/1] (0.00ns) (grouped into LUT with out node and_ln786)   --->   "%xor_ln779 = xor i1 %tmp_43, true" [BN/bn.cpp:49]   --->   Operation 363 'xor' 'xor_ln779' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 364 [1/1] (0.00ns) (grouped into LUT with out node and_ln786)   --->   "%and_ln779 = and i1 %Range2_all_ones, %xor_ln779" [BN/bn.cpp:49]   --->   Operation 364 'and' 'and_ln779' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 365 [1/1] (0.00ns) (grouped into LUT with out node and_ln786)   --->   "%deleted_ones = select i1 %carry_1, i1 %and_ln779, i1 %Range1_all_ones" [BN/bn.cpp:49]   --->   Operation 365 'select' 'deleted_ones' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_68 : Operation 366 [1/1] (0.99ns) (out node of the LUT)   --->   "%and_ln786 = and i1 %p_Result_24, %deleted_ones" [BN/bn.cpp:49]   --->   Operation 366 'and' 'and_ln786' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 69 <SV = 68> <Delay = 4.73>
ST_69 : Operation 367 [1/1] (0.00ns) (grouped into LUT with out node or_ln340_1)   --->   "%deleted_zeros = select i1 %carry_1, i1 %Range1_all_ones, i1 %Range1_all_zeros" [BN/bn.cpp:49]   --->   Operation 367 'select' 'deleted_zeros' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_69 : Operation 368 [1/1] (0.97ns)   --->   "%and_ln781 = and i1 %carry_1, %Range1_all_ones" [BN/bn.cpp:49]   --->   Operation 368 'and' 'and_ln781' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_69 : Operation 369 [1/1] (0.00ns) (grouped into LUT with out node or_ln340_1)   --->   "%xor_ln785 = xor i1 %deleted_zeros, true" [BN/bn.cpp:49]   --->   Operation 369 'xor' 'xor_ln785' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_69 : Operation 370 [1/1] (0.00ns) (grouped into LUT with out node or_ln340_1)   --->   "%or_ln785 = or i1 %p_Result_24, %xor_ln785" [BN/bn.cpp:49]   --->   Operation 370 'or' 'or_ln785' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_69 : Operation 371 [1/1] (0.97ns)   --->   "%xor_ln785_1 = xor i1 %p_Result_22, true" [BN/bn.cpp:49]   --->   Operation 371 'xor' 'xor_ln785_1' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_69 : Operation 372 [1/1] (0.00ns) (grouped into LUT with out node or_ln340_1)   --->   "%overflow = and i1 %or_ln785, %xor_ln785_1" [BN/bn.cpp:49]   --->   Operation 372 'and' 'overflow' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_69 : Operation 373 [1/1] (0.00ns) (grouped into LUT with out node underflow_1)   --->   "%or_ln786 = or i1 %and_ln781, %and_ln786" [BN/bn.cpp:49]   --->   Operation 373 'or' 'or_ln786' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_69 : Operation 374 [1/1] (0.00ns) (grouped into LUT with out node underflow_1)   --->   "%xor_ln786_1 = xor i1 %or_ln786, true" [BN/bn.cpp:49]   --->   Operation 374 'xor' 'xor_ln786_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_69 : Operation 375 [1/1] (0.97ns) (out node of the LUT)   --->   "%underflow_1 = and i1 %p_Result_22, %xor_ln786_1" [BN/bn.cpp:49]   --->   Operation 375 'and' 'underflow_1' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_69 : Operation 376 [1/1] (0.99ns) (out node of the LUT)   --->   "%or_ln340_1 = or i1 %underflow_1, %overflow" [BN/bn.cpp:49]   --->   Operation 376 'or' 'or_ln340_1' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_69 : Operation 377 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_21)   --->   "%or_ln340_3 = or i1 %and_ln786, %xor_ln785_1" [BN/bn.cpp:49]   --->   Operation 377 'or' 'or_ln340_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_69 : Operation 378 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_21)   --->   "%or_ln340_2 = or i1 %or_ln340_3, %and_ln781" [BN/bn.cpp:49]   --->   Operation 378 'or' 'or_ln340_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_69 : Operation 379 [1/1] (0.80ns) (out node of the LUT)   --->   "%select_ln340 = select i1 %or_ln340_1, i16 32767, i16 %tmp_V_7" [BN/bn.cpp:49]   --->   Operation 379 'select' 'select_ln340' <Predicate = true> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_69 : Operation 380 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_21)   --->   "%select_ln388 = select i1 %underflow_1, i16 -32768, i16 %tmp_V_7" [BN/bn.cpp:49]   --->   Operation 380 'select' 'select_ln388' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_69 : Operation 381 [1/1] (0.97ns) (out node of the LUT)   --->   "%p_Val2_21 = select i1 %or_ln340_2, i16 %select_ln340, i16 %select_ln388" [BN/bn.cpp:49]   --->   Operation 381 'select' 'p_Val2_21' <Predicate = true> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 70 <SV = 69> <Delay = 6.89>
ST_70 : Operation 382 [1/1] (0.00ns)   --->   "%p_Val2_load_1 = load i64* %p_Val2_s" [BN/bn.cpp:50]   --->   Operation 382 'load' 'p_Val2_load_1' <Predicate = true> <Delay = 0.00>
ST_70 : Operation 383 [1/1] (0.00ns) (grouped into LUT with out node shl_ln414)   --->   "%tmp_V_8 = zext i16 %p_Val2_21 to i64" [BN/bn.cpp:50]   --->   Operation 383 'zext' 'tmp_V_8' <Predicate = true> <Delay = 0.00>
ST_70 : Operation 384 [1/1] (1.42ns)   --->   "%icmp_ln414 = icmp ugt i6 %Lo_assign, %or_ln41" [BN/bn.cpp:50]   --->   Operation 384 'icmp' 'icmp_ln414' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_70 : Operation 385 [1/1] (0.00ns)   --->   "%zext_ln414 = zext i6 %Lo_assign to i7" [BN/bn.cpp:50]   --->   Operation 385 'zext' 'zext_ln414' <Predicate = true> <Delay = 0.00>
ST_70 : Operation 386 [1/1] (0.00ns)   --->   "%zext_ln414_1 = zext i6 %or_ln41 to i7" [BN/bn.cpp:50]   --->   Operation 386 'zext' 'zext_ln414_1' <Predicate = true> <Delay = 0.00>
ST_70 : Operation 387 [1/1] (0.00ns) (grouped into LUT with out node shl_ln414)   --->   "%xor_ln414 = xor i7 %zext_ln414, 63" [BN/bn.cpp:50]   --->   Operation 387 'xor' 'xor_ln414' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_70 : Operation 388 [1/1] (0.00ns) (grouped into LUT with out node and_ln414)   --->   "%select_ln414 = select i1 %icmp_ln414, i7 %zext_ln414, i7 %zext_ln414_1" [BN/bn.cpp:50]   --->   Operation 388 'select' 'select_ln414' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_70 : Operation 389 [1/1] (0.00ns) (grouped into LUT with out node and_ln414)   --->   "%select_ln414_1 = select i1 %icmp_ln414, i7 %zext_ln414_1, i7 %zext_ln414" [BN/bn.cpp:50]   --->   Operation 389 'select' 'select_ln414_1' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_70 : Operation 390 [1/1] (0.00ns) (grouped into LUT with out node shl_ln414)   --->   "%select_ln414_2 = select i1 %icmp_ln414, i7 %xor_ln414, i7 %zext_ln414" [BN/bn.cpp:50]   --->   Operation 390 'select' 'select_ln414_2' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_70 : Operation 391 [1/1] (0.00ns) (grouped into LUT with out node and_ln414)   --->   "%xor_ln414_1 = xor i7 %select_ln414, 63" [BN/bn.cpp:50]   --->   Operation 391 'xor' 'xor_ln414_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_70 : Operation 392 [1/1] (0.00ns) (grouped into LUT with out node shl_ln414)   --->   "%zext_ln414_2 = zext i7 %select_ln414_2 to i64" [BN/bn.cpp:50]   --->   Operation 392 'zext' 'zext_ln414_2' <Predicate = true> <Delay = 0.00>
ST_70 : Operation 393 [1/1] (0.00ns) (grouped into LUT with out node and_ln414)   --->   "%zext_ln414_3 = zext i7 %select_ln414_1 to i64" [BN/bn.cpp:50]   --->   Operation 393 'zext' 'zext_ln414_3' <Predicate = true> <Delay = 0.00>
ST_70 : Operation 394 [1/1] (0.00ns) (grouped into LUT with out node and_ln414)   --->   "%zext_ln414_4 = zext i7 %xor_ln414_1 to i64" [BN/bn.cpp:50]   --->   Operation 394 'zext' 'zext_ln414_4' <Predicate = true> <Delay = 0.00>
ST_70 : Operation 395 [1/1] (3.98ns) (out node of the LUT)   --->   "%shl_ln414 = shl i64 %tmp_V_8, %zext_ln414_2" [BN/bn.cpp:50]   --->   Operation 395 'shl' 'shl_ln414' <Predicate = true> <Delay = 3.98> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.04> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_70 : Operation 396 [1/1] (0.00ns) (grouped into LUT with out node p_Result_25)   --->   "%tmp_44 = call i64 @llvm.part.select.i64(i64 %shl_ln414, i32 63, i32 0)" [BN/bn.cpp:50]   --->   Operation 396 'partselect' 'tmp_44' <Predicate = true> <Delay = 0.00>
ST_70 : Operation 397 [1/1] (0.00ns) (grouped into LUT with out node p_Result_25)   --->   "%select_ln414_3 = select i1 %icmp_ln414, i64 %tmp_44, i64 %shl_ln414" [BN/bn.cpp:50]   --->   Operation 397 'select' 'select_ln414_3' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_70 : Operation 398 [1/1] (0.00ns) (grouped into LUT with out node and_ln414)   --->   "%shl_ln414_1 = shl i64 -1, %zext_ln414_3" [BN/bn.cpp:50]   --->   Operation 398 'shl' 'shl_ln414_1' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.04> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_70 : Operation 399 [1/1] (0.00ns) (grouped into LUT with out node and_ln414)   --->   "%lshr_ln414 = lshr i64 -1, %zext_ln414_4" [BN/bn.cpp:50]   --->   Operation 399 'lshr' 'lshr_ln414' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.04> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_70 : Operation 400 [1/1] (3.04ns) (out node of the LUT)   --->   "%and_ln414 = and i64 %shl_ln414_1, %lshr_ln414" [BN/bn.cpp:50]   --->   Operation 400 'and' 'and_ln414' <Predicate = true> <Delay = 3.04> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_70 : Operation 401 [1/1] (0.00ns) (grouped into LUT with out node p_Result_25)   --->   "%xor_ln414_2 = xor i64 %and_ln414, -1" [BN/bn.cpp:50]   --->   Operation 401 'xor' 'xor_ln414_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_70 : Operation 402 [1/1] (0.00ns) (grouped into LUT with out node p_Result_25)   --->   "%and_ln414_1 = and i64 %p_Val2_load_1, %xor_ln414_2" [BN/bn.cpp:50]   --->   Operation 402 'and' 'and_ln414_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_70 : Operation 403 [1/1] (0.00ns) (grouped into LUT with out node p_Result_25)   --->   "%and_ln414_2 = and i64 %select_ln414_3, %and_ln414" [BN/bn.cpp:50]   --->   Operation 403 'and' 'and_ln414_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_70 : Operation 404 [1/1] (1.48ns) (out node of the LUT)   --->   "%p_Result_25 = or i64 %and_ln414_1, %and_ln414_2" [BN/bn.cpp:50]   --->   Operation 404 'or' 'p_Result_25' <Predicate = true> <Delay = 1.48> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_70 : Operation 405 [1/1] (0.00ns)   --->   "store i64 %p_Result_25, i64* %p_Val2_s" [BN/bn.cpp:40]   --->   Operation 405 'store' <Predicate = true> <Delay = 0.00>
ST_70 : Operation 406 [1/1] (0.00ns)   --->   "br label %1" [BN/bn.cpp:40]   --->   Operation 406 'br' <Predicate = true> <Delay = 0.00>

State 71 <SV = 9> <Delay = 8.75>
ST_71 : Operation 407 [4/5] (8.75ns)   --->   "%OUT_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %OUT_addr)" [BN/bn.cpp:57]   --->   Operation 407 'writeresp' 'OUT_addr_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 72 <SV = 10> <Delay = 8.75>
ST_72 : Operation 408 [3/5] (8.75ns)   --->   "%OUT_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %OUT_addr)" [BN/bn.cpp:57]   --->   Operation 408 'writeresp' 'OUT_addr_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 73 <SV = 11> <Delay = 8.75>
ST_73 : Operation 409 [2/5] (8.75ns)   --->   "%OUT_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %OUT_addr)" [BN/bn.cpp:57]   --->   Operation 409 'writeresp' 'OUT_addr_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 74 <SV = 12> <Delay = 8.75>
ST_74 : Operation 410 [1/5] (8.75ns)   --->   "%OUT_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %OUT_addr)" [BN/bn.cpp:57]   --->   Operation 410 'writeresp' 'OUT_addr_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_74 : Operation 411 [1/1] (0.00ns)   --->   "ret void" [BN/bn.cpp:62]   --->   Operation 411 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1ns
The critical path consists of the following:
	s_axi read on port 'out_V' [14]  (1 ns)

 <State 2>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('M_V_addr') [25]  (0 ns)
	bus request on port 'M_V' (BN/bn.cpp:38) [62]  (8.75 ns)

 <State 3>: 8.75ns
The critical path consists of the following:
	bus request on port 'IN_r' (BN/bn.cpp:34) [58]  (8.75 ns)

 <State 4>: 8.75ns
The critical path consists of the following:
	bus request on port 'IN_r' (BN/bn.cpp:34) [58]  (8.75 ns)

 <State 5>: 8.75ns
The critical path consists of the following:
	bus request on port 'IN_r' (BN/bn.cpp:34) [58]  (8.75 ns)

 <State 6>: 8.75ns
The critical path consists of the following:
	bus request on port 'IN_r' (BN/bn.cpp:34) [58]  (8.75 ns)

 <State 7>: 8.75ns
The critical path consists of the following:
	bus request on port 'IN_r' (BN/bn.cpp:34) [58]  (8.75 ns)

 <State 8>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('OUT_addr') [22]  (0 ns)
	bus request on port 'OUT_r' (BN/bn.cpp:57) [63]  (8.75 ns)

 <State 9>: 8.75ns
The critical path consists of the following:
	bus read on port 'IN_r' (BN/bn.cpp:34) [72]  (8.75 ns)

 <State 10>: 8.75ns
The critical path consists of the following:
	'load' operation ('p_Val2_load', BN/bn.cpp:57) on local variable '__Val2__' [261]  (0 ns)
	bus write on port 'OUT_r' (BN/bn.cpp:57) [262]  (8.75 ns)

 <State 11>: 7.64ns
The critical path consists of the following:
	'select' operation ('select_ln647_2', BN/bn.cpp:41) [98]  (0 ns)
	'lshr' operation ('lshr_ln647', BN/bn.cpp:41) [102]  (4.59 ns)
	'and' operation ('__Result__', BN/bn.cpp:41) [104]  (3.04 ns)

 <State 12>: 7.98ns
The critical path consists of the following:
	'call' operation ('x_sqrt_V', E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:48) to 'sqrt_fixed<16, 6>' [186]  (7.98 ns)

 <State 13>: 8.27ns
The critical path consists of the following:
	'call' operation ('x_sqrt_V', E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:48) to 'sqrt_fixed<16, 6>' [186]  (8.27 ns)

 <State 14>: 8.27ns
The critical path consists of the following:
	'call' operation ('x_sqrt_V', E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:48) to 'sqrt_fixed<16, 6>' [186]  (8.27 ns)

 <State 15>: 8.27ns
The critical path consists of the following:
	'call' operation ('x_sqrt_V', E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:48) to 'sqrt_fixed<16, 6>' [186]  (8.27 ns)

 <State 16>: 8.27ns
The critical path consists of the following:
	'call' operation ('x_sqrt_V', E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:48) to 'sqrt_fixed<16, 6>' [186]  (8.27 ns)

 <State 17>: 8.27ns
The critical path consists of the following:
	'call' operation ('x_sqrt_V', E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:48) to 'sqrt_fixed<16, 6>' [186]  (8.27 ns)

 <State 18>: 8.27ns
The critical path consists of the following:
	'call' operation ('x_sqrt_V', E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:48) to 'sqrt_fixed<16, 6>' [186]  (8.27 ns)

 <State 19>: 8.27ns
The critical path consists of the following:
	'call' operation ('x_sqrt_V', E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:48) to 'sqrt_fixed<16, 6>' [186]  (8.27 ns)

 <State 20>: 7.81ns
The critical path consists of the following:
	'call' operation ('x_sqrt_V', E:/programs/Xilinx/Vivado/2019.1/common/technology/autopilot\hls_math.h:1268->BN/bn.cpp:10->BN/bn.cpp:48) to 'sqrt_fixed<16, 6>' [186]  (7.81 ns)

 <State 21>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 22>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 23>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 24>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 25>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 26>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 27>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 28>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 29>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 30>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 31>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 32>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 33>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 34>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 35>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 36>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 37>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 38>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 39>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 40>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 41>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 42>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 43>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 44>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 45>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 46>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 47>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 48>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 49>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 50>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 51>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 52>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 53>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 54>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 55>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 56>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 57>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 58>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 59>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 60>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 61>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 62>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 63>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 64>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 65>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 66>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 67>: 4.46ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)

 <State 68>: 8.51ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', BN/bn.cpp:49) [200]  (4.46 ns)
	'add' operation ('tmp.V', BN/bn.cpp:49) [206]  (2.08 ns)
	'xor' operation ('xor_ln416', BN/bn.cpp:49) [208]  (0 ns)
	'and' operation ('carry', BN/bn.cpp:49) [209]  (0.978 ns)
	'select' operation ('deleted_ones', BN/bn.cpp:49) [220]  (0 ns)
	'and' operation ('and_ln786', BN/bn.cpp:49) [226]  (0.993 ns)

 <State 69>: 4.73ns
The critical path consists of the following:
	'and' operation ('and_ln781', BN/bn.cpp:49) [221]  (0.978 ns)
	'or' operation ('or_ln786', BN/bn.cpp:49) [227]  (0 ns)
	'xor' operation ('xor_ln786_1', BN/bn.cpp:49) [228]  (0 ns)
	'and' operation ('underflow', BN/bn.cpp:49) [229]  (0.978 ns)
	'or' operation ('or_ln340_1', BN/bn.cpp:49) [230]  (0.993 ns)
	'select' operation ('select_ln340', BN/bn.cpp:49) [233]  (0.805 ns)
	'select' operation ('__Val2__', BN/bn.cpp:49) [235]  (0.978 ns)

 <State 70>: 6.9ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln414', BN/bn.cpp:50) [237]  (1.43 ns)
	'select' operation ('select_ln414_2', BN/bn.cpp:50) [243]  (0 ns)
	'shl' operation ('shl_ln414', BN/bn.cpp:50) [248]  (3.99 ns)
	'select' operation ('select_ln414_3', BN/bn.cpp:50) [250]  (0 ns)
	'and' operation ('and_ln414_2', BN/bn.cpp:50) [256]  (0 ns)
	'or' operation ('__Result__', BN/bn.cpp:50) [257]  (1.48 ns)

 <State 71>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (BN/bn.cpp:57) [265]  (8.75 ns)

 <State 72>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (BN/bn.cpp:57) [265]  (8.75 ns)

 <State 73>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (BN/bn.cpp:57) [265]  (8.75 ns)

 <State 74>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (BN/bn.cpp:57) [265]  (8.75 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
