// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _bn_HH_
#define _bn_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "sqrt_fixed_16_6_s.h"
#include "bn_sdiv_27ns_14nsbkb.h"
#include "bn_am_submul_16s_cud.h"
#include "bn_CTRL_s_axi.h"
#include "bn_IN_r_m_axi.h"
#include "bn_BETA_m_axi.h"
#include "bn_GAMMA_m_axi.h"
#include "bn_M_M_m_axi.h"
#include "bn_M_V_m_axi.h"
#include "bn_OUT_r_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_IN_R_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_IN_R_ID_WIDTH = 1,
         unsigned int C_M_AXI_IN_R_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_IN_R_DATA_WIDTH = 32,
         unsigned int C_M_AXI_IN_R_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_IN_R_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_IN_R_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_IN_R_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_BETA_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_BETA_ID_WIDTH = 1,
         unsigned int C_M_AXI_BETA_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_BETA_DATA_WIDTH = 32,
         unsigned int C_M_AXI_BETA_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_BETA_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_BETA_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_BETA_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_GAMMA_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_GAMMA_ID_WIDTH = 1,
         unsigned int C_M_AXI_GAMMA_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_GAMMA_DATA_WIDTH = 32,
         unsigned int C_M_AXI_GAMMA_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_GAMMA_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_GAMMA_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_GAMMA_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_M_M_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_M_M_ID_WIDTH = 1,
         unsigned int C_M_AXI_M_M_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_M_M_DATA_WIDTH = 32,
         unsigned int C_M_AXI_M_M_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_M_M_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_M_M_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_M_M_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_M_V_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_M_V_ID_WIDTH = 1,
         unsigned int C_M_AXI_M_V_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_M_V_DATA_WIDTH = 32,
         unsigned int C_M_AXI_M_V_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_M_V_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_M_V_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_M_V_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUT_R_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_OUT_R_ID_WIDTH = 1,
         unsigned int C_M_AXI_OUT_R_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUT_R_DATA_WIDTH = 32,
         unsigned int C_M_AXI_OUT_R_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUT_R_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUT_R_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUT_R_BUSER_WIDTH = 1,
         unsigned int C_S_AXI_CTRL_ADDR_WIDTH = 6,
         unsigned int C_S_AXI_CTRL_DATA_WIDTH = 32>
struct bn : public sc_module {
    // Port declarations 290
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_IN_r_AWVALID;
    sc_in< sc_logic > m_axi_IN_r_AWREADY;
    sc_out< sc_uint<C_M_AXI_IN_R_ADDR_WIDTH> > m_axi_IN_r_AWADDR;
    sc_out< sc_uint<C_M_AXI_IN_R_ID_WIDTH> > m_axi_IN_r_AWID;
    sc_out< sc_lv<8> > m_axi_IN_r_AWLEN;
    sc_out< sc_lv<3> > m_axi_IN_r_AWSIZE;
    sc_out< sc_lv<2> > m_axi_IN_r_AWBURST;
    sc_out< sc_lv<2> > m_axi_IN_r_AWLOCK;
    sc_out< sc_lv<4> > m_axi_IN_r_AWCACHE;
    sc_out< sc_lv<3> > m_axi_IN_r_AWPROT;
    sc_out< sc_lv<4> > m_axi_IN_r_AWQOS;
    sc_out< sc_lv<4> > m_axi_IN_r_AWREGION;
    sc_out< sc_uint<C_M_AXI_IN_R_AWUSER_WIDTH> > m_axi_IN_r_AWUSER;
    sc_out< sc_logic > m_axi_IN_r_WVALID;
    sc_in< sc_logic > m_axi_IN_r_WREADY;
    sc_out< sc_uint<C_M_AXI_IN_R_DATA_WIDTH> > m_axi_IN_r_WDATA;
    sc_out< sc_uint<C_M_AXI_IN_R_DATA_WIDTH/8> > m_axi_IN_r_WSTRB;
    sc_out< sc_logic > m_axi_IN_r_WLAST;
    sc_out< sc_uint<C_M_AXI_IN_R_ID_WIDTH> > m_axi_IN_r_WID;
    sc_out< sc_uint<C_M_AXI_IN_R_WUSER_WIDTH> > m_axi_IN_r_WUSER;
    sc_out< sc_logic > m_axi_IN_r_ARVALID;
    sc_in< sc_logic > m_axi_IN_r_ARREADY;
    sc_out< sc_uint<C_M_AXI_IN_R_ADDR_WIDTH> > m_axi_IN_r_ARADDR;
    sc_out< sc_uint<C_M_AXI_IN_R_ID_WIDTH> > m_axi_IN_r_ARID;
    sc_out< sc_lv<8> > m_axi_IN_r_ARLEN;
    sc_out< sc_lv<3> > m_axi_IN_r_ARSIZE;
    sc_out< sc_lv<2> > m_axi_IN_r_ARBURST;
    sc_out< sc_lv<2> > m_axi_IN_r_ARLOCK;
    sc_out< sc_lv<4> > m_axi_IN_r_ARCACHE;
    sc_out< sc_lv<3> > m_axi_IN_r_ARPROT;
    sc_out< sc_lv<4> > m_axi_IN_r_ARQOS;
    sc_out< sc_lv<4> > m_axi_IN_r_ARREGION;
    sc_out< sc_uint<C_M_AXI_IN_R_ARUSER_WIDTH> > m_axi_IN_r_ARUSER;
    sc_in< sc_logic > m_axi_IN_r_RVALID;
    sc_out< sc_logic > m_axi_IN_r_RREADY;
    sc_in< sc_uint<C_M_AXI_IN_R_DATA_WIDTH> > m_axi_IN_r_RDATA;
    sc_in< sc_logic > m_axi_IN_r_RLAST;
    sc_in< sc_uint<C_M_AXI_IN_R_ID_WIDTH> > m_axi_IN_r_RID;
    sc_in< sc_uint<C_M_AXI_IN_R_RUSER_WIDTH> > m_axi_IN_r_RUSER;
    sc_in< sc_lv<2> > m_axi_IN_r_RRESP;
    sc_in< sc_logic > m_axi_IN_r_BVALID;
    sc_out< sc_logic > m_axi_IN_r_BREADY;
    sc_in< sc_lv<2> > m_axi_IN_r_BRESP;
    sc_in< sc_uint<C_M_AXI_IN_R_ID_WIDTH> > m_axi_IN_r_BID;
    sc_in< sc_uint<C_M_AXI_IN_R_BUSER_WIDTH> > m_axi_IN_r_BUSER;
    sc_out< sc_logic > m_axi_BETA_AWVALID;
    sc_in< sc_logic > m_axi_BETA_AWREADY;
    sc_out< sc_uint<C_M_AXI_BETA_ADDR_WIDTH> > m_axi_BETA_AWADDR;
    sc_out< sc_uint<C_M_AXI_BETA_ID_WIDTH> > m_axi_BETA_AWID;
    sc_out< sc_lv<8> > m_axi_BETA_AWLEN;
    sc_out< sc_lv<3> > m_axi_BETA_AWSIZE;
    sc_out< sc_lv<2> > m_axi_BETA_AWBURST;
    sc_out< sc_lv<2> > m_axi_BETA_AWLOCK;
    sc_out< sc_lv<4> > m_axi_BETA_AWCACHE;
    sc_out< sc_lv<3> > m_axi_BETA_AWPROT;
    sc_out< sc_lv<4> > m_axi_BETA_AWQOS;
    sc_out< sc_lv<4> > m_axi_BETA_AWREGION;
    sc_out< sc_uint<C_M_AXI_BETA_AWUSER_WIDTH> > m_axi_BETA_AWUSER;
    sc_out< sc_logic > m_axi_BETA_WVALID;
    sc_in< sc_logic > m_axi_BETA_WREADY;
    sc_out< sc_uint<C_M_AXI_BETA_DATA_WIDTH> > m_axi_BETA_WDATA;
    sc_out< sc_uint<C_M_AXI_BETA_DATA_WIDTH/8> > m_axi_BETA_WSTRB;
    sc_out< sc_logic > m_axi_BETA_WLAST;
    sc_out< sc_uint<C_M_AXI_BETA_ID_WIDTH> > m_axi_BETA_WID;
    sc_out< sc_uint<C_M_AXI_BETA_WUSER_WIDTH> > m_axi_BETA_WUSER;
    sc_out< sc_logic > m_axi_BETA_ARVALID;
    sc_in< sc_logic > m_axi_BETA_ARREADY;
    sc_out< sc_uint<C_M_AXI_BETA_ADDR_WIDTH> > m_axi_BETA_ARADDR;
    sc_out< sc_uint<C_M_AXI_BETA_ID_WIDTH> > m_axi_BETA_ARID;
    sc_out< sc_lv<8> > m_axi_BETA_ARLEN;
    sc_out< sc_lv<3> > m_axi_BETA_ARSIZE;
    sc_out< sc_lv<2> > m_axi_BETA_ARBURST;
    sc_out< sc_lv<2> > m_axi_BETA_ARLOCK;
    sc_out< sc_lv<4> > m_axi_BETA_ARCACHE;
    sc_out< sc_lv<3> > m_axi_BETA_ARPROT;
    sc_out< sc_lv<4> > m_axi_BETA_ARQOS;
    sc_out< sc_lv<4> > m_axi_BETA_ARREGION;
    sc_out< sc_uint<C_M_AXI_BETA_ARUSER_WIDTH> > m_axi_BETA_ARUSER;
    sc_in< sc_logic > m_axi_BETA_RVALID;
    sc_out< sc_logic > m_axi_BETA_RREADY;
    sc_in< sc_uint<C_M_AXI_BETA_DATA_WIDTH> > m_axi_BETA_RDATA;
    sc_in< sc_logic > m_axi_BETA_RLAST;
    sc_in< sc_uint<C_M_AXI_BETA_ID_WIDTH> > m_axi_BETA_RID;
    sc_in< sc_uint<C_M_AXI_BETA_RUSER_WIDTH> > m_axi_BETA_RUSER;
    sc_in< sc_lv<2> > m_axi_BETA_RRESP;
    sc_in< sc_logic > m_axi_BETA_BVALID;
    sc_out< sc_logic > m_axi_BETA_BREADY;
    sc_in< sc_lv<2> > m_axi_BETA_BRESP;
    sc_in< sc_uint<C_M_AXI_BETA_ID_WIDTH> > m_axi_BETA_BID;
    sc_in< sc_uint<C_M_AXI_BETA_BUSER_WIDTH> > m_axi_BETA_BUSER;
    sc_out< sc_logic > m_axi_GAMMA_AWVALID;
    sc_in< sc_logic > m_axi_GAMMA_AWREADY;
    sc_out< sc_uint<C_M_AXI_GAMMA_ADDR_WIDTH> > m_axi_GAMMA_AWADDR;
    sc_out< sc_uint<C_M_AXI_GAMMA_ID_WIDTH> > m_axi_GAMMA_AWID;
    sc_out< sc_lv<8> > m_axi_GAMMA_AWLEN;
    sc_out< sc_lv<3> > m_axi_GAMMA_AWSIZE;
    sc_out< sc_lv<2> > m_axi_GAMMA_AWBURST;
    sc_out< sc_lv<2> > m_axi_GAMMA_AWLOCK;
    sc_out< sc_lv<4> > m_axi_GAMMA_AWCACHE;
    sc_out< sc_lv<3> > m_axi_GAMMA_AWPROT;
    sc_out< sc_lv<4> > m_axi_GAMMA_AWQOS;
    sc_out< sc_lv<4> > m_axi_GAMMA_AWREGION;
    sc_out< sc_uint<C_M_AXI_GAMMA_AWUSER_WIDTH> > m_axi_GAMMA_AWUSER;
    sc_out< sc_logic > m_axi_GAMMA_WVALID;
    sc_in< sc_logic > m_axi_GAMMA_WREADY;
    sc_out< sc_uint<C_M_AXI_GAMMA_DATA_WIDTH> > m_axi_GAMMA_WDATA;
    sc_out< sc_uint<C_M_AXI_GAMMA_DATA_WIDTH/8> > m_axi_GAMMA_WSTRB;
    sc_out< sc_logic > m_axi_GAMMA_WLAST;
    sc_out< sc_uint<C_M_AXI_GAMMA_ID_WIDTH> > m_axi_GAMMA_WID;
    sc_out< sc_uint<C_M_AXI_GAMMA_WUSER_WIDTH> > m_axi_GAMMA_WUSER;
    sc_out< sc_logic > m_axi_GAMMA_ARVALID;
    sc_in< sc_logic > m_axi_GAMMA_ARREADY;
    sc_out< sc_uint<C_M_AXI_GAMMA_ADDR_WIDTH> > m_axi_GAMMA_ARADDR;
    sc_out< sc_uint<C_M_AXI_GAMMA_ID_WIDTH> > m_axi_GAMMA_ARID;
    sc_out< sc_lv<8> > m_axi_GAMMA_ARLEN;
    sc_out< sc_lv<3> > m_axi_GAMMA_ARSIZE;
    sc_out< sc_lv<2> > m_axi_GAMMA_ARBURST;
    sc_out< sc_lv<2> > m_axi_GAMMA_ARLOCK;
    sc_out< sc_lv<4> > m_axi_GAMMA_ARCACHE;
    sc_out< sc_lv<3> > m_axi_GAMMA_ARPROT;
    sc_out< sc_lv<4> > m_axi_GAMMA_ARQOS;
    sc_out< sc_lv<4> > m_axi_GAMMA_ARREGION;
    sc_out< sc_uint<C_M_AXI_GAMMA_ARUSER_WIDTH> > m_axi_GAMMA_ARUSER;
    sc_in< sc_logic > m_axi_GAMMA_RVALID;
    sc_out< sc_logic > m_axi_GAMMA_RREADY;
    sc_in< sc_uint<C_M_AXI_GAMMA_DATA_WIDTH> > m_axi_GAMMA_RDATA;
    sc_in< sc_logic > m_axi_GAMMA_RLAST;
    sc_in< sc_uint<C_M_AXI_GAMMA_ID_WIDTH> > m_axi_GAMMA_RID;
    sc_in< sc_uint<C_M_AXI_GAMMA_RUSER_WIDTH> > m_axi_GAMMA_RUSER;
    sc_in< sc_lv<2> > m_axi_GAMMA_RRESP;
    sc_in< sc_logic > m_axi_GAMMA_BVALID;
    sc_out< sc_logic > m_axi_GAMMA_BREADY;
    sc_in< sc_lv<2> > m_axi_GAMMA_BRESP;
    sc_in< sc_uint<C_M_AXI_GAMMA_ID_WIDTH> > m_axi_GAMMA_BID;
    sc_in< sc_uint<C_M_AXI_GAMMA_BUSER_WIDTH> > m_axi_GAMMA_BUSER;
    sc_out< sc_logic > m_axi_M_M_AWVALID;
    sc_in< sc_logic > m_axi_M_M_AWREADY;
    sc_out< sc_uint<C_M_AXI_M_M_ADDR_WIDTH> > m_axi_M_M_AWADDR;
    sc_out< sc_uint<C_M_AXI_M_M_ID_WIDTH> > m_axi_M_M_AWID;
    sc_out< sc_lv<8> > m_axi_M_M_AWLEN;
    sc_out< sc_lv<3> > m_axi_M_M_AWSIZE;
    sc_out< sc_lv<2> > m_axi_M_M_AWBURST;
    sc_out< sc_lv<2> > m_axi_M_M_AWLOCK;
    sc_out< sc_lv<4> > m_axi_M_M_AWCACHE;
    sc_out< sc_lv<3> > m_axi_M_M_AWPROT;
    sc_out< sc_lv<4> > m_axi_M_M_AWQOS;
    sc_out< sc_lv<4> > m_axi_M_M_AWREGION;
    sc_out< sc_uint<C_M_AXI_M_M_AWUSER_WIDTH> > m_axi_M_M_AWUSER;
    sc_out< sc_logic > m_axi_M_M_WVALID;
    sc_in< sc_logic > m_axi_M_M_WREADY;
    sc_out< sc_uint<C_M_AXI_M_M_DATA_WIDTH> > m_axi_M_M_WDATA;
    sc_out< sc_uint<C_M_AXI_M_M_DATA_WIDTH/8> > m_axi_M_M_WSTRB;
    sc_out< sc_logic > m_axi_M_M_WLAST;
    sc_out< sc_uint<C_M_AXI_M_M_ID_WIDTH> > m_axi_M_M_WID;
    sc_out< sc_uint<C_M_AXI_M_M_WUSER_WIDTH> > m_axi_M_M_WUSER;
    sc_out< sc_logic > m_axi_M_M_ARVALID;
    sc_in< sc_logic > m_axi_M_M_ARREADY;
    sc_out< sc_uint<C_M_AXI_M_M_ADDR_WIDTH> > m_axi_M_M_ARADDR;
    sc_out< sc_uint<C_M_AXI_M_M_ID_WIDTH> > m_axi_M_M_ARID;
    sc_out< sc_lv<8> > m_axi_M_M_ARLEN;
    sc_out< sc_lv<3> > m_axi_M_M_ARSIZE;
    sc_out< sc_lv<2> > m_axi_M_M_ARBURST;
    sc_out< sc_lv<2> > m_axi_M_M_ARLOCK;
    sc_out< sc_lv<4> > m_axi_M_M_ARCACHE;
    sc_out< sc_lv<3> > m_axi_M_M_ARPROT;
    sc_out< sc_lv<4> > m_axi_M_M_ARQOS;
    sc_out< sc_lv<4> > m_axi_M_M_ARREGION;
    sc_out< sc_uint<C_M_AXI_M_M_ARUSER_WIDTH> > m_axi_M_M_ARUSER;
    sc_in< sc_logic > m_axi_M_M_RVALID;
    sc_out< sc_logic > m_axi_M_M_RREADY;
    sc_in< sc_uint<C_M_AXI_M_M_DATA_WIDTH> > m_axi_M_M_RDATA;
    sc_in< sc_logic > m_axi_M_M_RLAST;
    sc_in< sc_uint<C_M_AXI_M_M_ID_WIDTH> > m_axi_M_M_RID;
    sc_in< sc_uint<C_M_AXI_M_M_RUSER_WIDTH> > m_axi_M_M_RUSER;
    sc_in< sc_lv<2> > m_axi_M_M_RRESP;
    sc_in< sc_logic > m_axi_M_M_BVALID;
    sc_out< sc_logic > m_axi_M_M_BREADY;
    sc_in< sc_lv<2> > m_axi_M_M_BRESP;
    sc_in< sc_uint<C_M_AXI_M_M_ID_WIDTH> > m_axi_M_M_BID;
    sc_in< sc_uint<C_M_AXI_M_M_BUSER_WIDTH> > m_axi_M_M_BUSER;
    sc_out< sc_logic > m_axi_M_V_AWVALID;
    sc_in< sc_logic > m_axi_M_V_AWREADY;
    sc_out< sc_uint<C_M_AXI_M_V_ADDR_WIDTH> > m_axi_M_V_AWADDR;
    sc_out< sc_uint<C_M_AXI_M_V_ID_WIDTH> > m_axi_M_V_AWID;
    sc_out< sc_lv<8> > m_axi_M_V_AWLEN;
    sc_out< sc_lv<3> > m_axi_M_V_AWSIZE;
    sc_out< sc_lv<2> > m_axi_M_V_AWBURST;
    sc_out< sc_lv<2> > m_axi_M_V_AWLOCK;
    sc_out< sc_lv<4> > m_axi_M_V_AWCACHE;
    sc_out< sc_lv<3> > m_axi_M_V_AWPROT;
    sc_out< sc_lv<4> > m_axi_M_V_AWQOS;
    sc_out< sc_lv<4> > m_axi_M_V_AWREGION;
    sc_out< sc_uint<C_M_AXI_M_V_AWUSER_WIDTH> > m_axi_M_V_AWUSER;
    sc_out< sc_logic > m_axi_M_V_WVALID;
    sc_in< sc_logic > m_axi_M_V_WREADY;
    sc_out< sc_uint<C_M_AXI_M_V_DATA_WIDTH> > m_axi_M_V_WDATA;
    sc_out< sc_uint<C_M_AXI_M_V_DATA_WIDTH/8> > m_axi_M_V_WSTRB;
    sc_out< sc_logic > m_axi_M_V_WLAST;
    sc_out< sc_uint<C_M_AXI_M_V_ID_WIDTH> > m_axi_M_V_WID;
    sc_out< sc_uint<C_M_AXI_M_V_WUSER_WIDTH> > m_axi_M_V_WUSER;
    sc_out< sc_logic > m_axi_M_V_ARVALID;
    sc_in< sc_logic > m_axi_M_V_ARREADY;
    sc_out< sc_uint<C_M_AXI_M_V_ADDR_WIDTH> > m_axi_M_V_ARADDR;
    sc_out< sc_uint<C_M_AXI_M_V_ID_WIDTH> > m_axi_M_V_ARID;
    sc_out< sc_lv<8> > m_axi_M_V_ARLEN;
    sc_out< sc_lv<3> > m_axi_M_V_ARSIZE;
    sc_out< sc_lv<2> > m_axi_M_V_ARBURST;
    sc_out< sc_lv<2> > m_axi_M_V_ARLOCK;
    sc_out< sc_lv<4> > m_axi_M_V_ARCACHE;
    sc_out< sc_lv<3> > m_axi_M_V_ARPROT;
    sc_out< sc_lv<4> > m_axi_M_V_ARQOS;
    sc_out< sc_lv<4> > m_axi_M_V_ARREGION;
    sc_out< sc_uint<C_M_AXI_M_V_ARUSER_WIDTH> > m_axi_M_V_ARUSER;
    sc_in< sc_logic > m_axi_M_V_RVALID;
    sc_out< sc_logic > m_axi_M_V_RREADY;
    sc_in< sc_uint<C_M_AXI_M_V_DATA_WIDTH> > m_axi_M_V_RDATA;
    sc_in< sc_logic > m_axi_M_V_RLAST;
    sc_in< sc_uint<C_M_AXI_M_V_ID_WIDTH> > m_axi_M_V_RID;
    sc_in< sc_uint<C_M_AXI_M_V_RUSER_WIDTH> > m_axi_M_V_RUSER;
    sc_in< sc_lv<2> > m_axi_M_V_RRESP;
    sc_in< sc_logic > m_axi_M_V_BVALID;
    sc_out< sc_logic > m_axi_M_V_BREADY;
    sc_in< sc_lv<2> > m_axi_M_V_BRESP;
    sc_in< sc_uint<C_M_AXI_M_V_ID_WIDTH> > m_axi_M_V_BID;
    sc_in< sc_uint<C_M_AXI_M_V_BUSER_WIDTH> > m_axi_M_V_BUSER;
    sc_out< sc_logic > m_axi_OUT_r_AWVALID;
    sc_in< sc_logic > m_axi_OUT_r_AWREADY;
    sc_out< sc_uint<C_M_AXI_OUT_R_ADDR_WIDTH> > m_axi_OUT_r_AWADDR;
    sc_out< sc_uint<C_M_AXI_OUT_R_ID_WIDTH> > m_axi_OUT_r_AWID;
    sc_out< sc_lv<8> > m_axi_OUT_r_AWLEN;
    sc_out< sc_lv<3> > m_axi_OUT_r_AWSIZE;
    sc_out< sc_lv<2> > m_axi_OUT_r_AWBURST;
    sc_out< sc_lv<2> > m_axi_OUT_r_AWLOCK;
    sc_out< sc_lv<4> > m_axi_OUT_r_AWCACHE;
    sc_out< sc_lv<3> > m_axi_OUT_r_AWPROT;
    sc_out< sc_lv<4> > m_axi_OUT_r_AWQOS;
    sc_out< sc_lv<4> > m_axi_OUT_r_AWREGION;
    sc_out< sc_uint<C_M_AXI_OUT_R_AWUSER_WIDTH> > m_axi_OUT_r_AWUSER;
    sc_out< sc_logic > m_axi_OUT_r_WVALID;
    sc_in< sc_logic > m_axi_OUT_r_WREADY;
    sc_out< sc_uint<C_M_AXI_OUT_R_DATA_WIDTH> > m_axi_OUT_r_WDATA;
    sc_out< sc_uint<C_M_AXI_OUT_R_DATA_WIDTH/8> > m_axi_OUT_r_WSTRB;
    sc_out< sc_logic > m_axi_OUT_r_WLAST;
    sc_out< sc_uint<C_M_AXI_OUT_R_ID_WIDTH> > m_axi_OUT_r_WID;
    sc_out< sc_uint<C_M_AXI_OUT_R_WUSER_WIDTH> > m_axi_OUT_r_WUSER;
    sc_out< sc_logic > m_axi_OUT_r_ARVALID;
    sc_in< sc_logic > m_axi_OUT_r_ARREADY;
    sc_out< sc_uint<C_M_AXI_OUT_R_ADDR_WIDTH> > m_axi_OUT_r_ARADDR;
    sc_out< sc_uint<C_M_AXI_OUT_R_ID_WIDTH> > m_axi_OUT_r_ARID;
    sc_out< sc_lv<8> > m_axi_OUT_r_ARLEN;
    sc_out< sc_lv<3> > m_axi_OUT_r_ARSIZE;
    sc_out< sc_lv<2> > m_axi_OUT_r_ARBURST;
    sc_out< sc_lv<2> > m_axi_OUT_r_ARLOCK;
    sc_out< sc_lv<4> > m_axi_OUT_r_ARCACHE;
    sc_out< sc_lv<3> > m_axi_OUT_r_ARPROT;
    sc_out< sc_lv<4> > m_axi_OUT_r_ARQOS;
    sc_out< sc_lv<4> > m_axi_OUT_r_ARREGION;
    sc_out< sc_uint<C_M_AXI_OUT_R_ARUSER_WIDTH> > m_axi_OUT_r_ARUSER;
    sc_in< sc_logic > m_axi_OUT_r_RVALID;
    sc_out< sc_logic > m_axi_OUT_r_RREADY;
    sc_in< sc_uint<C_M_AXI_OUT_R_DATA_WIDTH> > m_axi_OUT_r_RDATA;
    sc_in< sc_logic > m_axi_OUT_r_RLAST;
    sc_in< sc_uint<C_M_AXI_OUT_R_ID_WIDTH> > m_axi_OUT_r_RID;
    sc_in< sc_uint<C_M_AXI_OUT_R_RUSER_WIDTH> > m_axi_OUT_r_RUSER;
    sc_in< sc_lv<2> > m_axi_OUT_r_RRESP;
    sc_in< sc_logic > m_axi_OUT_r_BVALID;
    sc_out< sc_logic > m_axi_OUT_r_BREADY;
    sc_in< sc_lv<2> > m_axi_OUT_r_BRESP;
    sc_in< sc_uint<C_M_AXI_OUT_R_ID_WIDTH> > m_axi_OUT_r_BID;
    sc_in< sc_uint<C_M_AXI_OUT_R_BUSER_WIDTH> > m_axi_OUT_r_BUSER;
    sc_in< sc_logic > s_axi_CTRL_AWVALID;
    sc_out< sc_logic > s_axi_CTRL_AWREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_ADDR_WIDTH> > s_axi_CTRL_AWADDR;
    sc_in< sc_logic > s_axi_CTRL_WVALID;
    sc_out< sc_logic > s_axi_CTRL_WREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_DATA_WIDTH> > s_axi_CTRL_WDATA;
    sc_in< sc_uint<C_S_AXI_CTRL_DATA_WIDTH/8> > s_axi_CTRL_WSTRB;
    sc_in< sc_logic > s_axi_CTRL_ARVALID;
    sc_out< sc_logic > s_axi_CTRL_ARREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_ADDR_WIDTH> > s_axi_CTRL_ARADDR;
    sc_out< sc_logic > s_axi_CTRL_RVALID;
    sc_in< sc_logic > s_axi_CTRL_RREADY;
    sc_out< sc_uint<C_S_AXI_CTRL_DATA_WIDTH> > s_axi_CTRL_RDATA;
    sc_out< sc_lv<2> > s_axi_CTRL_RRESP;
    sc_out< sc_logic > s_axi_CTRL_BVALID;
    sc_in< sc_logic > s_axi_CTRL_BREADY;
    sc_out< sc_lv<2> > s_axi_CTRL_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const6;
    sc_signal< sc_lv<32> > ap_var_for_const7;
    sc_signal< sc_lv<1> > ap_var_for_const1;
    sc_signal< sc_lv<32> > ap_var_for_const2;
    sc_signal< sc_lv<3> > ap_var_for_const3;
    sc_signal< sc_lv<2> > ap_var_for_const4;
    sc_signal< sc_lv<4> > ap_var_for_const5;
    sc_signal< sc_lv<2> > ap_var_for_const9;
    sc_signal< sc_lv<16> > ap_var_for_const8;


    // Module declarations
    bn(sc_module_name name);
    SC_HAS_PROCESS(bn);

    ~bn();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    bn_CTRL_s_axi<C_S_AXI_CTRL_ADDR_WIDTH,C_S_AXI_CTRL_DATA_WIDTH>* bn_CTRL_s_axi_U;
    bn_IN_r_m_axi<0,16,32,5,16,16,16,16,C_M_AXI_IN_R_ID_WIDTH,C_M_AXI_IN_R_ADDR_WIDTH,C_M_AXI_IN_R_DATA_WIDTH,C_M_AXI_IN_R_AWUSER_WIDTH,C_M_AXI_IN_R_ARUSER_WIDTH,C_M_AXI_IN_R_WUSER_WIDTH,C_M_AXI_IN_R_RUSER_WIDTH,C_M_AXI_IN_R_BUSER_WIDTH,C_M_AXI_IN_R_USER_VALUE,C_M_AXI_IN_R_PROT_VALUE,C_M_AXI_IN_R_CACHE_VALUE>* bn_IN_r_m_axi_U;
    bn_BETA_m_axi<0,16,32,5,16,16,16,16,C_M_AXI_BETA_ID_WIDTH,C_M_AXI_BETA_ADDR_WIDTH,C_M_AXI_BETA_DATA_WIDTH,C_M_AXI_BETA_AWUSER_WIDTH,C_M_AXI_BETA_ARUSER_WIDTH,C_M_AXI_BETA_WUSER_WIDTH,C_M_AXI_BETA_RUSER_WIDTH,C_M_AXI_BETA_BUSER_WIDTH,C_M_AXI_BETA_USER_VALUE,C_M_AXI_BETA_PROT_VALUE,C_M_AXI_BETA_CACHE_VALUE>* bn_BETA_m_axi_U;
    bn_GAMMA_m_axi<0,16,32,5,16,16,16,16,C_M_AXI_GAMMA_ID_WIDTH,C_M_AXI_GAMMA_ADDR_WIDTH,C_M_AXI_GAMMA_DATA_WIDTH,C_M_AXI_GAMMA_AWUSER_WIDTH,C_M_AXI_GAMMA_ARUSER_WIDTH,C_M_AXI_GAMMA_WUSER_WIDTH,C_M_AXI_GAMMA_RUSER_WIDTH,C_M_AXI_GAMMA_BUSER_WIDTH,C_M_AXI_GAMMA_USER_VALUE,C_M_AXI_GAMMA_PROT_VALUE,C_M_AXI_GAMMA_CACHE_VALUE>* bn_GAMMA_m_axi_U;
    bn_M_M_m_axi<0,16,32,5,16,16,16,16,C_M_AXI_M_M_ID_WIDTH,C_M_AXI_M_M_ADDR_WIDTH,C_M_AXI_M_M_DATA_WIDTH,C_M_AXI_M_M_AWUSER_WIDTH,C_M_AXI_M_M_ARUSER_WIDTH,C_M_AXI_M_M_WUSER_WIDTH,C_M_AXI_M_M_RUSER_WIDTH,C_M_AXI_M_M_BUSER_WIDTH,C_M_AXI_M_M_USER_VALUE,C_M_AXI_M_M_PROT_VALUE,C_M_AXI_M_M_CACHE_VALUE>* bn_M_M_m_axi_U;
    bn_M_V_m_axi<0,16,32,5,16,16,16,16,C_M_AXI_M_V_ID_WIDTH,C_M_AXI_M_V_ADDR_WIDTH,C_M_AXI_M_V_DATA_WIDTH,C_M_AXI_M_V_AWUSER_WIDTH,C_M_AXI_M_V_ARUSER_WIDTH,C_M_AXI_M_V_WUSER_WIDTH,C_M_AXI_M_V_RUSER_WIDTH,C_M_AXI_M_V_BUSER_WIDTH,C_M_AXI_M_V_USER_VALUE,C_M_AXI_M_V_PROT_VALUE,C_M_AXI_M_V_CACHE_VALUE>* bn_M_V_m_axi_U;
    bn_OUT_r_m_axi<0,16,32,5,16,16,16,16,C_M_AXI_OUT_R_ID_WIDTH,C_M_AXI_OUT_R_ADDR_WIDTH,C_M_AXI_OUT_R_DATA_WIDTH,C_M_AXI_OUT_R_AWUSER_WIDTH,C_M_AXI_OUT_R_ARUSER_WIDTH,C_M_AXI_OUT_R_WUSER_WIDTH,C_M_AXI_OUT_R_RUSER_WIDTH,C_M_AXI_OUT_R_BUSER_WIDTH,C_M_AXI_OUT_R_USER_VALUE,C_M_AXI_OUT_R_PROT_VALUE,C_M_AXI_OUT_R_CACHE_VALUE>* bn_OUT_r_m_axi_U;
    sqrt_fixed_16_6_s* grp_sqrt_fixed_16_6_s_fu_303;
    bn_sdiv_27ns_14nsbkb<1,31,27,14,27>* bn_sdiv_27ns_14nsbkb_U2;
    bn_am_submul_16s_cud<1,1,16,16,16,33>* bn_am_submul_16s_cud_U3;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<14> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > in_V;
    sc_signal< sc_lv<32> > beta_V;
    sc_signal< sc_lv<32> > gamma_V;
    sc_signal< sc_lv<32> > moving_mean_V;
    sc_signal< sc_lv<32> > moving_variance_V;
    sc_signal< sc_lv<32> > out_V;
    sc_signal< sc_logic > IN_r_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > IN_r_blk_n_R;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter9;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter8_reg;
    sc_signal< sc_logic > BETA_blk_n_AR;
    sc_signal< sc_logic > BETA_blk_n_R;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter11;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter10_reg;
    sc_signal< sc_logic > GAMMA_blk_n_AR;
    sc_signal< sc_logic > GAMMA_blk_n_R;
    sc_signal< sc_logic > M_M_blk_n_AR;
    sc_signal< sc_logic > M_M_blk_n_R;
    sc_signal< sc_logic > M_V_blk_n_AR;
    sc_signal< sc_logic > M_V_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > OUT_r_blk_n_AW;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > OUT_r_blk_n_W;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter44;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter43_reg;
    sc_signal< sc_logic > OUT_r_blk_n_B;
    sc_signal< sc_logic > ap_CS_fsm_state58;
    sc_signal< sc_logic > IN_r_AWREADY;
    sc_signal< sc_logic > IN_r_WREADY;
    sc_signal< sc_logic > IN_r_ARVALID;
    sc_signal< sc_logic > IN_r_ARREADY;
    sc_signal< sc_logic > IN_r_RVALID;
    sc_signal< sc_logic > IN_r_RREADY;
    sc_signal< sc_lv<16> > IN_r_RDATA;
    sc_signal< sc_logic > IN_r_RLAST;
    sc_signal< sc_lv<1> > IN_r_RID;
    sc_signal< sc_lv<1> > IN_r_RUSER;
    sc_signal< sc_lv<2> > IN_r_RRESP;
    sc_signal< sc_logic > IN_r_BVALID;
    sc_signal< sc_lv<2> > IN_r_BRESP;
    sc_signal< sc_lv<1> > IN_r_BID;
    sc_signal< sc_lv<1> > IN_r_BUSER;
    sc_signal< sc_logic > BETA_AWREADY;
    sc_signal< sc_logic > BETA_WREADY;
    sc_signal< sc_logic > BETA_ARVALID;
    sc_signal< sc_logic > BETA_ARREADY;
    sc_signal< sc_logic > BETA_RVALID;
    sc_signal< sc_logic > BETA_RREADY;
    sc_signal< sc_lv<16> > BETA_RDATA;
    sc_signal< sc_logic > BETA_RLAST;
    sc_signal< sc_lv<1> > BETA_RID;
    sc_signal< sc_lv<1> > BETA_RUSER;
    sc_signal< sc_lv<2> > BETA_RRESP;
    sc_signal< sc_logic > BETA_BVALID;
    sc_signal< sc_lv<2> > BETA_BRESP;
    sc_signal< sc_lv<1> > BETA_BID;
    sc_signal< sc_lv<1> > BETA_BUSER;
    sc_signal< sc_logic > GAMMA_AWREADY;
    sc_signal< sc_logic > GAMMA_WREADY;
    sc_signal< sc_logic > GAMMA_ARVALID;
    sc_signal< sc_logic > GAMMA_ARREADY;
    sc_signal< sc_logic > GAMMA_RVALID;
    sc_signal< sc_logic > GAMMA_RREADY;
    sc_signal< sc_lv<16> > GAMMA_RDATA;
    sc_signal< sc_logic > GAMMA_RLAST;
    sc_signal< sc_lv<1> > GAMMA_RID;
    sc_signal< sc_lv<1> > GAMMA_RUSER;
    sc_signal< sc_lv<2> > GAMMA_RRESP;
    sc_signal< sc_logic > GAMMA_BVALID;
    sc_signal< sc_lv<2> > GAMMA_BRESP;
    sc_signal< sc_lv<1> > GAMMA_BID;
    sc_signal< sc_lv<1> > GAMMA_BUSER;
    sc_signal< sc_logic > M_M_AWREADY;
    sc_signal< sc_logic > M_M_WREADY;
    sc_signal< sc_logic > M_M_ARVALID;
    sc_signal< sc_logic > M_M_ARREADY;
    sc_signal< sc_logic > M_M_RVALID;
    sc_signal< sc_logic > M_M_RREADY;
    sc_signal< sc_lv<16> > M_M_RDATA;
    sc_signal< sc_logic > M_M_RLAST;
    sc_signal< sc_lv<1> > M_M_RID;
    sc_signal< sc_lv<1> > M_M_RUSER;
    sc_signal< sc_lv<2> > M_M_RRESP;
    sc_signal< sc_logic > M_M_BVALID;
    sc_signal< sc_lv<2> > M_M_BRESP;
    sc_signal< sc_lv<1> > M_M_BID;
    sc_signal< sc_lv<1> > M_M_BUSER;
    sc_signal< sc_logic > M_V_AWREADY;
    sc_signal< sc_logic > M_V_WREADY;
    sc_signal< sc_logic > M_V_ARVALID;
    sc_signal< sc_logic > M_V_ARREADY;
    sc_signal< sc_logic > M_V_RVALID;
    sc_signal< sc_logic > M_V_RREADY;
    sc_signal< sc_lv<16> > M_V_RDATA;
    sc_signal< sc_logic > M_V_RLAST;
    sc_signal< sc_lv<1> > M_V_RID;
    sc_signal< sc_lv<1> > M_V_RUSER;
    sc_signal< sc_lv<2> > M_V_RRESP;
    sc_signal< sc_logic > M_V_BVALID;
    sc_signal< sc_lv<2> > M_V_BRESP;
    sc_signal< sc_lv<1> > M_V_BID;
    sc_signal< sc_lv<1> > M_V_BUSER;
    sc_signal< sc_logic > OUT_r_AWVALID;
    sc_signal< sc_logic > OUT_r_AWREADY;
    sc_signal< sc_logic > OUT_r_WVALID;
    sc_signal< sc_logic > OUT_r_WREADY;
    sc_signal< sc_logic > OUT_r_ARREADY;
    sc_signal< sc_logic > OUT_r_RVALID;
    sc_signal< sc_lv<16> > OUT_r_RDATA;
    sc_signal< sc_logic > OUT_r_RLAST;
    sc_signal< sc_lv<1> > OUT_r_RID;
    sc_signal< sc_lv<1> > OUT_r_RUSER;
    sc_signal< sc_lv<2> > OUT_r_RRESP;
    sc_signal< sc_logic > OUT_r_BVALID;
    sc_signal< sc_logic > OUT_r_BREADY;
    sc_signal< sc_lv<2> > OUT_r_BRESP;
    sc_signal< sc_lv<1> > OUT_r_BID;
    sc_signal< sc_lv<1> > OUT_r_BUSER;
    sc_signal< sc_lv<8> > i_0_reg_292;
    sc_signal< sc_lv<32> > OUT_addr_reg_916;
    sc_signal< sc_lv<32> > M_V_addr_reg_922;
    sc_signal< sc_lv<32> > M_M_addr_reg_928;
    sc_signal< sc_lv<32> > GAMMA_addr_reg_934;
    sc_signal< sc_lv<32> > BETA_addr_reg_940;
    sc_signal< sc_lv<32> > IN_addr_reg_946;
    sc_signal< sc_lv<1> > icmp_ln330_fu_428_p2;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state14_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state15_pp0_stage0_iter6;
    sc_signal< bool > ap_block_state16_pp0_stage0_iter7;
    sc_signal< bool > ap_block_state17_pp0_stage0_iter8;
    sc_signal< bool > ap_block_state18_pp0_stage0_iter9;
    sc_signal< bool > ap_block_state19_pp0_stage0_iter10;
    sc_signal< bool > ap_block_state20_pp0_stage0_iter11;
    sc_signal< bool > ap_block_state21_pp0_stage0_iter12;
    sc_signal< bool > ap_block_state22_pp0_stage0_iter13;
    sc_signal< bool > ap_block_state23_pp0_stage0_iter14;
    sc_signal< bool > ap_block_state24_pp0_stage0_iter15;
    sc_signal< bool > ap_block_state25_pp0_stage0_iter16;
    sc_signal< bool > ap_block_state26_pp0_stage0_iter17;
    sc_signal< bool > ap_block_state27_pp0_stage0_iter18;
    sc_signal< bool > ap_block_state28_pp0_stage0_iter19;
    sc_signal< bool > ap_block_state29_pp0_stage0_iter20;
    sc_signal< bool > ap_block_state30_pp0_stage0_iter21;
    sc_signal< bool > ap_block_state31_pp0_stage0_iter22;
    sc_signal< bool > ap_block_state32_pp0_stage0_iter23;
    sc_signal< bool > ap_block_state33_pp0_stage0_iter24;
    sc_signal< bool > ap_block_state34_pp0_stage0_iter25;
    sc_signal< bool > ap_block_state35_pp0_stage0_iter26;
    sc_signal< bool > ap_block_state36_pp0_stage0_iter27;
    sc_signal< bool > ap_block_state37_pp0_stage0_iter28;
    sc_signal< bool > ap_block_state38_pp0_stage0_iter29;
    sc_signal< bool > ap_block_state39_pp0_stage0_iter30;
    sc_signal< bool > ap_block_state40_pp0_stage0_iter31;
    sc_signal< bool > ap_block_state41_pp0_stage0_iter32;
    sc_signal< bool > ap_block_state42_pp0_stage0_iter33;
    sc_signal< bool > ap_block_state43_pp0_stage0_iter34;
    sc_signal< bool > ap_block_state44_pp0_stage0_iter35;
    sc_signal< bool > ap_block_state45_pp0_stage0_iter36;
    sc_signal< bool > ap_block_state46_pp0_stage0_iter37;
    sc_signal< bool > ap_block_state47_pp0_stage0_iter38;
    sc_signal< bool > ap_block_state48_pp0_stage0_iter39;
    sc_signal< bool > ap_block_state49_pp0_stage0_iter40;
    sc_signal< bool > ap_block_state50_pp0_stage0_iter41;
    sc_signal< bool > ap_block_state51_pp0_stage0_iter42;
    sc_signal< bool > ap_block_state52_pp0_stage0_iter43;
    sc_signal< bool > ap_block_state53_pp0_stage0_iter44;
    sc_signal< bool > ap_block_state53_io;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter2_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter3_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter4_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter5_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter6_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter7_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter9_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter11_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter12_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter13_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter14_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter15_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter16_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter17_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter18_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter19_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter20_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter21_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter22_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter23_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter24_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter25_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter26_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter27_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter28_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter29_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter30_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter31_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter32_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter33_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter34_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter35_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter36_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter37_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter38_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter39_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter40_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter41_reg;
    sc_signal< sc_lv<1> > icmp_ln330_reg_952_pp0_iter42_reg;
    sc_signal< sc_lv<8> > i_fu_434_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<16> > p_Val2_s_reg_961;
    sc_signal< sc_lv<16> > tmp_num_V_fu_516_p3;
    sc_signal< sc_lv<16> > tmp_num_V_reg_967;
    sc_signal< sc_lv<16> > p_Val2_12_reg_972;
    sc_signal< sc_lv<16> > p_Val2_25_reg_977;
    sc_signal< sc_lv<16> > p_Val2_15_reg_982;
    sc_signal< sc_lv<33> > grp_fu_903_p3;
    sc_signal< sc_lv<33> > r_V_3_reg_987;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter10;
    sc_signal< sc_lv<1> > p_Result_6_reg_993;
    sc_signal< sc_lv<16> > p_Val2_17_reg_999;
    sc_signal< sc_lv<1> > tmp_35_reg_1004;
    sc_signal< sc_lv<6> > p_Result_s_reg_1009;
    sc_signal< sc_lv<7> > p_Result_1_reg_1014;
    sc_signal< sc_lv<16> > p_Val2_20_reg_1020;
    sc_signal< sc_lv<13> > grp_sqrt_fixed_16_6_s_fu_303_ap_return;
    sc_signal< sc_lv<13> > x_sqrt_V_reg_1025;
    sc_signal< sc_lv<16> > norm_V_fu_753_p3;
    sc_signal< sc_lv<16> > norm_V_reg_1030;
    sc_signal< sc_lv<16> > p_Val2_23_fu_798_p1;
    sc_signal< sc_lv<16> > p_Val2_23_reg_1045;
    sc_signal< sc_lv<1> > overflow_1_fu_838_p2;
    sc_signal< sc_lv<1> > overflow_1_reg_1051;
    sc_signal< sc_lv<1> > underflow_2_fu_862_p2;
    sc_signal< sc_lv<1> > underflow_2_reg_1057;
    sc_signal< sc_lv<16> > tmp_V_fu_895_p3;
    sc_signal< sc_lv<16> > tmp_V_reg_1064;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state9;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter7;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter8;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter12;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter13;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter14;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter15;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter16;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter17;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter18;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter19;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter20;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter21;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter22;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter23;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter24;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter25;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter26;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter27;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter28;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter29;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter30;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter31;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter32;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter33;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter34;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter35;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter36;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter37;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter38;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter39;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter40;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter41;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter42;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter43;
    sc_signal< sc_logic > grp_sqrt_fixed_16_6_s_fu_303_ap_ce;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter0_ignore_call20;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter1_ignore_call20;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter2_ignore_call20;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter3_ignore_call20;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter4_ignore_call20;
    sc_signal< bool > ap_block_state14_pp0_stage0_iter5_ignore_call20;
    sc_signal< bool > ap_block_state15_pp0_stage0_iter6_ignore_call20;
    sc_signal< bool > ap_block_state16_pp0_stage0_iter7_ignore_call20;
    sc_signal< bool > ap_block_state17_pp0_stage0_iter8_ignore_call20;
    sc_signal< bool > ap_block_state18_pp0_stage0_iter9_ignore_call20;
    sc_signal< bool > ap_block_state19_pp0_stage0_iter10_ignore_call20;
    sc_signal< bool > ap_block_state20_pp0_stage0_iter11_ignore_call20;
    sc_signal< bool > ap_block_state21_pp0_stage0_iter12_ignore_call20;
    sc_signal< bool > ap_block_state22_pp0_stage0_iter13_ignore_call20;
    sc_signal< bool > ap_block_state23_pp0_stage0_iter14_ignore_call20;
    sc_signal< bool > ap_block_state24_pp0_stage0_iter15_ignore_call20;
    sc_signal< bool > ap_block_state25_pp0_stage0_iter16_ignore_call20;
    sc_signal< bool > ap_block_state26_pp0_stage0_iter17_ignore_call20;
    sc_signal< bool > ap_block_state27_pp0_stage0_iter18_ignore_call20;
    sc_signal< bool > ap_block_state28_pp0_stage0_iter19_ignore_call20;
    sc_signal< bool > ap_block_state29_pp0_stage0_iter20_ignore_call20;
    sc_signal< bool > ap_block_state30_pp0_stage0_iter21_ignore_call20;
    sc_signal< bool > ap_block_state31_pp0_stage0_iter22_ignore_call20;
    sc_signal< bool > ap_block_state32_pp0_stage0_iter23_ignore_call20;
    sc_signal< bool > ap_block_state33_pp0_stage0_iter24_ignore_call20;
    sc_signal< bool > ap_block_state34_pp0_stage0_iter25_ignore_call20;
    sc_signal< bool > ap_block_state35_pp0_stage0_iter26_ignore_call20;
    sc_signal< bool > ap_block_state36_pp0_stage0_iter27_ignore_call20;
    sc_signal< bool > ap_block_state37_pp0_stage0_iter28_ignore_call20;
    sc_signal< bool > ap_block_state38_pp0_stage0_iter29_ignore_call20;
    sc_signal< bool > ap_block_state39_pp0_stage0_iter30_ignore_call20;
    sc_signal< bool > ap_block_state40_pp0_stage0_iter31_ignore_call20;
    sc_signal< bool > ap_block_state41_pp0_stage0_iter32_ignore_call20;
    sc_signal< bool > ap_block_state42_pp0_stage0_iter33_ignore_call20;
    sc_signal< bool > ap_block_state43_pp0_stage0_iter34_ignore_call20;
    sc_signal< bool > ap_block_state44_pp0_stage0_iter35_ignore_call20;
    sc_signal< bool > ap_block_state45_pp0_stage0_iter36_ignore_call20;
    sc_signal< bool > ap_block_state46_pp0_stage0_iter37_ignore_call20;
    sc_signal< bool > ap_block_state47_pp0_stage0_iter38_ignore_call20;
    sc_signal< bool > ap_block_state48_pp0_stage0_iter39_ignore_call20;
    sc_signal< bool > ap_block_state49_pp0_stage0_iter40_ignore_call20;
    sc_signal< bool > ap_block_state50_pp0_stage0_iter41_ignore_call20;
    sc_signal< bool > ap_block_state51_pp0_stage0_iter42_ignore_call20;
    sc_signal< bool > ap_block_state52_pp0_stage0_iter43_ignore_call20;
    sc_signal< bool > ap_block_state53_pp0_stage0_iter44_ignore_call20;
    sc_signal< bool > ap_block_pp0_stage0_11001_ignoreCallOp159;
    sc_signal< sc_lv<64> > empty_fu_318_p1;
    sc_signal< sc_lv<64> > empty_26_fu_338_p1;
    sc_signal< sc_lv<64> > empty_27_fu_358_p1;
    sc_signal< sc_lv<64> > empty_28_fu_378_p1;
    sc_signal< sc_lv<64> > empty_29_fu_398_p1;
    sc_signal< sc_lv<64> > empty_30_fu_418_p1;
    sc_signal< bool > ap_block_state2_io;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<31> > out_V1_fu_308_p4;
    sc_signal< sc_lv<31> > moving_variance_V9_fu_328_p4;
    sc_signal< sc_lv<31> > moving_mean_V7_fu_348_p4;
    sc_signal< sc_lv<31> > gamma_V5_fu_368_p4;
    sc_signal< sc_lv<31> > beta_V3_fu_388_p4;
    sc_signal< sc_lv<31> > in_V1_fu_408_p4;
    sc_signal< sc_lv<17> > lhs_V_fu_440_p1;
    sc_signal< sc_lv<17> > ret_V_10_fu_443_p2;
    sc_signal< sc_lv<16> > p_Val2_10_fu_457_p2;
    sc_signal< sc_lv<1> > p_Result_5_fu_462_p3;
    sc_signal< sc_lv<1> > p_Result_4_fu_449_p3;
    sc_signal< sc_lv<1> > xor_ln786_fu_470_p2;
    sc_signal< sc_lv<1> > xor_ln340_fu_488_p2;
    sc_signal< sc_lv<1> > xor_ln340_1_fu_482_p2;
    sc_signal< sc_lv<1> > underflow_fu_476_p2;
    sc_signal< sc_lv<1> > or_ln340_fu_494_p2;
    sc_signal< sc_lv<16> > select_ln340_fu_500_p3;
    sc_signal< sc_lv<16> > select_ln388_fu_508_p3;
    sc_signal< sc_lv<16> > zext_ln415_fu_581_p1;
    sc_signal< sc_lv<16> > p_Val2_18_fu_584_p2;
    sc_signal< sc_lv<1> > tmp_36_fu_589_p3;
    sc_signal< sc_lv<1> > p_Result_7_fu_574_p3;
    sc_signal< sc_lv<1> > xor_ln416_fu_597_p2;
    sc_signal< sc_lv<1> > carry_1_fu_603_p2;
    sc_signal< sc_lv<1> > Range1_all_ones_fu_622_p2;
    sc_signal< sc_lv<1> > Range1_all_zeros_fu_627_p2;
    sc_signal< sc_lv<1> > tmp_38_fu_640_p3;
    sc_signal< sc_lv<1> > Range2_all_ones_fu_617_p2;
    sc_signal< sc_lv<1> > xor_ln779_fu_647_p2;
    sc_signal< sc_lv<1> > and_ln779_fu_653_p2;
    sc_signal< sc_lv<1> > deleted_zeros_fu_632_p3;
    sc_signal< sc_lv<1> > p_Result_8_fu_609_p3;
    sc_signal< sc_lv<1> > xor_ln785_fu_673_p2;
    sc_signal< sc_lv<1> > or_ln785_fu_679_p2;
    sc_signal< sc_lv<1> > xor_ln785_1_fu_685_p2;
    sc_signal< sc_lv<1> > deleted_ones_fu_659_p3;
    sc_signal< sc_lv<1> > and_ln781_fu_667_p2;
    sc_signal< sc_lv<1> > and_ln786_fu_696_p2;
    sc_signal< sc_lv<1> > or_ln786_1_fu_702_p2;
    sc_signal< sc_lv<1> > xor_ln786_1_fu_708_p2;
    sc_signal< sc_lv<1> > underflow_1_fu_714_p2;
    sc_signal< sc_lv<1> > overflow_fu_690_p2;
    sc_signal< sc_lv<1> > or_ln340_2_fu_725_p2;
    sc_signal< sc_lv<1> > or_ln340_1_fu_719_p2;
    sc_signal< sc_lv<1> > or_ln340_3_fu_731_p2;
    sc_signal< sc_lv<16> > select_ln340_1_fu_737_p3;
    sc_signal< sc_lv<16> > select_ln388_1_fu_745_p3;
    sc_signal< sc_lv<17> > lhs_V_2_fu_761_p1;
    sc_signal< sc_lv<17> > rhs_V_1_fu_764_p1;
    sc_signal< sc_lv<17> > ret_V_11_fu_767_p2;
    sc_signal< sc_lv<27> > grp_fu_784_p0;
    sc_signal< sc_lv<14> > grp_fu_784_p1;
    sc_signal< sc_lv<27> > grp_fu_784_p2;
    sc_signal< sc_lv<11> > tmp_1_fu_810_p4;
    sc_signal< sc_lv<1> > p_Result_10_fu_802_p3;
    sc_signal< sc_lv<1> > icmp_ln785_fu_820_p2;
    sc_signal< sc_lv<1> > p_Result_9_fu_790_p3;
    sc_signal< sc_lv<1> > or_ln785_1_fu_826_p2;
    sc_signal< sc_lv<1> > xor_ln785_2_fu_832_p2;
    sc_signal< sc_lv<1> > icmp_ln786_fu_850_p2;
    sc_signal< sc_lv<1> > xor_ln786_2_fu_844_p2;
    sc_signal< sc_lv<1> > or_ln786_fu_856_p2;
    sc_signal< sc_lv<1> > xor_ln340_2_fu_872_p2;
    sc_signal< sc_lv<1> > or_ln340_4_fu_868_p2;
    sc_signal< sc_lv<1> > or_ln340_5_fu_877_p2;
    sc_signal< sc_lv<16> > select_ln340_2_fu_882_p3;
    sc_signal< sc_lv<16> > select_ln388_2_fu_889_p3;
    sc_signal< sc_logic > grp_fu_784_ce;
    sc_signal< sc_lv<14> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<27> > grp_fu_784_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<14> ap_ST_fsm_state1;
    static const sc_lv<14> ap_ST_fsm_state2;
    static const sc_lv<14> ap_ST_fsm_state3;
    static const sc_lv<14> ap_ST_fsm_state4;
    static const sc_lv<14> ap_ST_fsm_state5;
    static const sc_lv<14> ap_ST_fsm_state6;
    static const sc_lv<14> ap_ST_fsm_state7;
    static const sc_lv<14> ap_ST_fsm_state8;
    static const sc_lv<14> ap_ST_fsm_pp0_stage0;
    static const sc_lv<14> ap_ST_fsm_state54;
    static const sc_lv<14> ap_ST_fsm_state55;
    static const sc_lv<14> ap_ST_fsm_state56;
    static const sc_lv<14> ap_ST_fsm_state57;
    static const sc_lv<14> ap_ST_fsm_state58;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_D;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_IN_R_USER_VALUE;
    static const int C_M_AXI_IN_R_PROT_VALUE;
    static const int C_M_AXI_IN_R_CACHE_VALUE;
    static const int C_M_AXI_DATA_WIDTH;
    static const int C_M_AXI_BETA_USER_VALUE;
    static const int C_M_AXI_BETA_PROT_VALUE;
    static const int C_M_AXI_BETA_CACHE_VALUE;
    static const int C_M_AXI_GAMMA_USER_VALUE;
    static const int C_M_AXI_GAMMA_PROT_VALUE;
    static const int C_M_AXI_GAMMA_CACHE_VALUE;
    static const int C_M_AXI_M_M_USER_VALUE;
    static const int C_M_AXI_M_M_PROT_VALUE;
    static const int C_M_AXI_M_M_CACHE_VALUE;
    static const int C_M_AXI_M_V_USER_VALUE;
    static const int C_M_AXI_M_V_PROT_VALUE;
    static const int C_M_AXI_M_V_CACHE_VALUE;
    static const int C_M_AXI_OUT_R_USER_VALUE;
    static const int C_M_AXI_OUT_R_PROT_VALUE;
    static const int C_M_AXI_OUT_R_CACHE_VALUE;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_80;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<8> ap_const_lv8_80;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<17> ap_const_lv17_1;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<16> ap_const_lv16_7FFF;
    static const sc_lv<16> ap_const_lv16_8000;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<6> ap_const_lv6_3F;
    static const sc_lv<7> ap_const_lv7_7F;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<11> ap_const_lv11_7FF;
    static const sc_lv<16> ap_const_lv16_0;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const7();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const9();
    void thread_ap_var_for_const8();
    void thread_ap_clk_no_reset_();
    void thread_BETA_ARVALID();
    void thread_BETA_RREADY();
    void thread_BETA_blk_n_AR();
    void thread_BETA_blk_n_R();
    void thread_GAMMA_ARVALID();
    void thread_GAMMA_RREADY();
    void thread_GAMMA_blk_n_AR();
    void thread_GAMMA_blk_n_R();
    void thread_IN_r_ARVALID();
    void thread_IN_r_RREADY();
    void thread_IN_r_blk_n_AR();
    void thread_IN_r_blk_n_R();
    void thread_M_M_ARVALID();
    void thread_M_M_RREADY();
    void thread_M_M_blk_n_AR();
    void thread_M_M_blk_n_R();
    void thread_M_V_ARVALID();
    void thread_M_V_RREADY();
    void thread_M_V_blk_n_AR();
    void thread_M_V_blk_n_R();
    void thread_OUT_r_AWVALID();
    void thread_OUT_r_BREADY();
    void thread_OUT_r_WVALID();
    void thread_OUT_r_blk_n_AW();
    void thread_OUT_r_blk_n_B();
    void thread_OUT_r_blk_n_W();
    void thread_Range1_all_ones_fu_622_p2();
    void thread_Range1_all_zeros_fu_627_p2();
    void thread_Range2_all_ones_fu_617_p2();
    void thread_and_ln779_fu_653_p2();
    void thread_and_ln781_fu_667_p2();
    void thread_and_ln786_fu_696_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state58();
    void thread_ap_CS_fsm_state8();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_11001_ignoreCallOp159();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state10_pp0_stage0_iter1();
    void thread_ap_block_state10_pp0_stage0_iter1_ignore_call20();
    void thread_ap_block_state11_pp0_stage0_iter2();
    void thread_ap_block_state11_pp0_stage0_iter2_ignore_call20();
    void thread_ap_block_state12_pp0_stage0_iter3();
    void thread_ap_block_state12_pp0_stage0_iter3_ignore_call20();
    void thread_ap_block_state13_pp0_stage0_iter4();
    void thread_ap_block_state13_pp0_stage0_iter4_ignore_call20();
    void thread_ap_block_state14_pp0_stage0_iter5();
    void thread_ap_block_state14_pp0_stage0_iter5_ignore_call20();
    void thread_ap_block_state15_pp0_stage0_iter6();
    void thread_ap_block_state15_pp0_stage0_iter6_ignore_call20();
    void thread_ap_block_state16_pp0_stage0_iter7();
    void thread_ap_block_state16_pp0_stage0_iter7_ignore_call20();
    void thread_ap_block_state17_pp0_stage0_iter8();
    void thread_ap_block_state17_pp0_stage0_iter8_ignore_call20();
    void thread_ap_block_state18_pp0_stage0_iter9();
    void thread_ap_block_state18_pp0_stage0_iter9_ignore_call20();
    void thread_ap_block_state19_pp0_stage0_iter10();
    void thread_ap_block_state19_pp0_stage0_iter10_ignore_call20();
    void thread_ap_block_state20_pp0_stage0_iter11();
    void thread_ap_block_state20_pp0_stage0_iter11_ignore_call20();
    void thread_ap_block_state21_pp0_stage0_iter12();
    void thread_ap_block_state21_pp0_stage0_iter12_ignore_call20();
    void thread_ap_block_state22_pp0_stage0_iter13();
    void thread_ap_block_state22_pp0_stage0_iter13_ignore_call20();
    void thread_ap_block_state23_pp0_stage0_iter14();
    void thread_ap_block_state23_pp0_stage0_iter14_ignore_call20();
    void thread_ap_block_state24_pp0_stage0_iter15();
    void thread_ap_block_state24_pp0_stage0_iter15_ignore_call20();
    void thread_ap_block_state25_pp0_stage0_iter16();
    void thread_ap_block_state25_pp0_stage0_iter16_ignore_call20();
    void thread_ap_block_state26_pp0_stage0_iter17();
    void thread_ap_block_state26_pp0_stage0_iter17_ignore_call20();
    void thread_ap_block_state27_pp0_stage0_iter18();
    void thread_ap_block_state27_pp0_stage0_iter18_ignore_call20();
    void thread_ap_block_state28_pp0_stage0_iter19();
    void thread_ap_block_state28_pp0_stage0_iter19_ignore_call20();
    void thread_ap_block_state29_pp0_stage0_iter20();
    void thread_ap_block_state29_pp0_stage0_iter20_ignore_call20();
    void thread_ap_block_state2_io();
    void thread_ap_block_state30_pp0_stage0_iter21();
    void thread_ap_block_state30_pp0_stage0_iter21_ignore_call20();
    void thread_ap_block_state31_pp0_stage0_iter22();
    void thread_ap_block_state31_pp0_stage0_iter22_ignore_call20();
    void thread_ap_block_state32_pp0_stage0_iter23();
    void thread_ap_block_state32_pp0_stage0_iter23_ignore_call20();
    void thread_ap_block_state33_pp0_stage0_iter24();
    void thread_ap_block_state33_pp0_stage0_iter24_ignore_call20();
    void thread_ap_block_state34_pp0_stage0_iter25();
    void thread_ap_block_state34_pp0_stage0_iter25_ignore_call20();
    void thread_ap_block_state35_pp0_stage0_iter26();
    void thread_ap_block_state35_pp0_stage0_iter26_ignore_call20();
    void thread_ap_block_state36_pp0_stage0_iter27();
    void thread_ap_block_state36_pp0_stage0_iter27_ignore_call20();
    void thread_ap_block_state37_pp0_stage0_iter28();
    void thread_ap_block_state37_pp0_stage0_iter28_ignore_call20();
    void thread_ap_block_state38_pp0_stage0_iter29();
    void thread_ap_block_state38_pp0_stage0_iter29_ignore_call20();
    void thread_ap_block_state39_pp0_stage0_iter30();
    void thread_ap_block_state39_pp0_stage0_iter30_ignore_call20();
    void thread_ap_block_state40_pp0_stage0_iter31();
    void thread_ap_block_state40_pp0_stage0_iter31_ignore_call20();
    void thread_ap_block_state41_pp0_stage0_iter32();
    void thread_ap_block_state41_pp0_stage0_iter32_ignore_call20();
    void thread_ap_block_state42_pp0_stage0_iter33();
    void thread_ap_block_state42_pp0_stage0_iter33_ignore_call20();
    void thread_ap_block_state43_pp0_stage0_iter34();
    void thread_ap_block_state43_pp0_stage0_iter34_ignore_call20();
    void thread_ap_block_state44_pp0_stage0_iter35();
    void thread_ap_block_state44_pp0_stage0_iter35_ignore_call20();
    void thread_ap_block_state45_pp0_stage0_iter36();
    void thread_ap_block_state45_pp0_stage0_iter36_ignore_call20();
    void thread_ap_block_state46_pp0_stage0_iter37();
    void thread_ap_block_state46_pp0_stage0_iter37_ignore_call20();
    void thread_ap_block_state47_pp0_stage0_iter38();
    void thread_ap_block_state47_pp0_stage0_iter38_ignore_call20();
    void thread_ap_block_state48_pp0_stage0_iter39();
    void thread_ap_block_state48_pp0_stage0_iter39_ignore_call20();
    void thread_ap_block_state49_pp0_stage0_iter40();
    void thread_ap_block_state49_pp0_stage0_iter40_ignore_call20();
    void thread_ap_block_state50_pp0_stage0_iter41();
    void thread_ap_block_state50_pp0_stage0_iter41_ignore_call20();
    void thread_ap_block_state51_pp0_stage0_iter42();
    void thread_ap_block_state51_pp0_stage0_iter42_ignore_call20();
    void thread_ap_block_state52_pp0_stage0_iter43();
    void thread_ap_block_state52_pp0_stage0_iter43_ignore_call20();
    void thread_ap_block_state53_io();
    void thread_ap_block_state53_pp0_stage0_iter44();
    void thread_ap_block_state53_pp0_stage0_iter44_ignore_call20();
    void thread_ap_block_state9_pp0_stage0_iter0();
    void thread_ap_block_state9_pp0_stage0_iter0_ignore_call20();
    void thread_ap_condition_pp0_exit_iter0_state9();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_beta_V3_fu_388_p4();
    void thread_carry_1_fu_603_p2();
    void thread_deleted_ones_fu_659_p3();
    void thread_deleted_zeros_fu_632_p3();
    void thread_empty_26_fu_338_p1();
    void thread_empty_27_fu_358_p1();
    void thread_empty_28_fu_378_p1();
    void thread_empty_29_fu_398_p1();
    void thread_empty_30_fu_418_p1();
    void thread_empty_fu_318_p1();
    void thread_gamma_V5_fu_368_p4();
    void thread_grp_fu_784_ce();
    void thread_grp_fu_784_p0();
    void thread_grp_fu_784_p1();
    void thread_grp_fu_784_p10();
    void thread_grp_sqrt_fixed_16_6_s_fu_303_ap_ce();
    void thread_i_fu_434_p2();
    void thread_icmp_ln330_fu_428_p2();
    void thread_icmp_ln785_fu_820_p2();
    void thread_icmp_ln786_fu_850_p2();
    void thread_in_V1_fu_408_p4();
    void thread_lhs_V_2_fu_761_p1();
    void thread_lhs_V_fu_440_p1();
    void thread_moving_mean_V7_fu_348_p4();
    void thread_moving_variance_V9_fu_328_p4();
    void thread_norm_V_fu_753_p3();
    void thread_or_ln340_1_fu_719_p2();
    void thread_or_ln340_2_fu_725_p2();
    void thread_or_ln340_3_fu_731_p2();
    void thread_or_ln340_4_fu_868_p2();
    void thread_or_ln340_5_fu_877_p2();
    void thread_or_ln340_fu_494_p2();
    void thread_or_ln785_1_fu_826_p2();
    void thread_or_ln785_fu_679_p2();
    void thread_or_ln786_1_fu_702_p2();
    void thread_or_ln786_fu_856_p2();
    void thread_out_V1_fu_308_p4();
    void thread_overflow_1_fu_838_p2();
    void thread_overflow_fu_690_p2();
    void thread_p_Result_10_fu_802_p3();
    void thread_p_Result_4_fu_449_p3();
    void thread_p_Result_5_fu_462_p3();
    void thread_p_Result_7_fu_574_p3();
    void thread_p_Result_8_fu_609_p3();
    void thread_p_Result_9_fu_790_p3();
    void thread_p_Val2_10_fu_457_p2();
    void thread_p_Val2_18_fu_584_p2();
    void thread_p_Val2_23_fu_798_p1();
    void thread_ret_V_10_fu_443_p2();
    void thread_ret_V_11_fu_767_p2();
    void thread_rhs_V_1_fu_764_p1();
    void thread_select_ln340_1_fu_737_p3();
    void thread_select_ln340_2_fu_882_p3();
    void thread_select_ln340_fu_500_p3();
    void thread_select_ln388_1_fu_745_p3();
    void thread_select_ln388_2_fu_889_p3();
    void thread_select_ln388_fu_508_p3();
    void thread_tmp_1_fu_810_p4();
    void thread_tmp_36_fu_589_p3();
    void thread_tmp_38_fu_640_p3();
    void thread_tmp_V_fu_895_p3();
    void thread_tmp_num_V_fu_516_p3();
    void thread_underflow_1_fu_714_p2();
    void thread_underflow_2_fu_862_p2();
    void thread_underflow_fu_476_p2();
    void thread_xor_ln340_1_fu_482_p2();
    void thread_xor_ln340_2_fu_872_p2();
    void thread_xor_ln340_fu_488_p2();
    void thread_xor_ln416_fu_597_p2();
    void thread_xor_ln779_fu_647_p2();
    void thread_xor_ln785_1_fu_685_p2();
    void thread_xor_ln785_2_fu_832_p2();
    void thread_xor_ln785_fu_673_p2();
    void thread_xor_ln786_1_fu_708_p2();
    void thread_xor_ln786_2_fu_844_p2();
    void thread_xor_ln786_fu_470_p2();
    void thread_zext_ln415_fu_581_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
