// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _bn_HH_
#define _bn_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "sqrt_fixed_16_6_s.h"
#include "bn_sdiv_44s_14ns_bkb.h"
#include "bn_ama_submuladd_cud.h"
#include "bn_CTRL_s_axi.h"
#include "bn_IN_r_m_axi.h"
#include "bn_BETA_m_axi.h"
#include "bn_GAMMA_m_axi.h"
#include "bn_M_M_m_axi.h"
#include "bn_M_V_m_axi.h"
#include "bn_OUT_r_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_IN_R_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_IN_R_ID_WIDTH = 1,
         unsigned int C_M_AXI_IN_R_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_IN_R_DATA_WIDTH = 64,
         unsigned int C_M_AXI_IN_R_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_IN_R_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_IN_R_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_IN_R_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_BETA_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_BETA_ID_WIDTH = 1,
         unsigned int C_M_AXI_BETA_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_BETA_DATA_WIDTH = 64,
         unsigned int C_M_AXI_BETA_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_BETA_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_BETA_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_BETA_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_GAMMA_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_GAMMA_ID_WIDTH = 1,
         unsigned int C_M_AXI_GAMMA_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_GAMMA_DATA_WIDTH = 64,
         unsigned int C_M_AXI_GAMMA_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_GAMMA_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_GAMMA_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_GAMMA_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_M_M_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_M_M_ID_WIDTH = 1,
         unsigned int C_M_AXI_M_M_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_M_M_DATA_WIDTH = 64,
         unsigned int C_M_AXI_M_M_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_M_M_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_M_M_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_M_M_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_M_V_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_M_V_ID_WIDTH = 1,
         unsigned int C_M_AXI_M_V_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_M_V_DATA_WIDTH = 64,
         unsigned int C_M_AXI_M_V_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_M_V_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_M_V_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_M_V_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUT_R_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_OUT_R_ID_WIDTH = 1,
         unsigned int C_M_AXI_OUT_R_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUT_R_DATA_WIDTH = 64,
         unsigned int C_M_AXI_OUT_R_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUT_R_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUT_R_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUT_R_BUSER_WIDTH = 1,
         unsigned int C_S_AXI_CTRL_ADDR_WIDTH = 6,
         unsigned int C_S_AXI_CTRL_DATA_WIDTH = 32>
struct bn : public sc_module {
    // Port declarations 290
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_IN_r_AWVALID;
    sc_in< sc_logic > m_axi_IN_r_AWREADY;
    sc_out< sc_uint<C_M_AXI_IN_R_ADDR_WIDTH> > m_axi_IN_r_AWADDR;
    sc_out< sc_uint<C_M_AXI_IN_R_ID_WIDTH> > m_axi_IN_r_AWID;
    sc_out< sc_lv<8> > m_axi_IN_r_AWLEN;
    sc_out< sc_lv<3> > m_axi_IN_r_AWSIZE;
    sc_out< sc_lv<2> > m_axi_IN_r_AWBURST;
    sc_out< sc_lv<2> > m_axi_IN_r_AWLOCK;
    sc_out< sc_lv<4> > m_axi_IN_r_AWCACHE;
    sc_out< sc_lv<3> > m_axi_IN_r_AWPROT;
    sc_out< sc_lv<4> > m_axi_IN_r_AWQOS;
    sc_out< sc_lv<4> > m_axi_IN_r_AWREGION;
    sc_out< sc_uint<C_M_AXI_IN_R_AWUSER_WIDTH> > m_axi_IN_r_AWUSER;
    sc_out< sc_logic > m_axi_IN_r_WVALID;
    sc_in< sc_logic > m_axi_IN_r_WREADY;
    sc_out< sc_uint<C_M_AXI_IN_R_DATA_WIDTH> > m_axi_IN_r_WDATA;
    sc_out< sc_uint<C_M_AXI_IN_R_DATA_WIDTH/8> > m_axi_IN_r_WSTRB;
    sc_out< sc_logic > m_axi_IN_r_WLAST;
    sc_out< sc_uint<C_M_AXI_IN_R_ID_WIDTH> > m_axi_IN_r_WID;
    sc_out< sc_uint<C_M_AXI_IN_R_WUSER_WIDTH> > m_axi_IN_r_WUSER;
    sc_out< sc_logic > m_axi_IN_r_ARVALID;
    sc_in< sc_logic > m_axi_IN_r_ARREADY;
    sc_out< sc_uint<C_M_AXI_IN_R_ADDR_WIDTH> > m_axi_IN_r_ARADDR;
    sc_out< sc_uint<C_M_AXI_IN_R_ID_WIDTH> > m_axi_IN_r_ARID;
    sc_out< sc_lv<8> > m_axi_IN_r_ARLEN;
    sc_out< sc_lv<3> > m_axi_IN_r_ARSIZE;
    sc_out< sc_lv<2> > m_axi_IN_r_ARBURST;
    sc_out< sc_lv<2> > m_axi_IN_r_ARLOCK;
    sc_out< sc_lv<4> > m_axi_IN_r_ARCACHE;
    sc_out< sc_lv<3> > m_axi_IN_r_ARPROT;
    sc_out< sc_lv<4> > m_axi_IN_r_ARQOS;
    sc_out< sc_lv<4> > m_axi_IN_r_ARREGION;
    sc_out< sc_uint<C_M_AXI_IN_R_ARUSER_WIDTH> > m_axi_IN_r_ARUSER;
    sc_in< sc_logic > m_axi_IN_r_RVALID;
    sc_out< sc_logic > m_axi_IN_r_RREADY;
    sc_in< sc_uint<C_M_AXI_IN_R_DATA_WIDTH> > m_axi_IN_r_RDATA;
    sc_in< sc_logic > m_axi_IN_r_RLAST;
    sc_in< sc_uint<C_M_AXI_IN_R_ID_WIDTH> > m_axi_IN_r_RID;
    sc_in< sc_uint<C_M_AXI_IN_R_RUSER_WIDTH> > m_axi_IN_r_RUSER;
    sc_in< sc_lv<2> > m_axi_IN_r_RRESP;
    sc_in< sc_logic > m_axi_IN_r_BVALID;
    sc_out< sc_logic > m_axi_IN_r_BREADY;
    sc_in< sc_lv<2> > m_axi_IN_r_BRESP;
    sc_in< sc_uint<C_M_AXI_IN_R_ID_WIDTH> > m_axi_IN_r_BID;
    sc_in< sc_uint<C_M_AXI_IN_R_BUSER_WIDTH> > m_axi_IN_r_BUSER;
    sc_out< sc_logic > m_axi_BETA_AWVALID;
    sc_in< sc_logic > m_axi_BETA_AWREADY;
    sc_out< sc_uint<C_M_AXI_BETA_ADDR_WIDTH> > m_axi_BETA_AWADDR;
    sc_out< sc_uint<C_M_AXI_BETA_ID_WIDTH> > m_axi_BETA_AWID;
    sc_out< sc_lv<8> > m_axi_BETA_AWLEN;
    sc_out< sc_lv<3> > m_axi_BETA_AWSIZE;
    sc_out< sc_lv<2> > m_axi_BETA_AWBURST;
    sc_out< sc_lv<2> > m_axi_BETA_AWLOCK;
    sc_out< sc_lv<4> > m_axi_BETA_AWCACHE;
    sc_out< sc_lv<3> > m_axi_BETA_AWPROT;
    sc_out< sc_lv<4> > m_axi_BETA_AWQOS;
    sc_out< sc_lv<4> > m_axi_BETA_AWREGION;
    sc_out< sc_uint<C_M_AXI_BETA_AWUSER_WIDTH> > m_axi_BETA_AWUSER;
    sc_out< sc_logic > m_axi_BETA_WVALID;
    sc_in< sc_logic > m_axi_BETA_WREADY;
    sc_out< sc_uint<C_M_AXI_BETA_DATA_WIDTH> > m_axi_BETA_WDATA;
    sc_out< sc_uint<C_M_AXI_BETA_DATA_WIDTH/8> > m_axi_BETA_WSTRB;
    sc_out< sc_logic > m_axi_BETA_WLAST;
    sc_out< sc_uint<C_M_AXI_BETA_ID_WIDTH> > m_axi_BETA_WID;
    sc_out< sc_uint<C_M_AXI_BETA_WUSER_WIDTH> > m_axi_BETA_WUSER;
    sc_out< sc_logic > m_axi_BETA_ARVALID;
    sc_in< sc_logic > m_axi_BETA_ARREADY;
    sc_out< sc_uint<C_M_AXI_BETA_ADDR_WIDTH> > m_axi_BETA_ARADDR;
    sc_out< sc_uint<C_M_AXI_BETA_ID_WIDTH> > m_axi_BETA_ARID;
    sc_out< sc_lv<8> > m_axi_BETA_ARLEN;
    sc_out< sc_lv<3> > m_axi_BETA_ARSIZE;
    sc_out< sc_lv<2> > m_axi_BETA_ARBURST;
    sc_out< sc_lv<2> > m_axi_BETA_ARLOCK;
    sc_out< sc_lv<4> > m_axi_BETA_ARCACHE;
    sc_out< sc_lv<3> > m_axi_BETA_ARPROT;
    sc_out< sc_lv<4> > m_axi_BETA_ARQOS;
    sc_out< sc_lv<4> > m_axi_BETA_ARREGION;
    sc_out< sc_uint<C_M_AXI_BETA_ARUSER_WIDTH> > m_axi_BETA_ARUSER;
    sc_in< sc_logic > m_axi_BETA_RVALID;
    sc_out< sc_logic > m_axi_BETA_RREADY;
    sc_in< sc_uint<C_M_AXI_BETA_DATA_WIDTH> > m_axi_BETA_RDATA;
    sc_in< sc_logic > m_axi_BETA_RLAST;
    sc_in< sc_uint<C_M_AXI_BETA_ID_WIDTH> > m_axi_BETA_RID;
    sc_in< sc_uint<C_M_AXI_BETA_RUSER_WIDTH> > m_axi_BETA_RUSER;
    sc_in< sc_lv<2> > m_axi_BETA_RRESP;
    sc_in< sc_logic > m_axi_BETA_BVALID;
    sc_out< sc_logic > m_axi_BETA_BREADY;
    sc_in< sc_lv<2> > m_axi_BETA_BRESP;
    sc_in< sc_uint<C_M_AXI_BETA_ID_WIDTH> > m_axi_BETA_BID;
    sc_in< sc_uint<C_M_AXI_BETA_BUSER_WIDTH> > m_axi_BETA_BUSER;
    sc_out< sc_logic > m_axi_GAMMA_AWVALID;
    sc_in< sc_logic > m_axi_GAMMA_AWREADY;
    sc_out< sc_uint<C_M_AXI_GAMMA_ADDR_WIDTH> > m_axi_GAMMA_AWADDR;
    sc_out< sc_uint<C_M_AXI_GAMMA_ID_WIDTH> > m_axi_GAMMA_AWID;
    sc_out< sc_lv<8> > m_axi_GAMMA_AWLEN;
    sc_out< sc_lv<3> > m_axi_GAMMA_AWSIZE;
    sc_out< sc_lv<2> > m_axi_GAMMA_AWBURST;
    sc_out< sc_lv<2> > m_axi_GAMMA_AWLOCK;
    sc_out< sc_lv<4> > m_axi_GAMMA_AWCACHE;
    sc_out< sc_lv<3> > m_axi_GAMMA_AWPROT;
    sc_out< sc_lv<4> > m_axi_GAMMA_AWQOS;
    sc_out< sc_lv<4> > m_axi_GAMMA_AWREGION;
    sc_out< sc_uint<C_M_AXI_GAMMA_AWUSER_WIDTH> > m_axi_GAMMA_AWUSER;
    sc_out< sc_logic > m_axi_GAMMA_WVALID;
    sc_in< sc_logic > m_axi_GAMMA_WREADY;
    sc_out< sc_uint<C_M_AXI_GAMMA_DATA_WIDTH> > m_axi_GAMMA_WDATA;
    sc_out< sc_uint<C_M_AXI_GAMMA_DATA_WIDTH/8> > m_axi_GAMMA_WSTRB;
    sc_out< sc_logic > m_axi_GAMMA_WLAST;
    sc_out< sc_uint<C_M_AXI_GAMMA_ID_WIDTH> > m_axi_GAMMA_WID;
    sc_out< sc_uint<C_M_AXI_GAMMA_WUSER_WIDTH> > m_axi_GAMMA_WUSER;
    sc_out< sc_logic > m_axi_GAMMA_ARVALID;
    sc_in< sc_logic > m_axi_GAMMA_ARREADY;
    sc_out< sc_uint<C_M_AXI_GAMMA_ADDR_WIDTH> > m_axi_GAMMA_ARADDR;
    sc_out< sc_uint<C_M_AXI_GAMMA_ID_WIDTH> > m_axi_GAMMA_ARID;
    sc_out< sc_lv<8> > m_axi_GAMMA_ARLEN;
    sc_out< sc_lv<3> > m_axi_GAMMA_ARSIZE;
    sc_out< sc_lv<2> > m_axi_GAMMA_ARBURST;
    sc_out< sc_lv<2> > m_axi_GAMMA_ARLOCK;
    sc_out< sc_lv<4> > m_axi_GAMMA_ARCACHE;
    sc_out< sc_lv<3> > m_axi_GAMMA_ARPROT;
    sc_out< sc_lv<4> > m_axi_GAMMA_ARQOS;
    sc_out< sc_lv<4> > m_axi_GAMMA_ARREGION;
    sc_out< sc_uint<C_M_AXI_GAMMA_ARUSER_WIDTH> > m_axi_GAMMA_ARUSER;
    sc_in< sc_logic > m_axi_GAMMA_RVALID;
    sc_out< sc_logic > m_axi_GAMMA_RREADY;
    sc_in< sc_uint<C_M_AXI_GAMMA_DATA_WIDTH> > m_axi_GAMMA_RDATA;
    sc_in< sc_logic > m_axi_GAMMA_RLAST;
    sc_in< sc_uint<C_M_AXI_GAMMA_ID_WIDTH> > m_axi_GAMMA_RID;
    sc_in< sc_uint<C_M_AXI_GAMMA_RUSER_WIDTH> > m_axi_GAMMA_RUSER;
    sc_in< sc_lv<2> > m_axi_GAMMA_RRESP;
    sc_in< sc_logic > m_axi_GAMMA_BVALID;
    sc_out< sc_logic > m_axi_GAMMA_BREADY;
    sc_in< sc_lv<2> > m_axi_GAMMA_BRESP;
    sc_in< sc_uint<C_M_AXI_GAMMA_ID_WIDTH> > m_axi_GAMMA_BID;
    sc_in< sc_uint<C_M_AXI_GAMMA_BUSER_WIDTH> > m_axi_GAMMA_BUSER;
    sc_out< sc_logic > m_axi_M_M_AWVALID;
    sc_in< sc_logic > m_axi_M_M_AWREADY;
    sc_out< sc_uint<C_M_AXI_M_M_ADDR_WIDTH> > m_axi_M_M_AWADDR;
    sc_out< sc_uint<C_M_AXI_M_M_ID_WIDTH> > m_axi_M_M_AWID;
    sc_out< sc_lv<8> > m_axi_M_M_AWLEN;
    sc_out< sc_lv<3> > m_axi_M_M_AWSIZE;
    sc_out< sc_lv<2> > m_axi_M_M_AWBURST;
    sc_out< sc_lv<2> > m_axi_M_M_AWLOCK;
    sc_out< sc_lv<4> > m_axi_M_M_AWCACHE;
    sc_out< sc_lv<3> > m_axi_M_M_AWPROT;
    sc_out< sc_lv<4> > m_axi_M_M_AWQOS;
    sc_out< sc_lv<4> > m_axi_M_M_AWREGION;
    sc_out< sc_uint<C_M_AXI_M_M_AWUSER_WIDTH> > m_axi_M_M_AWUSER;
    sc_out< sc_logic > m_axi_M_M_WVALID;
    sc_in< sc_logic > m_axi_M_M_WREADY;
    sc_out< sc_uint<C_M_AXI_M_M_DATA_WIDTH> > m_axi_M_M_WDATA;
    sc_out< sc_uint<C_M_AXI_M_M_DATA_WIDTH/8> > m_axi_M_M_WSTRB;
    sc_out< sc_logic > m_axi_M_M_WLAST;
    sc_out< sc_uint<C_M_AXI_M_M_ID_WIDTH> > m_axi_M_M_WID;
    sc_out< sc_uint<C_M_AXI_M_M_WUSER_WIDTH> > m_axi_M_M_WUSER;
    sc_out< sc_logic > m_axi_M_M_ARVALID;
    sc_in< sc_logic > m_axi_M_M_ARREADY;
    sc_out< sc_uint<C_M_AXI_M_M_ADDR_WIDTH> > m_axi_M_M_ARADDR;
    sc_out< sc_uint<C_M_AXI_M_M_ID_WIDTH> > m_axi_M_M_ARID;
    sc_out< sc_lv<8> > m_axi_M_M_ARLEN;
    sc_out< sc_lv<3> > m_axi_M_M_ARSIZE;
    sc_out< sc_lv<2> > m_axi_M_M_ARBURST;
    sc_out< sc_lv<2> > m_axi_M_M_ARLOCK;
    sc_out< sc_lv<4> > m_axi_M_M_ARCACHE;
    sc_out< sc_lv<3> > m_axi_M_M_ARPROT;
    sc_out< sc_lv<4> > m_axi_M_M_ARQOS;
    sc_out< sc_lv<4> > m_axi_M_M_ARREGION;
    sc_out< sc_uint<C_M_AXI_M_M_ARUSER_WIDTH> > m_axi_M_M_ARUSER;
    sc_in< sc_logic > m_axi_M_M_RVALID;
    sc_out< sc_logic > m_axi_M_M_RREADY;
    sc_in< sc_uint<C_M_AXI_M_M_DATA_WIDTH> > m_axi_M_M_RDATA;
    sc_in< sc_logic > m_axi_M_M_RLAST;
    sc_in< sc_uint<C_M_AXI_M_M_ID_WIDTH> > m_axi_M_M_RID;
    sc_in< sc_uint<C_M_AXI_M_M_RUSER_WIDTH> > m_axi_M_M_RUSER;
    sc_in< sc_lv<2> > m_axi_M_M_RRESP;
    sc_in< sc_logic > m_axi_M_M_BVALID;
    sc_out< sc_logic > m_axi_M_M_BREADY;
    sc_in< sc_lv<2> > m_axi_M_M_BRESP;
    sc_in< sc_uint<C_M_AXI_M_M_ID_WIDTH> > m_axi_M_M_BID;
    sc_in< sc_uint<C_M_AXI_M_M_BUSER_WIDTH> > m_axi_M_M_BUSER;
    sc_out< sc_logic > m_axi_M_V_AWVALID;
    sc_in< sc_logic > m_axi_M_V_AWREADY;
    sc_out< sc_uint<C_M_AXI_M_V_ADDR_WIDTH> > m_axi_M_V_AWADDR;
    sc_out< sc_uint<C_M_AXI_M_V_ID_WIDTH> > m_axi_M_V_AWID;
    sc_out< sc_lv<8> > m_axi_M_V_AWLEN;
    sc_out< sc_lv<3> > m_axi_M_V_AWSIZE;
    sc_out< sc_lv<2> > m_axi_M_V_AWBURST;
    sc_out< sc_lv<2> > m_axi_M_V_AWLOCK;
    sc_out< sc_lv<4> > m_axi_M_V_AWCACHE;
    sc_out< sc_lv<3> > m_axi_M_V_AWPROT;
    sc_out< sc_lv<4> > m_axi_M_V_AWQOS;
    sc_out< sc_lv<4> > m_axi_M_V_AWREGION;
    sc_out< sc_uint<C_M_AXI_M_V_AWUSER_WIDTH> > m_axi_M_V_AWUSER;
    sc_out< sc_logic > m_axi_M_V_WVALID;
    sc_in< sc_logic > m_axi_M_V_WREADY;
    sc_out< sc_uint<C_M_AXI_M_V_DATA_WIDTH> > m_axi_M_V_WDATA;
    sc_out< sc_uint<C_M_AXI_M_V_DATA_WIDTH/8> > m_axi_M_V_WSTRB;
    sc_out< sc_logic > m_axi_M_V_WLAST;
    sc_out< sc_uint<C_M_AXI_M_V_ID_WIDTH> > m_axi_M_V_WID;
    sc_out< sc_uint<C_M_AXI_M_V_WUSER_WIDTH> > m_axi_M_V_WUSER;
    sc_out< sc_logic > m_axi_M_V_ARVALID;
    sc_in< sc_logic > m_axi_M_V_ARREADY;
    sc_out< sc_uint<C_M_AXI_M_V_ADDR_WIDTH> > m_axi_M_V_ARADDR;
    sc_out< sc_uint<C_M_AXI_M_V_ID_WIDTH> > m_axi_M_V_ARID;
    sc_out< sc_lv<8> > m_axi_M_V_ARLEN;
    sc_out< sc_lv<3> > m_axi_M_V_ARSIZE;
    sc_out< sc_lv<2> > m_axi_M_V_ARBURST;
    sc_out< sc_lv<2> > m_axi_M_V_ARLOCK;
    sc_out< sc_lv<4> > m_axi_M_V_ARCACHE;
    sc_out< sc_lv<3> > m_axi_M_V_ARPROT;
    sc_out< sc_lv<4> > m_axi_M_V_ARQOS;
    sc_out< sc_lv<4> > m_axi_M_V_ARREGION;
    sc_out< sc_uint<C_M_AXI_M_V_ARUSER_WIDTH> > m_axi_M_V_ARUSER;
    sc_in< sc_logic > m_axi_M_V_RVALID;
    sc_out< sc_logic > m_axi_M_V_RREADY;
    sc_in< sc_uint<C_M_AXI_M_V_DATA_WIDTH> > m_axi_M_V_RDATA;
    sc_in< sc_logic > m_axi_M_V_RLAST;
    sc_in< sc_uint<C_M_AXI_M_V_ID_WIDTH> > m_axi_M_V_RID;
    sc_in< sc_uint<C_M_AXI_M_V_RUSER_WIDTH> > m_axi_M_V_RUSER;
    sc_in< sc_lv<2> > m_axi_M_V_RRESP;
    sc_in< sc_logic > m_axi_M_V_BVALID;
    sc_out< sc_logic > m_axi_M_V_BREADY;
    sc_in< sc_lv<2> > m_axi_M_V_BRESP;
    sc_in< sc_uint<C_M_AXI_M_V_ID_WIDTH> > m_axi_M_V_BID;
    sc_in< sc_uint<C_M_AXI_M_V_BUSER_WIDTH> > m_axi_M_V_BUSER;
    sc_out< sc_logic > m_axi_OUT_r_AWVALID;
    sc_in< sc_logic > m_axi_OUT_r_AWREADY;
    sc_out< sc_uint<C_M_AXI_OUT_R_ADDR_WIDTH> > m_axi_OUT_r_AWADDR;
    sc_out< sc_uint<C_M_AXI_OUT_R_ID_WIDTH> > m_axi_OUT_r_AWID;
    sc_out< sc_lv<8> > m_axi_OUT_r_AWLEN;
    sc_out< sc_lv<3> > m_axi_OUT_r_AWSIZE;
    sc_out< sc_lv<2> > m_axi_OUT_r_AWBURST;
    sc_out< sc_lv<2> > m_axi_OUT_r_AWLOCK;
    sc_out< sc_lv<4> > m_axi_OUT_r_AWCACHE;
    sc_out< sc_lv<3> > m_axi_OUT_r_AWPROT;
    sc_out< sc_lv<4> > m_axi_OUT_r_AWQOS;
    sc_out< sc_lv<4> > m_axi_OUT_r_AWREGION;
    sc_out< sc_uint<C_M_AXI_OUT_R_AWUSER_WIDTH> > m_axi_OUT_r_AWUSER;
    sc_out< sc_logic > m_axi_OUT_r_WVALID;
    sc_in< sc_logic > m_axi_OUT_r_WREADY;
    sc_out< sc_uint<C_M_AXI_OUT_R_DATA_WIDTH> > m_axi_OUT_r_WDATA;
    sc_out< sc_uint<C_M_AXI_OUT_R_DATA_WIDTH/8> > m_axi_OUT_r_WSTRB;
    sc_out< sc_logic > m_axi_OUT_r_WLAST;
    sc_out< sc_uint<C_M_AXI_OUT_R_ID_WIDTH> > m_axi_OUT_r_WID;
    sc_out< sc_uint<C_M_AXI_OUT_R_WUSER_WIDTH> > m_axi_OUT_r_WUSER;
    sc_out< sc_logic > m_axi_OUT_r_ARVALID;
    sc_in< sc_logic > m_axi_OUT_r_ARREADY;
    sc_out< sc_uint<C_M_AXI_OUT_R_ADDR_WIDTH> > m_axi_OUT_r_ARADDR;
    sc_out< sc_uint<C_M_AXI_OUT_R_ID_WIDTH> > m_axi_OUT_r_ARID;
    sc_out< sc_lv<8> > m_axi_OUT_r_ARLEN;
    sc_out< sc_lv<3> > m_axi_OUT_r_ARSIZE;
    sc_out< sc_lv<2> > m_axi_OUT_r_ARBURST;
    sc_out< sc_lv<2> > m_axi_OUT_r_ARLOCK;
    sc_out< sc_lv<4> > m_axi_OUT_r_ARCACHE;
    sc_out< sc_lv<3> > m_axi_OUT_r_ARPROT;
    sc_out< sc_lv<4> > m_axi_OUT_r_ARQOS;
    sc_out< sc_lv<4> > m_axi_OUT_r_ARREGION;
    sc_out< sc_uint<C_M_AXI_OUT_R_ARUSER_WIDTH> > m_axi_OUT_r_ARUSER;
    sc_in< sc_logic > m_axi_OUT_r_RVALID;
    sc_out< sc_logic > m_axi_OUT_r_RREADY;
    sc_in< sc_uint<C_M_AXI_OUT_R_DATA_WIDTH> > m_axi_OUT_r_RDATA;
    sc_in< sc_logic > m_axi_OUT_r_RLAST;
    sc_in< sc_uint<C_M_AXI_OUT_R_ID_WIDTH> > m_axi_OUT_r_RID;
    sc_in< sc_uint<C_M_AXI_OUT_R_RUSER_WIDTH> > m_axi_OUT_r_RUSER;
    sc_in< sc_lv<2> > m_axi_OUT_r_RRESP;
    sc_in< sc_logic > m_axi_OUT_r_BVALID;
    sc_out< sc_logic > m_axi_OUT_r_BREADY;
    sc_in< sc_lv<2> > m_axi_OUT_r_BRESP;
    sc_in< sc_uint<C_M_AXI_OUT_R_ID_WIDTH> > m_axi_OUT_r_BID;
    sc_in< sc_uint<C_M_AXI_OUT_R_BUSER_WIDTH> > m_axi_OUT_r_BUSER;
    sc_in< sc_logic > s_axi_CTRL_AWVALID;
    sc_out< sc_logic > s_axi_CTRL_AWREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_ADDR_WIDTH> > s_axi_CTRL_AWADDR;
    sc_in< sc_logic > s_axi_CTRL_WVALID;
    sc_out< sc_logic > s_axi_CTRL_WREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_DATA_WIDTH> > s_axi_CTRL_WDATA;
    sc_in< sc_uint<C_S_AXI_CTRL_DATA_WIDTH/8> > s_axi_CTRL_WSTRB;
    sc_in< sc_logic > s_axi_CTRL_ARVALID;
    sc_out< sc_logic > s_axi_CTRL_ARREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_ADDR_WIDTH> > s_axi_CTRL_ARADDR;
    sc_out< sc_logic > s_axi_CTRL_RVALID;
    sc_in< sc_logic > s_axi_CTRL_RREADY;
    sc_out< sc_uint<C_S_AXI_CTRL_DATA_WIDTH> > s_axi_CTRL_RDATA;
    sc_out< sc_lv<2> > s_axi_CTRL_RRESP;
    sc_out< sc_logic > s_axi_CTRL_BVALID;
    sc_in< sc_logic > s_axi_CTRL_BREADY;
    sc_out< sc_lv<2> > s_axi_CTRL_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const6;
    sc_signal< sc_lv<32> > ap_var_for_const7;
    sc_signal< sc_lv<1> > ap_var_for_const1;
    sc_signal< sc_lv<3> > ap_var_for_const3;
    sc_signal< sc_lv<32> > ap_var_for_const2;
    sc_signal< sc_lv<2> > ap_var_for_const4;
    sc_signal< sc_lv<4> > ap_var_for_const5;
    sc_signal< sc_lv<8> > ap_var_for_const10;
    sc_signal< sc_lv<64> > ap_var_for_const8;
    sc_signal< sc_lv<8> > ap_var_for_const9;


    // Module declarations
    bn(sc_module_name name);
    SC_HAS_PROCESS(bn);

    ~bn();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    bn_CTRL_s_axi<C_S_AXI_CTRL_ADDR_WIDTH,C_S_AXI_CTRL_DATA_WIDTH>* bn_CTRL_s_axi_U;
    bn_IN_r_m_axi<0,64,32,5,16,16,16,16,C_M_AXI_IN_R_ID_WIDTH,C_M_AXI_IN_R_ADDR_WIDTH,C_M_AXI_IN_R_DATA_WIDTH,C_M_AXI_IN_R_AWUSER_WIDTH,C_M_AXI_IN_R_ARUSER_WIDTH,C_M_AXI_IN_R_WUSER_WIDTH,C_M_AXI_IN_R_RUSER_WIDTH,C_M_AXI_IN_R_BUSER_WIDTH,C_M_AXI_IN_R_USER_VALUE,C_M_AXI_IN_R_PROT_VALUE,C_M_AXI_IN_R_CACHE_VALUE>* bn_IN_r_m_axi_U;
    bn_BETA_m_axi<0,64,32,5,16,16,16,16,C_M_AXI_BETA_ID_WIDTH,C_M_AXI_BETA_ADDR_WIDTH,C_M_AXI_BETA_DATA_WIDTH,C_M_AXI_BETA_AWUSER_WIDTH,C_M_AXI_BETA_ARUSER_WIDTH,C_M_AXI_BETA_WUSER_WIDTH,C_M_AXI_BETA_RUSER_WIDTH,C_M_AXI_BETA_BUSER_WIDTH,C_M_AXI_BETA_USER_VALUE,C_M_AXI_BETA_PROT_VALUE,C_M_AXI_BETA_CACHE_VALUE>* bn_BETA_m_axi_U;
    bn_GAMMA_m_axi<0,64,32,5,16,16,16,16,C_M_AXI_GAMMA_ID_WIDTH,C_M_AXI_GAMMA_ADDR_WIDTH,C_M_AXI_GAMMA_DATA_WIDTH,C_M_AXI_GAMMA_AWUSER_WIDTH,C_M_AXI_GAMMA_ARUSER_WIDTH,C_M_AXI_GAMMA_WUSER_WIDTH,C_M_AXI_GAMMA_RUSER_WIDTH,C_M_AXI_GAMMA_BUSER_WIDTH,C_M_AXI_GAMMA_USER_VALUE,C_M_AXI_GAMMA_PROT_VALUE,C_M_AXI_GAMMA_CACHE_VALUE>* bn_GAMMA_m_axi_U;
    bn_M_M_m_axi<0,64,32,5,16,16,16,16,C_M_AXI_M_M_ID_WIDTH,C_M_AXI_M_M_ADDR_WIDTH,C_M_AXI_M_M_DATA_WIDTH,C_M_AXI_M_M_AWUSER_WIDTH,C_M_AXI_M_M_ARUSER_WIDTH,C_M_AXI_M_M_WUSER_WIDTH,C_M_AXI_M_M_RUSER_WIDTH,C_M_AXI_M_M_BUSER_WIDTH,C_M_AXI_M_M_USER_VALUE,C_M_AXI_M_M_PROT_VALUE,C_M_AXI_M_M_CACHE_VALUE>* bn_M_M_m_axi_U;
    bn_M_V_m_axi<0,64,32,5,16,16,16,16,C_M_AXI_M_V_ID_WIDTH,C_M_AXI_M_V_ADDR_WIDTH,C_M_AXI_M_V_DATA_WIDTH,C_M_AXI_M_V_AWUSER_WIDTH,C_M_AXI_M_V_ARUSER_WIDTH,C_M_AXI_M_V_WUSER_WIDTH,C_M_AXI_M_V_RUSER_WIDTH,C_M_AXI_M_V_BUSER_WIDTH,C_M_AXI_M_V_USER_VALUE,C_M_AXI_M_V_PROT_VALUE,C_M_AXI_M_V_CACHE_VALUE>* bn_M_V_m_axi_U;
    bn_OUT_r_m_axi<0,64,32,5,16,16,16,16,C_M_AXI_OUT_R_ID_WIDTH,C_M_AXI_OUT_R_ADDR_WIDTH,C_M_AXI_OUT_R_DATA_WIDTH,C_M_AXI_OUT_R_AWUSER_WIDTH,C_M_AXI_OUT_R_ARUSER_WIDTH,C_M_AXI_OUT_R_WUSER_WIDTH,C_M_AXI_OUT_R_RUSER_WIDTH,C_M_AXI_OUT_R_BUSER_WIDTH,C_M_AXI_OUT_R_USER_VALUE,C_M_AXI_OUT_R_PROT_VALUE,C_M_AXI_OUT_R_CACHE_VALUE>* bn_OUT_r_m_axi_U;
    sqrt_fixed_16_6_s* grp_sqrt_fixed_16_6_s_fu_328;
    bn_sdiv_44s_14ns_bkb<1,48,44,14,44>* bn_sdiv_44s_14ns_bkb_U2;
    bn_ama_submuladd_cud<1,1,16,16,16,26,33>* bn_ama_submuladd_cud_U3;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<74> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > in_V;
    sc_signal< sc_lv<32> > beta_V;
    sc_signal< sc_lv<32> > gamma_V;
    sc_signal< sc_lv<32> > moving_mean_V;
    sc_signal< sc_lv<32> > moving_variance_V;
    sc_signal< sc_lv<32> > out_V;
    sc_signal< sc_logic > IN_r_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > IN_r_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<1> > icmp_ln281_fu_461_p2;
    sc_signal< sc_logic > BETA_blk_n_AR;
    sc_signal< sc_logic > BETA_blk_n_R;
    sc_signal< sc_logic > GAMMA_blk_n_AR;
    sc_signal< sc_logic > GAMMA_blk_n_R;
    sc_signal< sc_logic > M_M_blk_n_AR;
    sc_signal< sc_logic > M_M_blk_n_R;
    sc_signal< sc_logic > M_V_blk_n_AR;
    sc_signal< sc_logic > M_V_blk_n_R;
    sc_signal< sc_logic > OUT_r_blk_n_AW;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > OUT_r_blk_n_W;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<1> > icmp_ln288_fu_473_p2;
    sc_signal< sc_logic > OUT_r_blk_n_B;
    sc_signal< sc_logic > ap_CS_fsm_state74;
    sc_signal< sc_logic > IN_r_AWREADY;
    sc_signal< sc_logic > IN_r_WREADY;
    sc_signal< sc_logic > IN_r_ARVALID;
    sc_signal< sc_logic > IN_r_ARREADY;
    sc_signal< sc_lv<32> > IN_r_ARADDR;
    sc_signal< sc_logic > IN_r_RVALID;
    sc_signal< sc_logic > IN_r_RREADY;
    sc_signal< sc_lv<64> > IN_r_RDATA;
    sc_signal< sc_logic > IN_r_RLAST;
    sc_signal< sc_lv<1> > IN_r_RID;
    sc_signal< sc_lv<1> > IN_r_RUSER;
    sc_signal< sc_lv<2> > IN_r_RRESP;
    sc_signal< sc_logic > IN_r_BVALID;
    sc_signal< sc_lv<2> > IN_r_BRESP;
    sc_signal< sc_lv<1> > IN_r_BID;
    sc_signal< sc_lv<1> > IN_r_BUSER;
    sc_signal< sc_logic > BETA_AWREADY;
    sc_signal< sc_logic > BETA_WREADY;
    sc_signal< sc_logic > BETA_ARVALID;
    sc_signal< sc_logic > BETA_ARREADY;
    sc_signal< sc_lv<32> > BETA_ARADDR;
    sc_signal< sc_logic > BETA_RVALID;
    sc_signal< sc_logic > BETA_RREADY;
    sc_signal< sc_lv<64> > BETA_RDATA;
    sc_signal< sc_logic > BETA_RLAST;
    sc_signal< sc_lv<1> > BETA_RID;
    sc_signal< sc_lv<1> > BETA_RUSER;
    sc_signal< sc_lv<2> > BETA_RRESP;
    sc_signal< sc_logic > BETA_BVALID;
    sc_signal< sc_lv<2> > BETA_BRESP;
    sc_signal< sc_lv<1> > BETA_BID;
    sc_signal< sc_lv<1> > BETA_BUSER;
    sc_signal< sc_logic > GAMMA_AWREADY;
    sc_signal< sc_logic > GAMMA_WREADY;
    sc_signal< sc_logic > GAMMA_ARVALID;
    sc_signal< sc_logic > GAMMA_ARREADY;
    sc_signal< sc_lv<32> > GAMMA_ARADDR;
    sc_signal< sc_logic > GAMMA_RVALID;
    sc_signal< sc_logic > GAMMA_RREADY;
    sc_signal< sc_lv<64> > GAMMA_RDATA;
    sc_signal< sc_logic > GAMMA_RLAST;
    sc_signal< sc_lv<1> > GAMMA_RID;
    sc_signal< sc_lv<1> > GAMMA_RUSER;
    sc_signal< sc_lv<2> > GAMMA_RRESP;
    sc_signal< sc_logic > GAMMA_BVALID;
    sc_signal< sc_lv<2> > GAMMA_BRESP;
    sc_signal< sc_lv<1> > GAMMA_BID;
    sc_signal< sc_lv<1> > GAMMA_BUSER;
    sc_signal< sc_logic > M_M_AWREADY;
    sc_signal< sc_logic > M_M_WREADY;
    sc_signal< sc_logic > M_M_ARVALID;
    sc_signal< sc_logic > M_M_ARREADY;
    sc_signal< sc_lv<32> > M_M_ARADDR;
    sc_signal< sc_logic > M_M_RVALID;
    sc_signal< sc_logic > M_M_RREADY;
    sc_signal< sc_lv<64> > M_M_RDATA;
    sc_signal< sc_logic > M_M_RLAST;
    sc_signal< sc_lv<1> > M_M_RID;
    sc_signal< sc_lv<1> > M_M_RUSER;
    sc_signal< sc_lv<2> > M_M_RRESP;
    sc_signal< sc_logic > M_M_BVALID;
    sc_signal< sc_lv<2> > M_M_BRESP;
    sc_signal< sc_lv<1> > M_M_BID;
    sc_signal< sc_lv<1> > M_M_BUSER;
    sc_signal< sc_logic > M_V_AWREADY;
    sc_signal< sc_logic > M_V_WREADY;
    sc_signal< sc_logic > M_V_ARVALID;
    sc_signal< sc_logic > M_V_ARREADY;
    sc_signal< sc_lv<32> > M_V_ARADDR;
    sc_signal< sc_logic > M_V_RVALID;
    sc_signal< sc_logic > M_V_RREADY;
    sc_signal< sc_lv<64> > M_V_RDATA;
    sc_signal< sc_logic > M_V_RLAST;
    sc_signal< sc_lv<1> > M_V_RID;
    sc_signal< sc_lv<1> > M_V_RUSER;
    sc_signal< sc_lv<2> > M_V_RRESP;
    sc_signal< sc_logic > M_V_BVALID;
    sc_signal< sc_lv<2> > M_V_BRESP;
    sc_signal< sc_lv<1> > M_V_BID;
    sc_signal< sc_lv<1> > M_V_BUSER;
    sc_signal< sc_logic > OUT_r_AWVALID;
    sc_signal< sc_logic > OUT_r_AWREADY;
    sc_signal< sc_lv<32> > OUT_r_AWADDR;
    sc_signal< sc_logic > OUT_r_WVALID;
    sc_signal< sc_logic > OUT_r_WREADY;
    sc_signal< sc_logic > OUT_r_ARREADY;
    sc_signal< sc_logic > OUT_r_RVALID;
    sc_signal< sc_lv<64> > OUT_r_RDATA;
    sc_signal< sc_logic > OUT_r_RLAST;
    sc_signal< sc_lv<1> > OUT_r_RID;
    sc_signal< sc_lv<1> > OUT_r_RUSER;
    sc_signal< sc_lv<2> > OUT_r_RRESP;
    sc_signal< sc_logic > OUT_r_BVALID;
    sc_signal< sc_logic > OUT_r_BREADY;
    sc_signal< sc_lv<2> > OUT_r_BRESP;
    sc_signal< sc_lv<1> > OUT_r_BID;
    sc_signal< sc_lv<1> > OUT_r_BUSER;
    sc_signal< sc_lv<29> > out_V1_reg_1477;
    sc_signal< sc_lv<29> > moving_variance_V9_reg_1482;
    sc_signal< sc_lv<29> > moving_mean_V7_reg_1487;
    sc_signal< sc_lv<29> > gamma_V5_reg_1492;
    sc_signal< sc_lv<29> > beta_V3_reg_1497;
    sc_signal< sc_lv<29> > in_V1_reg_1502;
    sc_signal< bool > ap_block_state2_io;
    sc_signal< sc_lv<6> > i_fu_467_p2;
    sc_signal< sc_lv<6> > i_reg_1546;
    sc_signal< bool > ap_block_state9;
    sc_signal< sc_lv<64> > in_pack_V_reg_1551;
    sc_signal< sc_lv<64> > beta_pack_V_reg_1557;
    sc_signal< sc_lv<64> > gamma_pack_V_reg_1563;
    sc_signal< sc_lv<64> > moving_mean_pack_V_reg_1569;
    sc_signal< sc_lv<64> > moving_variance_pack_reg_1575;
    sc_signal< sc_lv<3> > k_fu_479_p2;
    sc_signal< sc_lv<3> > k_reg_1584;
    sc_signal< bool > ap_block_state10_io;
    sc_signal< sc_lv<6> > index2_fu_489_p3;
    sc_signal< sc_lv<6> > index2_reg_1589;
    sc_signal< sc_lv<6> > index1_fu_498_p2;
    sc_signal< sc_lv<6> > index1_reg_1599;
    sc_signal< sc_lv<1> > grp_fu_333_p2;
    sc_signal< sc_lv<1> > icmp_ln647_reg_1609;
    sc_signal< sc_lv<1> > icmp_ln647_1_fu_505_p2;
    sc_signal< sc_lv<1> > icmp_ln647_1_reg_1616;
    sc_signal< sc_lv<1> > icmp_ln647_2_fu_511_p2;
    sc_signal< sc_lv<1> > icmp_ln647_2_reg_1623;
    sc_signal< sc_lv<1> > icmp_ln647_3_fu_517_p2;
    sc_signal< sc_lv<1> > icmp_ln647_3_reg_1630;
    sc_signal< sc_lv<7> > sub_ln647_14_fu_587_p2;
    sc_signal< sc_lv<7> > sub_ln647_14_reg_1637;
    sc_signal< sc_lv<64> > lshr_ln647_8_fu_597_p2;
    sc_signal< sc_lv<64> > lshr_ln647_8_reg_1642;
    sc_signal< sc_lv<16> > in_m_3_V_fu_688_p1;
    sc_signal< sc_lv<16> > in_m_3_V_reg_1647;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<16> > gamma_m_3_V_fu_862_p1;
    sc_signal< sc_lv<16> > gamma_m_3_V_reg_1652;
    sc_signal< sc_lv<16> > moving_mean_m_3_V_fu_951_p1;
    sc_signal< sc_lv<16> > moving_mean_m_3_V_reg_1657;
    sc_signal< sc_lv<16> > x_V_fu_1051_p3;
    sc_signal< sc_lv<16> > x_V_reg_1662;
    sc_signal< sc_lv<16> > trunc_ln728_fu_1059_p1;
    sc_signal< sc_lv<16> > trunc_ln728_reg_1667;
    sc_signal< sc_lv<33> > grp_fu_1461_p4;
    sc_signal< sc_lv<33> > ret_V_11_reg_1672;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<13> > grp_sqrt_fixed_16_6_s_fu_328_ap_return;
    sc_signal< sc_lv<13> > x_sqrt_V_reg_1677;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_lv<1> > p_Result_22_reg_1692;
    sc_signal< sc_logic > ap_CS_fsm_state68;
    sc_signal< sc_lv<16> > tmp_V_7_fu_1141_p2;
    sc_signal< sc_lv<16> > tmp_V_7_reg_1698;
    sc_signal< sc_lv<1> > carry_1_fu_1161_p2;
    sc_signal< sc_lv<1> > carry_1_reg_1704;
    sc_signal< sc_lv<1> > p_Result_24_fu_1167_p3;
    sc_signal< sc_lv<1> > p_Result_24_reg_1710;
    sc_signal< sc_lv<1> > Range1_all_ones_fu_1201_p2;
    sc_signal< sc_lv<1> > Range1_all_ones_reg_1715;
    sc_signal< sc_lv<1> > Range1_all_zeros_fu_1207_p2;
    sc_signal< sc_lv<1> > Range1_all_zeros_reg_1721;
    sc_signal< sc_lv<1> > and_ln786_fu_1241_p2;
    sc_signal< sc_lv<1> > and_ln786_reg_1726;
    sc_signal< sc_lv<16> > p_Val2_21_fu_1325_p3;
    sc_signal< sc_lv<16> > p_Val2_21_reg_1732;
    sc_signal< sc_logic > ap_CS_fsm_state69;
    sc_signal< sc_lv<6> > i_0_reg_306;
    sc_signal< sc_lv<3> > k_0_reg_317;
    sc_signal< sc_logic > ap_CS_fsm_state70;
    sc_signal< sc_lv<64> > empty_27_fu_401_p1;
    sc_signal< sc_lv<64> > empty_28_fu_411_p1;
    sc_signal< sc_lv<64> > empty_29_fu_421_p1;
    sc_signal< sc_lv<64> > empty_30_fu_431_p1;
    sc_signal< sc_lv<64> > empty_31_fu_441_p1;
    sc_signal< sc_lv<64> > empty_fu_451_p1;
    sc_signal< sc_lv<64> > p_Val2_s_fu_190;
    sc_signal< sc_lv<64> > p_Result_25_fu_1450_p2;
    sc_signal< sc_lv<6> > grp_fu_333_p0;
    sc_signal< sc_lv<6> > grp_fu_333_p1;
    sc_signal< sc_lv<2> > trunc_ln289_fu_485_p1;
    sc_signal< sc_lv<7> > zext_ln647_16_fu_529_p1;
    sc_signal< sc_lv<7> > zext_ln647_17_fu_533_p1;
    sc_signal< sc_lv<1> > icmp_ln647_4_fu_523_p2;
    sc_signal< sc_lv<7> > sub_ln647_12_fu_546_p2;
    sc_signal< sc_lv<7> > sub_ln647_13_fu_558_p2;
    sc_signal< sc_lv<64> > tmp_35_fu_537_p4;
    sc_signal< sc_lv<7> > xor_ln647_4_fu_552_p2;
    sc_signal< sc_lv<7> > select_ln647_12_fu_564_p3;
    sc_signal< sc_lv<7> > select_ln647_14_fu_579_p3;
    sc_signal< sc_lv<64> > select_ln647_13_fu_572_p3;
    sc_signal< sc_lv<64> > zext_ln647_18_fu_593_p1;
    sc_signal< sc_lv<7> > zext_ln647_fu_603_p1;
    sc_signal< sc_lv<7> > zext_ln647_1_fu_606_p1;
    sc_signal< sc_lv<7> > sub_ln647_fu_618_p2;
    sc_signal< sc_lv<7> > sub_ln647_1_fu_630_p2;
    sc_signal< sc_lv<64> > tmp_31_fu_609_p4;
    sc_signal< sc_lv<7> > xor_ln647_fu_624_p2;
    sc_signal< sc_lv<7> > select_ln647_fu_636_p3;
    sc_signal< sc_lv<7> > select_ln647_2_fu_649_p3;
    sc_signal< sc_lv<7> > sub_ln647_2_fu_656_p2;
    sc_signal< sc_lv<64> > select_ln647_1_fu_643_p3;
    sc_signal< sc_lv<64> > zext_ln647_2_fu_662_p1;
    sc_signal< sc_lv<64> > zext_ln647_3_fu_666_p1;
    sc_signal< sc_lv<64> > lshr_ln647_fu_670_p2;
    sc_signal< sc_lv<64> > lshr_ln647_1_fu_676_p2;
    sc_signal< sc_lv<64> > p_Result_s_fu_682_p2;
    sc_signal< sc_lv<7> > zext_ln647_4_fu_692_p1;
    sc_signal< sc_lv<7> > zext_ln647_5_fu_695_p1;
    sc_signal< sc_lv<7> > sub_ln647_3_fu_707_p2;
    sc_signal< sc_lv<7> > sub_ln647_4_fu_719_p2;
    sc_signal< sc_lv<64> > tmp_32_fu_698_p4;
    sc_signal< sc_lv<7> > xor_ln647_1_fu_713_p2;
    sc_signal< sc_lv<7> > select_ln647_3_fu_725_p3;
    sc_signal< sc_lv<7> > select_ln647_5_fu_738_p3;
    sc_signal< sc_lv<7> > sub_ln647_5_fu_745_p2;
    sc_signal< sc_lv<64> > select_ln647_4_fu_732_p3;
    sc_signal< sc_lv<64> > zext_ln647_6_fu_751_p1;
    sc_signal< sc_lv<64> > zext_ln647_7_fu_755_p1;
    sc_signal< sc_lv<64> > lshr_ln647_2_fu_759_p2;
    sc_signal< sc_lv<64> > lshr_ln647_3_fu_765_p2;
    sc_signal< sc_lv<7> > zext_ln647_8_fu_777_p1;
    sc_signal< sc_lv<7> > zext_ln647_9_fu_780_p1;
    sc_signal< sc_lv<7> > sub_ln647_6_fu_792_p2;
    sc_signal< sc_lv<7> > sub_ln647_7_fu_804_p2;
    sc_signal< sc_lv<64> > tmp_33_fu_783_p4;
    sc_signal< sc_lv<7> > xor_ln647_2_fu_798_p2;
    sc_signal< sc_lv<7> > select_ln647_6_fu_810_p3;
    sc_signal< sc_lv<7> > select_ln647_8_fu_823_p3;
    sc_signal< sc_lv<7> > sub_ln647_8_fu_830_p2;
    sc_signal< sc_lv<64> > select_ln647_7_fu_817_p3;
    sc_signal< sc_lv<64> > zext_ln647_10_fu_836_p1;
    sc_signal< sc_lv<64> > zext_ln647_11_fu_840_p1;
    sc_signal< sc_lv<64> > lshr_ln647_4_fu_844_p2;
    sc_signal< sc_lv<64> > lshr_ln647_5_fu_850_p2;
    sc_signal< sc_lv<64> > p_Result_17_fu_856_p2;
    sc_signal< sc_lv<7> > zext_ln647_12_fu_866_p1;
    sc_signal< sc_lv<7> > zext_ln647_13_fu_869_p1;
    sc_signal< sc_lv<7> > sub_ln647_9_fu_881_p2;
    sc_signal< sc_lv<7> > sub_ln647_10_fu_893_p2;
    sc_signal< sc_lv<64> > tmp_34_fu_872_p4;
    sc_signal< sc_lv<7> > xor_ln647_3_fu_887_p2;
    sc_signal< sc_lv<7> > select_ln647_9_fu_899_p3;
    sc_signal< sc_lv<7> > select_ln647_11_fu_912_p3;
    sc_signal< sc_lv<7> > sub_ln647_11_fu_919_p2;
    sc_signal< sc_lv<64> > select_ln647_10_fu_906_p3;
    sc_signal< sc_lv<64> > zext_ln647_14_fu_925_p1;
    sc_signal< sc_lv<64> > zext_ln647_15_fu_929_p1;
    sc_signal< sc_lv<64> > lshr_ln647_6_fu_933_p2;
    sc_signal< sc_lv<64> > lshr_ln647_7_fu_939_p2;
    sc_signal< sc_lv<64> > p_Result_18_fu_945_p2;
    sc_signal< sc_lv<64> > zext_ln647_19_fu_955_p1;
    sc_signal< sc_lv<64> > lshr_ln647_9_fu_958_p2;
    sc_signal< sc_lv<64> > p_Result_19_fu_964_p2;
    sc_signal< sc_lv<16> > moving_variance_m_3_fu_969_p1;
    sc_signal< sc_lv<17> > lhs_V_fu_973_p1;
    sc_signal< sc_lv<17> > ret_V_10_fu_977_p2;
    sc_signal< sc_lv<16> > tmp_num_V_fu_991_p2;
    sc_signal< sc_lv<1> > p_Result_21_fu_997_p3;
    sc_signal< sc_lv<1> > p_Result_20_fu_983_p3;
    sc_signal< sc_lv<1> > xor_ln786_fu_1005_p2;
    sc_signal< sc_lv<1> > xor_ln340_1_fu_1023_p2;
    sc_signal< sc_lv<1> > xor_ln340_fu_1017_p2;
    sc_signal< sc_lv<1> > underflow_fu_1011_p2;
    sc_signal< sc_lv<1> > or_ln340_fu_1029_p2;
    sc_signal< sc_lv<16> > select_ln340_1_fu_1035_p3;
    sc_signal< sc_lv<16> > select_ln388_1_fu_1043_p3;
    sc_signal< sc_lv<64> > p_Result_16_fu_771_p2;
    sc_signal< sc_lv<26> > rhs_V_1_fu_1072_p3;
    sc_signal< sc_lv<43> > tmp_s_fu_1083_p3;
    sc_signal< sc_lv<44> > grp_fu_1097_p0;
    sc_signal< sc_lv<14> > grp_fu_1097_p1;
    sc_signal< sc_lv<44> > grp_fu_1097_p2;
    sc_signal< sc_lv<1> > tmp_40_fu_1129_p3;
    sc_signal< sc_lv<16> > tmp_V_fu_1111_p4;
    sc_signal< sc_lv<16> > zext_ln415_fu_1137_p1;
    sc_signal< sc_lv<1> > tmp_41_fu_1147_p3;
    sc_signal< sc_lv<1> > p_Result_23_fu_1121_p3;
    sc_signal< sc_lv<1> > xor_ln416_fu_1155_p2;
    sc_signal< sc_lv<17> > tmp_fu_1175_p4;
    sc_signal< sc_lv<18> > tmp_7_fu_1191_p4;
    sc_signal< sc_lv<1> > tmp_43_fu_1213_p3;
    sc_signal< sc_lv<1> > Range2_all_ones_fu_1185_p2;
    sc_signal< sc_lv<1> > xor_ln779_fu_1221_p2;
    sc_signal< sc_lv<1> > and_ln779_fu_1227_p2;
    sc_signal< sc_lv<1> > deleted_ones_fu_1233_p3;
    sc_signal< sc_lv<1> > deleted_zeros_fu_1247_p3;
    sc_signal< sc_lv<1> > xor_ln785_fu_1256_p2;
    sc_signal< sc_lv<1> > or_ln785_fu_1262_p2;
    sc_signal< sc_lv<1> > xor_ln785_1_fu_1267_p2;
    sc_signal< sc_lv<1> > and_ln781_fu_1252_p2;
    sc_signal< sc_lv<1> > or_ln786_fu_1278_p2;
    sc_signal< sc_lv<1> > xor_ln786_1_fu_1283_p2;
    sc_signal< sc_lv<1> > underflow_1_fu_1289_p2;
    sc_signal< sc_lv<1> > overflow_fu_1272_p2;
    sc_signal< sc_lv<1> > or_ln340_3_fu_1300_p2;
    sc_signal< sc_lv<1> > or_ln340_1_fu_1294_p2;
    sc_signal< sc_lv<1> > or_ln340_2_fu_1305_p2;
    sc_signal< sc_lv<16> > select_ln340_fu_1311_p3;
    sc_signal< sc_lv<16> > select_ln388_fu_1318_p3;
    sc_signal< sc_lv<7> > zext_ln414_fu_1336_p1;
    sc_signal< sc_lv<7> > zext_ln414_1_fu_1339_p1;
    sc_signal< sc_lv<7> > xor_ln414_fu_1342_p2;
    sc_signal< sc_lv<7> > select_ln414_fu_1348_p3;
    sc_signal< sc_lv<7> > select_ln414_2_fu_1364_p3;
    sc_signal< sc_lv<7> > select_ln414_1_fu_1356_p3;
    sc_signal< sc_lv<7> > xor_ln414_1_fu_1372_p2;
    sc_signal< sc_lv<64> > tmp_V_8_fu_1333_p1;
    sc_signal< sc_lv<64> > zext_ln414_2_fu_1378_p1;
    sc_signal< sc_lv<64> > shl_ln414_fu_1390_p2;
    sc_signal< sc_lv<64> > tmp_44_fu_1396_p4;
    sc_signal< sc_lv<64> > zext_ln414_3_fu_1382_p1;
    sc_signal< sc_lv<64> > zext_ln414_4_fu_1386_p1;
    sc_signal< sc_lv<64> > shl_ln414_1_fu_1414_p2;
    sc_signal< sc_lv<64> > lshr_ln414_fu_1420_p2;
    sc_signal< sc_lv<64> > and_ln414_fu_1426_p2;
    sc_signal< sc_lv<64> > xor_ln414_2_fu_1432_p2;
    sc_signal< sc_lv<64> > select_ln414_3_fu_1406_p3;
    sc_signal< sc_lv<64> > and_ln414_1_fu_1438_p2;
    sc_signal< sc_lv<64> > and_ln414_2_fu_1444_p2;
    sc_signal< sc_logic > grp_fu_1097_ap_start;
    sc_signal< sc_logic > grp_fu_1097_ap_done;
    sc_signal< sc_lv<74> > ap_NS_fsm;
    sc_signal< sc_lv<44> > grp_fu_1097_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<74> ap_ST_fsm_state1;
    static const sc_lv<74> ap_ST_fsm_state2;
    static const sc_lv<74> ap_ST_fsm_state3;
    static const sc_lv<74> ap_ST_fsm_state4;
    static const sc_lv<74> ap_ST_fsm_state5;
    static const sc_lv<74> ap_ST_fsm_state6;
    static const sc_lv<74> ap_ST_fsm_state7;
    static const sc_lv<74> ap_ST_fsm_state8;
    static const sc_lv<74> ap_ST_fsm_state9;
    static const sc_lv<74> ap_ST_fsm_state10;
    static const sc_lv<74> ap_ST_fsm_state11;
    static const sc_lv<74> ap_ST_fsm_state12;
    static const sc_lv<74> ap_ST_fsm_state13;
    static const sc_lv<74> ap_ST_fsm_state14;
    static const sc_lv<74> ap_ST_fsm_state15;
    static const sc_lv<74> ap_ST_fsm_state16;
    static const sc_lv<74> ap_ST_fsm_state17;
    static const sc_lv<74> ap_ST_fsm_state18;
    static const sc_lv<74> ap_ST_fsm_state19;
    static const sc_lv<74> ap_ST_fsm_state20;
    static const sc_lv<74> ap_ST_fsm_state21;
    static const sc_lv<74> ap_ST_fsm_state22;
    static const sc_lv<74> ap_ST_fsm_state23;
    static const sc_lv<74> ap_ST_fsm_state24;
    static const sc_lv<74> ap_ST_fsm_state25;
    static const sc_lv<74> ap_ST_fsm_state26;
    static const sc_lv<74> ap_ST_fsm_state27;
    static const sc_lv<74> ap_ST_fsm_state28;
    static const sc_lv<74> ap_ST_fsm_state29;
    static const sc_lv<74> ap_ST_fsm_state30;
    static const sc_lv<74> ap_ST_fsm_state31;
    static const sc_lv<74> ap_ST_fsm_state32;
    static const sc_lv<74> ap_ST_fsm_state33;
    static const sc_lv<74> ap_ST_fsm_state34;
    static const sc_lv<74> ap_ST_fsm_state35;
    static const sc_lv<74> ap_ST_fsm_state36;
    static const sc_lv<74> ap_ST_fsm_state37;
    static const sc_lv<74> ap_ST_fsm_state38;
    static const sc_lv<74> ap_ST_fsm_state39;
    static const sc_lv<74> ap_ST_fsm_state40;
    static const sc_lv<74> ap_ST_fsm_state41;
    static const sc_lv<74> ap_ST_fsm_state42;
    static const sc_lv<74> ap_ST_fsm_state43;
    static const sc_lv<74> ap_ST_fsm_state44;
    static const sc_lv<74> ap_ST_fsm_state45;
    static const sc_lv<74> ap_ST_fsm_state46;
    static const sc_lv<74> ap_ST_fsm_state47;
    static const sc_lv<74> ap_ST_fsm_state48;
    static const sc_lv<74> ap_ST_fsm_state49;
    static const sc_lv<74> ap_ST_fsm_state50;
    static const sc_lv<74> ap_ST_fsm_state51;
    static const sc_lv<74> ap_ST_fsm_state52;
    static const sc_lv<74> ap_ST_fsm_state53;
    static const sc_lv<74> ap_ST_fsm_state54;
    static const sc_lv<74> ap_ST_fsm_state55;
    static const sc_lv<74> ap_ST_fsm_state56;
    static const sc_lv<74> ap_ST_fsm_state57;
    static const sc_lv<74> ap_ST_fsm_state58;
    static const sc_lv<74> ap_ST_fsm_state59;
    static const sc_lv<74> ap_ST_fsm_state60;
    static const sc_lv<74> ap_ST_fsm_state61;
    static const sc_lv<74> ap_ST_fsm_state62;
    static const sc_lv<74> ap_ST_fsm_state63;
    static const sc_lv<74> ap_ST_fsm_state64;
    static const sc_lv<74> ap_ST_fsm_state65;
    static const sc_lv<74> ap_ST_fsm_state66;
    static const sc_lv<74> ap_ST_fsm_state67;
    static const sc_lv<74> ap_ST_fsm_state68;
    static const sc_lv<74> ap_ST_fsm_state69;
    static const sc_lv<74> ap_ST_fsm_state70;
    static const sc_lv<74> ap_ST_fsm_state71;
    static const sc_lv<74> ap_ST_fsm_state72;
    static const sc_lv<74> ap_ST_fsm_state73;
    static const sc_lv<74> ap_ST_fsm_state74;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_49;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_IN_R_USER_VALUE;
    static const int C_M_AXI_IN_R_PROT_VALUE;
    static const int C_M_AXI_IN_R_CACHE_VALUE;
    static const int C_M_AXI_DATA_WIDTH;
    static const int C_M_AXI_BETA_USER_VALUE;
    static const int C_M_AXI_BETA_PROT_VALUE;
    static const int C_M_AXI_BETA_CACHE_VALUE;
    static const int C_M_AXI_GAMMA_USER_VALUE;
    static const int C_M_AXI_GAMMA_PROT_VALUE;
    static const int C_M_AXI_GAMMA_CACHE_VALUE;
    static const int C_M_AXI_M_M_USER_VALUE;
    static const int C_M_AXI_M_M_PROT_VALUE;
    static const int C_M_AXI_M_M_CACHE_VALUE;
    static const int C_M_AXI_M_V_USER_VALUE;
    static const int C_M_AXI_M_V_PROT_VALUE;
    static const int C_M_AXI_M_V_CACHE_VALUE;
    static const int C_M_AXI_OUT_R_USER_VALUE;
    static const int C_M_AXI_OUT_R_PROT_VALUE;
    static const int C_M_AXI_OUT_R_CACHE_VALUE;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_43;
    static const sc_lv<32> ap_const_lv32_44;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_45;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<6> ap_const_lv6_F;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<7> ap_const_lv7_3F;
    static const sc_lv<64> ap_const_lv64_FFFFFFFFFFFFFFFF;
    static const sc_lv<17> ap_const_lv17_1;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<16> ap_const_lv16_7FFF;
    static const sc_lv<16> ap_const_lv16_8000;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<32> ap_const_lv32_2B;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<17> ap_const_lv17_1FFFF;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<18> ap_const_lv18_3FFFF;
    static const sc_lv<18> ap_const_lv18_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const7();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const10();
    void thread_ap_var_for_const8();
    void thread_ap_var_for_const9();
    void thread_ap_clk_no_reset_();
    void thread_BETA_ARADDR();
    void thread_BETA_ARVALID();
    void thread_BETA_RREADY();
    void thread_BETA_blk_n_AR();
    void thread_BETA_blk_n_R();
    void thread_GAMMA_ARADDR();
    void thread_GAMMA_ARVALID();
    void thread_GAMMA_RREADY();
    void thread_GAMMA_blk_n_AR();
    void thread_GAMMA_blk_n_R();
    void thread_IN_r_ARADDR();
    void thread_IN_r_ARVALID();
    void thread_IN_r_RREADY();
    void thread_IN_r_blk_n_AR();
    void thread_IN_r_blk_n_R();
    void thread_M_M_ARADDR();
    void thread_M_M_ARVALID();
    void thread_M_M_RREADY();
    void thread_M_M_blk_n_AR();
    void thread_M_M_blk_n_R();
    void thread_M_V_ARADDR();
    void thread_M_V_ARVALID();
    void thread_M_V_RREADY();
    void thread_M_V_blk_n_AR();
    void thread_M_V_blk_n_R();
    void thread_OUT_r_AWADDR();
    void thread_OUT_r_AWVALID();
    void thread_OUT_r_BREADY();
    void thread_OUT_r_WVALID();
    void thread_OUT_r_blk_n_AW();
    void thread_OUT_r_blk_n_B();
    void thread_OUT_r_blk_n_W();
    void thread_Range1_all_ones_fu_1201_p2();
    void thread_Range1_all_zeros_fu_1207_p2();
    void thread_Range2_all_ones_fu_1185_p2();
    void thread_and_ln414_1_fu_1438_p2();
    void thread_and_ln414_2_fu_1444_p2();
    void thread_and_ln414_fu_1426_p2();
    void thread_and_ln779_fu_1227_p2();
    void thread_and_ln781_fu_1252_p2();
    void thread_and_ln786_fu_1241_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state68();
    void thread_ap_CS_fsm_state69();
    void thread_ap_CS_fsm_state70();
    void thread_ap_CS_fsm_state74();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state10_io();
    void thread_ap_block_state2_io();
    void thread_ap_block_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_carry_1_fu_1161_p2();
    void thread_deleted_ones_fu_1233_p3();
    void thread_deleted_zeros_fu_1247_p3();
    void thread_empty_27_fu_401_p1();
    void thread_empty_28_fu_411_p1();
    void thread_empty_29_fu_421_p1();
    void thread_empty_30_fu_431_p1();
    void thread_empty_31_fu_441_p1();
    void thread_empty_fu_451_p1();
    void thread_gamma_m_3_V_fu_862_p1();
    void thread_grp_fu_1097_ap_start();
    void thread_grp_fu_1097_p0();
    void thread_grp_fu_1097_p1();
    void thread_grp_fu_1097_p10();
    void thread_grp_fu_333_p0();
    void thread_grp_fu_333_p1();
    void thread_grp_fu_333_p2();
    void thread_i_fu_467_p2();
    void thread_icmp_ln281_fu_461_p2();
    void thread_icmp_ln288_fu_473_p2();
    void thread_icmp_ln647_1_fu_505_p2();
    void thread_icmp_ln647_2_fu_511_p2();
    void thread_icmp_ln647_3_fu_517_p2();
    void thread_icmp_ln647_4_fu_523_p2();
    void thread_in_m_3_V_fu_688_p1();
    void thread_index1_fu_498_p2();
    void thread_index2_fu_489_p3();
    void thread_k_fu_479_p2();
    void thread_lhs_V_fu_973_p1();
    void thread_lshr_ln414_fu_1420_p2();
    void thread_lshr_ln647_1_fu_676_p2();
    void thread_lshr_ln647_2_fu_759_p2();
    void thread_lshr_ln647_3_fu_765_p2();
    void thread_lshr_ln647_4_fu_844_p2();
    void thread_lshr_ln647_5_fu_850_p2();
    void thread_lshr_ln647_6_fu_933_p2();
    void thread_lshr_ln647_7_fu_939_p2();
    void thread_lshr_ln647_8_fu_597_p2();
    void thread_lshr_ln647_9_fu_958_p2();
    void thread_lshr_ln647_fu_670_p2();
    void thread_moving_mean_m_3_V_fu_951_p1();
    void thread_moving_variance_m_3_fu_969_p1();
    void thread_or_ln340_1_fu_1294_p2();
    void thread_or_ln340_2_fu_1305_p2();
    void thread_or_ln340_3_fu_1300_p2();
    void thread_or_ln340_fu_1029_p2();
    void thread_or_ln785_fu_1262_p2();
    void thread_or_ln786_fu_1278_p2();
    void thread_overflow_fu_1272_p2();
    void thread_p_Result_16_fu_771_p2();
    void thread_p_Result_17_fu_856_p2();
    void thread_p_Result_18_fu_945_p2();
    void thread_p_Result_19_fu_964_p2();
    void thread_p_Result_20_fu_983_p3();
    void thread_p_Result_21_fu_997_p3();
    void thread_p_Result_23_fu_1121_p3();
    void thread_p_Result_24_fu_1167_p3();
    void thread_p_Result_25_fu_1450_p2();
    void thread_p_Result_s_fu_682_p2();
    void thread_p_Val2_21_fu_1325_p3();
    void thread_ret_V_10_fu_977_p2();
    void thread_rhs_V_1_fu_1072_p3();
    void thread_select_ln340_1_fu_1035_p3();
    void thread_select_ln340_fu_1311_p3();
    void thread_select_ln388_1_fu_1043_p3();
    void thread_select_ln388_fu_1318_p3();
    void thread_select_ln414_1_fu_1356_p3();
    void thread_select_ln414_2_fu_1364_p3();
    void thread_select_ln414_3_fu_1406_p3();
    void thread_select_ln414_fu_1348_p3();
    void thread_select_ln647_10_fu_906_p3();
    void thread_select_ln647_11_fu_912_p3();
    void thread_select_ln647_12_fu_564_p3();
    void thread_select_ln647_13_fu_572_p3();
    void thread_select_ln647_14_fu_579_p3();
    void thread_select_ln647_1_fu_643_p3();
    void thread_select_ln647_2_fu_649_p3();
    void thread_select_ln647_3_fu_725_p3();
    void thread_select_ln647_4_fu_732_p3();
    void thread_select_ln647_5_fu_738_p3();
    void thread_select_ln647_6_fu_810_p3();
    void thread_select_ln647_7_fu_817_p3();
    void thread_select_ln647_8_fu_823_p3();
    void thread_select_ln647_9_fu_899_p3();
    void thread_select_ln647_fu_636_p3();
    void thread_shl_ln414_1_fu_1414_p2();
    void thread_shl_ln414_fu_1390_p2();
    void thread_sub_ln647_10_fu_893_p2();
    void thread_sub_ln647_11_fu_919_p2();
    void thread_sub_ln647_12_fu_546_p2();
    void thread_sub_ln647_13_fu_558_p2();
    void thread_sub_ln647_14_fu_587_p2();
    void thread_sub_ln647_1_fu_630_p2();
    void thread_sub_ln647_2_fu_656_p2();
    void thread_sub_ln647_3_fu_707_p2();
    void thread_sub_ln647_4_fu_719_p2();
    void thread_sub_ln647_5_fu_745_p2();
    void thread_sub_ln647_6_fu_792_p2();
    void thread_sub_ln647_7_fu_804_p2();
    void thread_sub_ln647_8_fu_830_p2();
    void thread_sub_ln647_9_fu_881_p2();
    void thread_sub_ln647_fu_618_p2();
    void thread_tmp_31_fu_609_p4();
    void thread_tmp_32_fu_698_p4();
    void thread_tmp_33_fu_783_p4();
    void thread_tmp_34_fu_872_p4();
    void thread_tmp_35_fu_537_p4();
    void thread_tmp_40_fu_1129_p3();
    void thread_tmp_41_fu_1147_p3();
    void thread_tmp_43_fu_1213_p3();
    void thread_tmp_44_fu_1396_p4();
    void thread_tmp_7_fu_1191_p4();
    void thread_tmp_V_7_fu_1141_p2();
    void thread_tmp_V_8_fu_1333_p1();
    void thread_tmp_V_fu_1111_p4();
    void thread_tmp_fu_1175_p4();
    void thread_tmp_num_V_fu_991_p2();
    void thread_tmp_s_fu_1083_p3();
    void thread_trunc_ln289_fu_485_p1();
    void thread_trunc_ln728_fu_1059_p1();
    void thread_underflow_1_fu_1289_p2();
    void thread_underflow_fu_1011_p2();
    void thread_x_V_fu_1051_p3();
    void thread_xor_ln340_1_fu_1023_p2();
    void thread_xor_ln340_fu_1017_p2();
    void thread_xor_ln414_1_fu_1372_p2();
    void thread_xor_ln414_2_fu_1432_p2();
    void thread_xor_ln414_fu_1342_p2();
    void thread_xor_ln416_fu_1155_p2();
    void thread_xor_ln647_1_fu_713_p2();
    void thread_xor_ln647_2_fu_798_p2();
    void thread_xor_ln647_3_fu_887_p2();
    void thread_xor_ln647_4_fu_552_p2();
    void thread_xor_ln647_fu_624_p2();
    void thread_xor_ln779_fu_1221_p2();
    void thread_xor_ln785_1_fu_1267_p2();
    void thread_xor_ln785_fu_1256_p2();
    void thread_xor_ln786_1_fu_1283_p2();
    void thread_xor_ln786_fu_1005_p2();
    void thread_zext_ln414_1_fu_1339_p1();
    void thread_zext_ln414_2_fu_1378_p1();
    void thread_zext_ln414_3_fu_1382_p1();
    void thread_zext_ln414_4_fu_1386_p1();
    void thread_zext_ln414_fu_1336_p1();
    void thread_zext_ln415_fu_1137_p1();
    void thread_zext_ln647_10_fu_836_p1();
    void thread_zext_ln647_11_fu_840_p1();
    void thread_zext_ln647_12_fu_866_p1();
    void thread_zext_ln647_13_fu_869_p1();
    void thread_zext_ln647_14_fu_925_p1();
    void thread_zext_ln647_15_fu_929_p1();
    void thread_zext_ln647_16_fu_529_p1();
    void thread_zext_ln647_17_fu_533_p1();
    void thread_zext_ln647_18_fu_593_p1();
    void thread_zext_ln647_19_fu_955_p1();
    void thread_zext_ln647_1_fu_606_p1();
    void thread_zext_ln647_2_fu_662_p1();
    void thread_zext_ln647_3_fu_666_p1();
    void thread_zext_ln647_4_fu_692_p1();
    void thread_zext_ln647_5_fu_695_p1();
    void thread_zext_ln647_6_fu_751_p1();
    void thread_zext_ln647_7_fu_755_p1();
    void thread_zext_ln647_8_fu_777_p1();
    void thread_zext_ln647_9_fu_780_p1();
    void thread_zext_ln647_fu_603_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
